Search.setIndex({"docnames": ["api_reference/accounting", "api_reference/adapters/betfair", "api_reference/adapters/binance", "api_reference/adapters/index", "api_reference/adapters/interactive_brokers", "api_reference/analysis", "api_reference/backtest", "api_reference/cache", "api_reference/common", "api_reference/config", "api_reference/core", "api_reference/data", "api_reference/execution", "api_reference/index", "api_reference/indicators", "api_reference/infrastructure", "api_reference/live", "api_reference/model/currency", "api_reference/model/data", "api_reference/model/events", "api_reference/model/identifiers", "api_reference/model/index", "api_reference/model/instruments", "api_reference/model/objects", "api_reference/model/orderbook", "api_reference/model/orders", "api_reference/model/position", "api_reference/model/tick_scheme", "api_reference/msgbus", "api_reference/persistence", "api_reference/portfolio", "api_reference/risk", "api_reference/serialization", "api_reference/system", "api_reference/trading", "concepts/adapters", "concepts/advanced/advanced_orders", "concepts/advanced/data", "concepts/advanced/emulated_orders", "concepts/advanced/index", "concepts/advanced/portfolio_statistics", "concepts/advanced/synthetic_instruments", "concepts/architecture", "concepts/execution", "concepts/index", "concepts/instruments", "concepts/logging", "concepts/orders", "concepts/strategies", "developer_guide/coding_standards", "developer_guide/cython", "developer_guide/environment_setup", "developer_guide/index", "developer_guide/packaged_data", "developer_guide/rust", "developer_guide/testing", "getting_started/index", "getting_started/installation", "getting_started/quick_start", "guides/backtest_example", "guides/index", "guides/loading_external_data", "index", "integrations/betfair", "integrations/binance", "integrations/ib", "integrations/index"], "filenames": ["api_reference/accounting.md", "api_reference/adapters/betfair.md", "api_reference/adapters/binance.md", "api_reference/adapters/index.md", "api_reference/adapters/interactive_brokers.md", "api_reference/analysis.md", "api_reference/backtest.md", "api_reference/cache.md", "api_reference/common.md", "api_reference/config.md", "api_reference/core.md", "api_reference/data.md", "api_reference/execution.md", "api_reference/index.md", "api_reference/indicators.md", "api_reference/infrastructure.md", "api_reference/live.md", "api_reference/model/currency.md", "api_reference/model/data.md", "api_reference/model/events.md", "api_reference/model/identifiers.md", "api_reference/model/index.md", "api_reference/model/instruments.md", "api_reference/model/objects.md", "api_reference/model/orderbook.md", "api_reference/model/orders.md", "api_reference/model/position.md", "api_reference/model/tick_scheme.md", "api_reference/msgbus.md", "api_reference/persistence.md", "api_reference/portfolio.md", "api_reference/risk.md", "api_reference/serialization.md", "api_reference/system.md", "api_reference/trading.md", "concepts/adapters.md", "concepts/advanced/advanced_orders.md", "concepts/advanced/data.md", "concepts/advanced/emulated_orders.md", "concepts/advanced/index.md", "concepts/advanced/portfolio_statistics.md", "concepts/advanced/synthetic_instruments.md", "concepts/architecture.md", "concepts/execution.md", "concepts/index.md", "concepts/instruments.md", "concepts/logging.md", "concepts/orders.md", "concepts/strategies.md", "developer_guide/coding_standards.md", "developer_guide/cython.md", "developer_guide/environment_setup.md", "developer_guide/index.md", "developer_guide/packaged_data.md", "developer_guide/rust.md", "developer_guide/testing.md", "getting_started/index.md", "getting_started/installation.md", "getting_started/quick_start.md", "guides/backtest_example.md", "guides/index.md", "guides/loading_external_data.md", "index.md", "integrations/betfair.md", "integrations/binance.md", "integrations/ib.md", "integrations/index.md"], "titles": ["Accounting", "Betfair", "Binance", "Adapters", "Interactive Brokers", "Analysis", "Backtest", "Cache", "Common", "Config", "Core", "Data", "Execution", "API Reference", "Indicators", "Infrastructure", "Live", "Currency", "Data", "Events", "Identifiers", "Model", "Instruments", "Objects", "Order Book", "Orders", "Position", "Tick Scheme", "Message Bus", "Persistence", "Portfolio", "Risk", "Serialization", "System", "Trading", "Adapters", "Advanced Orders", "Data", "Emulated Orders", "Advanced", "Portfolio Statistics", "Synthetic instruments", "Architecture", "Execution", "Concepts", "Instruments", "Logging", "Orders", "Strategies", "Coding Standards", "Cython", "Environment Setup", "Developer Guide", "Packaged Data", "Rust", "Testing", "Getting Started", "Installation", "Quick Start", "Complete Backtest Example", "Guides", "Loading External Data", "NautilusTrader Documentation", "Betfair", "Binance", "Interactive Brokers", "Integrations"], "terms": {"The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 62, 63, 64, 65, 66], "subpackag": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 21, 28, 29, 30, 31, 32, 34, 35, 42, 44], "defin": [0, 2, 10, 14, 18, 19, 21, 22, 23, 24, 27, 32, 34, 37, 40, 41, 42, 43, 44, 45, 47, 48, 58, 61, 64], "both": [0, 1, 2, 4, 10, 11, 12, 15, 16, 22, 25, 28, 31, 34, 36, 40, 42, 43, 44, 45, 46, 52, 62, 64, 66], "differ": [0, 8, 12, 13, 14, 18, 22, 29, 34, 36, 39, 42, 43, 47, 48, 58, 60, 64], "type": [0, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 37, 43, 45, 48, 49, 50, 52, 54, 58, 62, 65, 66], "manag": [0, 1, 2, 4, 6, 7, 8, 9, 11, 12, 16, 20, 26, 29, 30, 31, 34, 41, 42, 44, 47, 62, 64], "machineri": [0, 42], "There": [0, 34, 38, 40, 42, 43, 44, 45, 46, 48, 49, 55, 58, 61, 63, 64, 65], "i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66], "also": [0, 4, 6, 7, 8, 12, 16, 28, 29, 34, 36, 38, 40, 41, 42, 43, 44, 45, 47, 49, 54, 55, 57, 58, 59, 61, 62, 64], "an": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 55, 58, 59, 61, 62, 64, 65, 66], "exchangeratecalcul": 0, "calcul": [0, 5, 6, 7, 10, 14, 19, 22, 26, 28, 30, 31, 40, 41], "exchang": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 16, 17, 19, 20, 22, 27, 31, 34, 36, 42, 44, 45, 47, 48, 58, 63, 64, 65, 66], "rate": [0, 2, 4, 5, 6, 7, 8, 9, 14, 16, 22, 31, 40, 45, 58, 64], "between": [0, 8, 9, 11, 12, 14, 22, 27, 29, 33, 41, 42, 43, 44, 45, 47, 54, 58, 60, 62, 64], "fx": [0, 6, 22, 34, 45, 47, 58, 59, 61, 62, 65], "crypto": [0, 2, 4, 17, 22, 27, 45, 47, 61, 62, 64, 65, 66], "pair": [0, 4, 22, 43, 45, 48, 59, 61, 64, 65], "accountmanag": 0, "mainli": [0, 29, 42], "us": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 22, 23, 25, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 62, 63, 64, 65, 66], "from": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 58, 59, 60, 61, 62, 64], "portfolio": [0, 5, 6, 9, 12, 16, 31, 33, 34, 42, 43, 46, 62], "oper": [0, 8, 10, 11, 12, 15, 30, 32, 34, 41, 42, 43, 45, 46, 52, 57, 62], "accountfactori": 0, "support": [0, 4, 6, 13, 16, 29, 38, 41, 42, 43, 44, 45, 47, 48, 50, 62, 64, 66], "custom": [0, 2, 6, 8, 9, 12, 19, 25, 28, 34, 35, 38, 41, 42, 43, 46, 62, 64], "specif": [0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 15, 16, 18, 19, 22, 25, 27, 29, 30, 31, 32, 34, 35, 36, 42, 43, 45, 47, 52, 54, 60, 66], "integr": [0, 1, 2, 3, 4, 7, 12, 16, 24, 35, 42, 44, 45, 55, 57, 62, 63, 64, 65], "These": [0, 8, 12, 14, 19, 25, 36, 37, 40, 41, 42, 43, 47, 52, 55, 64], "can": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 59, 60, 61, 62, 64, 65], "regist": [0, 1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 17, 22, 28, 32, 34, 40, 43, 48, 58, 63, 64, 65], "factori": [0, 8, 9, 14, 16, 34, 35, 45, 63, 64, 65], "instanti": [0, 19, 32, 35, 43, 45, 48, 59, 61, 63, 64, 65], "when": [0, 1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 22, 24, 25, 26, 33, 34, 36, 37, 38, 42, 43, 44, 45, 47, 48, 49, 50, 54, 55, 57, 58, 59, 61, 63, 64, 65, 66], "accountst": [0, 1, 2, 4, 6, 12, 16, 19, 30, 32], "event": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 22, 24, 25, 26, 28, 30, 31, 33, 34, 37, 38, 42, 43, 44, 46, 48, 58, 62], "receiv": [0, 6, 8, 11, 12, 14, 16, 20, 28, 31, 34, 35, 37, 42, 43, 45, 46, 50, 58, 63, 64, 65], "class": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 45, 46, 47, 48, 50, 58, 59, 62, 63, 64, 65], "cashaccount": 0, "bool": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34], "calculate_account_st": 0, "fals": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 25, 26, 29, 30, 32, 34, 38, 47, 49, 61, 64], "base": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 58, 62], "provid": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 24, 25, 28, 29, 30, 31, 32, 33, 34, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 59, 61, 62, 64, 66], "cash": [0, 4, 6, 9, 12, 16, 22, 44, 45, 58], "paramet": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42, 43, 45, 46, 47, 48, 49, 58, 59], "initi": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 19, 22, 23, 24, 25, 26, 30, 31, 34, 37, 43, 45, 47, 48, 58, 66], "state": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 19, 21, 24, 29, 30, 31, 33, 34, 37, 38, 44, 62, 66], "option": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 40, 43, 44, 45, 46, 47, 48, 49, 57, 58, 61, 62, 63, 64, 65], "If": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42, 43, 44, 46, 48, 54, 55, 58, 60, 61, 64, 65], "should": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 27, 29, 31, 32, 33, 34, 36, 38, 44, 45, 46, 49, 55, 58, 59, 60, 61, 64, 66], "order": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 18, 19, 20, 22, 23, 26, 28, 29, 30, 31, 33, 34, 37, 39, 40, 41, 42, 45, 48, 52, 58, 60, 61, 62, 63, 65, 66], "fill": [0, 1, 2, 4, 5, 6, 12, 16, 19, 24, 25, 26, 34, 36, 47], "rais": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 42, 55, 58], "valueerror": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 42], "account_typ": [0, 1, 2, 4, 6, 9, 12, 16, 19, 35, 58, 59, 64], "equal": [0, 1, 2, 4, 5, 6, 8, 12, 14, 18, 22, 23, 24, 25, 26, 28, 31, 34, 47], "appli": [0, 1, 2, 4, 8, 9, 18, 24, 25, 26, 30, 45, 47, 49, 59], "self": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 43, 45, 47, 48, 50, 58, 64], "void": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 22, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 50], "given": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 43, 45, 47, 65, 66], "account_id": [0, 1, 2, 4, 6, 7, 12, 15, 16, 19, 25, 26], "id": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 38, 43, 45, 46, 47, 48, 51, 58, 59, 61, 64, 66], "base_curr": [0, 1, 2, 4, 6, 9, 12, 16, 19, 22, 26, 58, 59, 63], "system": [0, 1, 2, 4, 6, 7, 8, 9, 12, 16, 18, 19, 20, 21, 25, 26, 28, 29, 30, 34, 37, 38, 43, 44, 45, 47, 48, 50, 51, 52, 54, 57, 58, 62, 64, 66], "method": [0, 1, 2, 4, 6, 7, 8, 11, 12, 13, 14, 16, 18, 19, 30, 31, 32, 33, 34, 35, 37, 38, 40, 42, 43, 45, 47, 48, 49, 52, 55, 58, 59, 61, 62, 64], "intend": [0, 6, 8, 10, 12, 28, 30, 34, 43, 47, 48], "call": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 16, 28, 29, 31, 33, 34, 35, 37, 40, 43, 45, 48, 50, 54, 55], "user": [0, 6, 8, 12, 14, 19, 25, 28, 34, 37, 39, 42, 43, 44, 45, 48, 58, 59, 60, 61, 62, 64, 66], "code": [0, 1, 2, 4, 6, 7, 8, 12, 13, 15, 17, 34, 35, 38, 43, 50, 51, 52, 54, 59, 61, 62], "balanc": [0, 1, 2, 4, 5, 6, 12, 16, 19, 23, 30, 48, 58], "currenc": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 15, 16, 19, 22, 23, 25, 26, 30, 31, 34, 40, 44, 58, 65], "none": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 42, 43, 45, 47, 48, 49, 58, 64], "accountbal": [0, 1, 2, 4, 6, 12, 16, 19, 23], "return": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 43, 50, 55, 58, 64, 66], "current": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 25, 26, 29, 30, 31, 34, 35, 38, 45, 46, 47, 49, 55, 57, 58, 59, 61, 62, 66], "total": [0, 5, 7, 11, 12, 16, 18, 19, 22, 23, 25, 26, 30, 31, 43, 48], "For": [0, 5, 6, 23, 24, 28, 29, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 55, 57, 58, 59, 61, 64], "multi": [0, 1, 2, 4, 5, 6, 11, 12, 16, 19, 44, 46, 62, 64, 66], "specifi": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 23, 25, 34, 35, 43, 45, 46, 47, 54, 57, 64, 65], "queri": [0, 1, 2, 4, 6, 7, 9, 12, 16, 28, 30, 34, 43, 58, 63], "default": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 19, 22, 23, 24, 25, 27, 29, 32, 33, 34, 38, 40, 41, 42, 43, 44, 46, 47, 49, 58, 59, 61, 64], "set": [0, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 26, 29, 30, 31, 34, 36, 37, 38, 42, 43, 46, 47, 48, 49, 53, 54, 58, 59, 61, 63, 64, 65], "applic": [0, 1, 4, 8, 9, 12, 14, 19, 22, 26, 34, 44, 47, 66], "inform": [0, 1, 2, 4, 6, 8, 12, 16, 18, 19, 22, 30, 44, 45, 49, 50, 52, 58, 60, 61, 63, 64, 65], "rather": [0, 8, 49, 61], "than": [0, 6, 8, 9, 10, 12, 17, 18, 22, 23, 24, 25, 28, 29, 32, 34, 49, 59, 61], "monei": [0, 1, 2, 4, 5, 6, 12, 16, 19, 22, 23, 26, 30, 31], "zero": [0, 7, 8, 14, 23, 25, 26, 28, 47, 58], "amount": [0, 23, 43, 54, 59, 61, 66], "balance_fre": 0, "free": [0, 8, 23, 52, 54, 59, 61], "balance_lock": 0, "lock": [0, 23, 30, 36], "balance_tot": 0, "dict": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 22, 23, 25, 26, 29, 30, 31, 32, 34, 43, 46, 58, 59, 65], "balances_fre": 0, "balances_lock": [0, 30], "balances_tot": 0, "nautilu": [0, 4, 6, 7, 9, 19, 20, 29, 33, 35, 36, 37, 42, 44, 45, 47, 48, 58, 59, 60, 61, 62, 63, 64], "calculate_balance_lock": 0, "instrument": [0, 1, 2, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 43, 44, 47, 48, 59, 62, 63, 64], "ordersid": [0, 1, 2, 4, 6, 7, 8, 12, 16, 18, 19, 25, 26, 34, 41, 43, 47, 58], "side": [0, 1, 2, 4, 6, 7, 8, 10, 12, 16, 18, 19, 20, 24, 25, 26, 28, 34, 43, 58, 60], "quantiti": [0, 1, 2, 4, 6, 8, 11, 12, 16, 18, 19, 22, 23, 25, 26, 31, 34, 36, 41, 43, 44, 58, 59, 61], "price": [0, 1, 2, 4, 6, 7, 8, 11, 12, 14, 16, 18, 19, 22, 23, 24, 25, 26, 27, 31, 34, 41, 44, 47, 59, 61, 64], "use_quote_for_invers": [0, 22], "result": [0, 5, 6, 10, 22, 26, 29, 36, 37, 41, 42, 45, 48, 49, 58, 59, 61, 64], "quot": [0, 1, 2, 4, 6, 7, 8, 11, 12, 14, 16, 18, 19, 22, 24, 25, 26, 30, 31, 34, 38, 41, 45, 58, 59, 61, 62, 64], "standard": [0, 8, 9, 10, 14, 22, 25, 26, 42, 45, 47, 54, 58, 64, 66], "invers": [0, 22, 26], "bui": [0, 1, 2, 4, 6, 8, 12, 16, 18, 19, 25, 26, 41, 43, 47, 58], "sell": [0, 1, 2, 4, 6, 8, 12, 16, 18, 19, 25, 26, 47, 58], "instead": [0, 2, 22, 46, 50], "calculate_commiss": 0, "last_qti": [0, 1, 2, 4, 6, 12, 16, 19], "last_px": [0, 1, 2, 4, 6, 12, 16, 19, 22], "liquiditysid": [0, 1, 2, 4, 6, 12, 16, 19, 25], "liquidity_sid": [0, 1, 2, 4, 6, 12, 16, 19, 25], "commiss": [0, 1, 2, 4, 6, 12, 16, 19, 26, 31], "gener": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 28, 29, 34, 35, 39, 40, 41, 42, 43, 45, 47, 49, 52, 54, 55, 60, 62, 64], "transact": 0, "maker": [0, 1, 2, 4, 6, 12, 16, 19, 22, 47], "taker": [0, 1, 2, 4, 6, 12, 16, 19, 22], "liquid": [0, 1, 2, 4, 6, 8, 12, 16, 19, 22, 25, 45, 47], "no_liquidity_sid": [0, 1, 2, 4, 6, 12, 16, 19], "calculate_pnl": [0, 26], "orderfil": [0, 1, 2, 4, 6, 12, 16, 19, 25, 26], "posit": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 18, 19, 20, 22, 23, 25, 30, 31, 34, 36, 40, 44, 45, 47, 58, 64], "list": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 34, 35, 38, 42, 43, 58, 62], "pnl": [0, 5, 9, 19, 26, 30, 40], "doe": [0, 6, 8, 12, 14, 22, 23, 25, 28, 31, 34, 48, 49, 58, 59, 61, 62], "includ": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 25, 26, 28, 31, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 55, 57, 58, 62, 63, 64, 65], "ani": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 21, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 51, 54, 55, 58, 59, 60, 61, 62], "clear_balance_lock": 0, "instrumentid": [0, 1, 2, 4, 6, 7, 8, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 30, 31, 34, 35, 41, 43, 45, 47, 48, 58, 65], "instrument_id": [0, 1, 2, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 22, 23, 24, 25, 26, 30, 31, 34, 35, 41, 43, 45, 47, 48, 58, 59, 61, 64], "clear": [0, 1, 6, 7, 15, 18, 24, 30, 34, 47, 49, 59, 61], "event_count": [0, 12, 16, 25, 26, 31], "count": [0, 1, 2, 4, 6, 7, 8, 11, 12, 14, 16, 22, 24, 25, 26, 28, 31], "int": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 37, 43, 48, 50, 58], "all": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 43, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 59, 62, 64, 65, 66], "accountid": [0, 1, 2, 4, 6, 7, 12, 15, 16, 19, 20, 25, 26], "is_cash_account": 0, "is_margin_account": 0, "margin": [0, 1, 2, 4, 6, 9, 12, 16, 19, 22, 23, 30, 36, 44, 47, 58, 59, 64], "is_unleverag": 0, "last_ev": [0, 25, 26], "last": [0, 2, 5, 6, 7, 8, 11, 12, 14, 15, 18, 19, 22, 24, 25, 26, 34, 38, 43, 44, 47, 48, 55], "starting_bal": [0, 6, 9, 58, 59], "start": [0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 14, 16, 27, 29, 31, 34, 35, 48, 57, 59, 60, 61, 63, 64, 65], "accounttyp": [0, 1, 2, 4, 6, 12, 16, 19], "update_balance_lock": 0, "updat": [0, 1, 2, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 24, 29, 30, 31, 34, 38, 45, 47, 53, 58, 63, 64], "margin_init": [0, 22, 23, 45], "neg": [0, 4, 6, 8, 12, 14, 17, 18, 19, 22, 23, 25, 26, 28, 29, 31, 34], "0": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 36, 40, 43, 45, 47, 58, 59], "update_bal": 0, "allow_zero": 0, "true": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 26, 29, 30, 34, 35, 47, 48, 58, 59, 64, 65], "guarante": [0, 7, 25, 26, 42, 54, 62], "everi": [0, 4, 6, 42, 43, 47], "therefor": [0, 15, 34, 55, 64], "we": [0, 1, 29, 32, 37, 41, 44, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64], "onli": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 19, 25, 28, 29, 30, 31, 33, 34, 35, 38, 41, 42, 45, 51, 57, 59, 61, 62, 64], "ar": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 23, 25, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "allow": [0, 2, 4, 8, 12, 22, 31, 32, 34, 35, 36, 37, 41, 42, 44, 47, 58, 59, 63, 65], "just": [0, 10, 11, 12, 41, 43, 54, 55, 59, 61], "asset": [0, 2, 6, 9, 12, 14, 16, 22, 23, 45, 61, 62, 64], "empti": [0, 1, 2, 4, 6, 8, 9, 10, 16, 18, 19, 22, 25, 29, 34, 40, 49], "update_commiss": 0, "which": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66], "repres": [0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 34, 37, 41, 43, 45, 58], "credit": 0, "marginaccount": 0, "calculate_margin_init": 0, "calculate_margin_maint": 0, "positionsid": [0, 7, 12, 19, 25, 26, 34, 58], "mainten": [0, 22, 23, 30, 45], "long": [0, 5, 12, 19, 25, 26, 30, 47, 58], "short": [0, 5, 12, 19, 25, 26, 30, 47, 58], "clear_margin": 0, "clear_margin_init": 0, "clear_margin_maint": 0, "default_leverag": [0, 6, 9], "leverag": [0, 6, 9, 44, 47, 62], "decim": [0, 2, 4, 5, 6, 8, 9, 11, 12, 16, 17, 19, 22, 23, 25, 26, 27, 30, 31, 43, 47, 48, 59], "found": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 28, 30, 35, 42, 43, 47, 49, 50, 54, 55, 61, 64], "marginbal": [0, 1, 2, 4, 6, 12, 16, 19, 23], "margin_maint": [0, 22, 23, 45], "margins_init": [0, 30], "margins_maint": [0, 30], "set_default_leverag": 0, "valu": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 40, 43, 44, 45, 46, 47, 49, 54, 55, 58, 59, 61, 63, 64, 65], "typeerror": [0, 6, 7, 8, 9, 12, 15, 16, 18, 31, 32, 33, 34, 42], "1": [0, 1, 2, 4, 6, 8, 9, 10, 14, 22, 29, 31, 34, 37, 40, 41, 44, 47, 48, 53, 58, 64], "set_leverag": 0, "update_margin": 0, "update_margin_init": 0, "update_margin_maint": 0, "object": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 43, 44, 45, 46, 49, 55, 58, 59, 61, 62, 64], "one": [0, 4, 6, 8, 9, 12, 25, 28, 30, 34, 36, 41, 43, 45, 47, 58, 59, 61, 64], "versu": 0, "anoth": [0, 7, 20, 36], "get_rat": 0, "from_curr": [0, 7], "to_curr": [0, 7], "pricetyp": [0, 7, 14, 18, 44, 58], "price_typ": [0, 7, 14, 18, 58], "bid_quot": 0, "ask_quot": 0, "doubl": [0, 5, 6, 7, 8, 10, 12, 14, 16, 18, 19, 22, 23, 24, 25, 26, 27, 29, 50], "dictionari": [0, 1, 2, 4, 6, 7, 8, 9, 12, 15, 18, 19, 20, 22, 23, 25, 26, 34, 36, 43, 45, 46, 63, 65], "bid": [0, 2, 6, 12, 18, 22, 24, 25, 27, 29, 44, 47, 59, 61], "ask": [0, 2, 6, 12, 18, 22, 24, 25, 27, 29, 44, 47, 59, 61], "convert": [0, 4, 5, 7, 10, 15, 22, 32, 34, 59, 61, 63, 65, 66], "convers": [0, 10, 34, 47], "symbol": [0, 2, 4, 20, 22, 25, 26, 41, 45, 64, 65, 66], "length": [0, 4, 9, 10, 14, 22], "note": [0, 4, 5, 6, 7, 8, 10, 12, 13, 14, 18, 26, 28, 29, 34, 41, 44, 60, 61, 65], "insuffici": [0, 40], "data": [0, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 22, 24, 29, 32, 33, 34, 38, 40, 42, 43, 45, 48, 54, 62, 63, 65, 66], "rolloverinterestcalcul": 0, "pd": [0, 1, 2, 4, 5, 6, 10, 16, 29, 34, 40, 47, 59, 61], "datafram": [0, 5, 6, 10, 29, 34, 61], "rollov": [0, 6], "interest": [0, 6, 42, 64], "rate_data_csv_path": 0, "term": [0, 4, 42, 44, 47, 59, 60, 61, 64], "csv": [0, 29, 53, 59, 61], "sinc": [0, 8, 14, 38, 45, 48, 62], "1956": 0, "str": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 37, 43, 46, 48, 58, 59], "calc_overnight_r": 0, "date": [0, 4, 22, 44, 47, 48, 60], "forex": [0, 14, 27, 34, 47, 59, 61, 65], "overnight": 0, "rang": [0, 2, 5, 6, 8, 12, 14, 25, 34, 45, 53, 66], "6": [0, 4], "7": [0, 22], "01": [0, 9, 10, 53, 58, 59, 61], "bp": 0, "get_rate_data": 0, "creat": [0, 1, 2, 4, 6, 8, 9, 11, 12, 14, 19, 29, 33, 34, 36, 37, 43, 45, 47, 58, 59, 62, 63, 64, 65], "static": [0, 1, 2, 4, 5, 8, 9, 12, 14, 17, 18, 19, 20, 22, 23, 25, 26, 32, 42, 62], "creation": [0, 9, 19, 36, 38, 41, 47, 64], "register_account_typ": 0, "unicod": [0, 1, 2, 4, 6, 7, 8, 10, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 34], "issuer": [0, 20], "account_cl": 0, "keyerror": [0, 6, 8, 12, 16, 25, 26, 28, 32, 34], "ha": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 14, 16, 19, 25, 28, 29, 31, 33, 34, 38, 41, 42, 43, 45, 47, 48, 50, 59, 61, 62, 64], "alreadi": [0, 1, 2, 4, 6, 7, 8, 11, 12, 16, 22, 25, 26, 28, 32, 34, 38, 41, 43, 46, 47, 48, 58, 59, 61], "register_calculated_account": 0, "been": [0, 1, 2, 4, 6, 8, 9, 11, 12, 16, 19, 25, 28, 30, 31, 33, 34, 38, 41, 42, 43, 48, 59, 61, 62], "accountsmanag": 0, "cachefacad": [0, 6, 7, 8, 12, 16, 30, 33, 34], "cach": [0, 1, 2, 4, 6, 8, 9, 11, 12, 15, 16, 22, 30, 31, 33, 34, 38, 41, 42, 43, 45, 57, 58], "loggeradapt": [0, 1, 6, 8, 12, 16, 29, 33, 34], "log": [0, 1, 2, 4, 6, 7, 9, 11, 12, 14, 16, 28, 29, 31, 33, 34, 35, 47, 50, 58, 64, 66], "clock": [0, 1, 2, 4, 6, 11, 12, 16, 28, 30, 31, 33, 34, 35, 41, 43], "function": [0, 6, 8, 10, 13, 14, 30, 37, 39, 42, 47, 48, 49, 52, 54, 59, 62, 64, 66], "read": [0, 4, 6, 7, 8, 12, 16, 29, 30, 33, 34, 36, 39, 42, 45, 50, 56, 58, 59, 61], "logger": [0, 1, 2, 4, 6, 7, 8, 11, 12, 15, 16, 28, 29, 30, 31, 33, 34, 35, 45, 46, 50], "api": [1, 2, 3, 4, 12, 16, 28, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 48, 52, 60, 61, 62], "spot": [1, 9, 12, 16, 22, 35, 41, 45, 47, 64, 66], "bet": [1, 22, 44, 45, 62, 63, 66], "betfairhttpcli": 1, "usernam": [1, 4, 9, 63, 65], "password": [1, 4, 9, 63, 65], "app_kei": [1, 63], "http": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 22, 23, 24, 25, 31, 34, 36, 50, 53, 57, 58, 59, 61, 64], "async": [1, 2, 4, 8, 12, 16], "keep_al": 1, "renew": 1, "authent": 1, "list_navig": 1, "navig": [1, 13, 42, 57], "tree": 1, "market": [1, 6, 7, 8, 9, 11, 12, 14, 18, 19, 20, 22, 23, 24, 25, 26, 30, 34, 36, 38, 41, 43, 44, 45, 48, 58, 61, 62, 63, 64, 65, 66], "list_market_catalogu": 1, "filter_": 1, "marketfilt": 1, "market_project": 1, "betfair_pars": 1, "spec": [1, 18, 49], "enum": [1, 4, 8, 10, 14, 34, 35, 47, 58, 64], "marketproject": 1, "sort": [1, 6, 8, 59], "marketsort": 1, "max_result": 1, "1000": [1, 6, 8, 9, 12, 34, 48], "local": [1, 8, 19, 22, 25, 34, 38, 41, 52, 66], "type_definit": 1, "marketcatalogu": 1, "about": [1, 6, 18, 42, 47, 58, 59, 61], "betfairdataclientconfig": 1, "handle_revised_bar": [1, 2, 4, 9], "instrument_provid": [1, 2, 4, 9, 16, 29, 64, 65], "instrumentproviderconfig": [1, 2, 4, 8, 9, 35, 64, 65], "load_al": [1, 2, 4, 8, 9, 35, 64], "load_id": [1, 2, 4, 8, 9, 35, 65], "filter": [1, 2, 4, 6, 7, 8, 9, 14, 16, 28, 30, 34, 43, 53, 65], "filter_cal": [1, 2, 4, 9], "log_warn": [1, 2, 4, 9, 64], "rout": [1, 2, 4, 6, 9, 11, 12, 16, 34, 36], "routingconfig": [1, 2, 4, 9], "venu": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 16, 18, 19, 20, 22, 25, 26, 30, 34, 35, 38, 41, 42, 43, 44, 45, 62, 64, 66], "cert_dir": [1, 63], "market_filt": 1, "tupl": [1, 10, 16, 27, 29, 31, 65], "livedataclientconfig": [1, 2, 4, 9, 16], "configur": [1, 2, 4, 6, 7, 8, 9, 11, 12, 15, 16, 31, 33, 34, 35, 38, 40, 43, 44, 50, 57], "betfairdatacli": [1, 63], "instanc": [1, 2, 4, 6, 8, 9, 11, 12, 15, 16, 20, 29, 30, 31, 32, 33, 34, 37, 38, 42, 43, 46, 48, 58, 59, 61], "account": [1, 2, 4, 5, 6, 7, 9, 12, 14, 15, 16, 19, 20, 23, 25, 26, 30, 31, 34, 42, 58, 63, 65], "kei": [1, 2, 4, 7, 8, 9, 10, 15, 18, 35, 43, 62], "directori": [1, 8, 9, 42, 46, 55, 57, 59, 61], "contain": [1, 2, 4, 5, 6, 7, 8, 10, 12, 16, 18, 19, 20, 22, 23, 25, 26, 28, 29, 34, 36, 39, 42, 43, 50, 53, 58, 59, 61, 64], "certif": 1, "represent": [1, 2, 4, 6, 9, 12, 18, 19, 22, 23, 25, 26], "classmethod": [1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 18, 22, 24, 31, 34], "fully_qualified_nam": [1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 18, 22, 24, 31, 34], "fulli": [1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 18, 22, 24, 31, 34, 52, 55, 62], "qualifi": [1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 18, 22, 24, 31, 34], "name": [1, 2, 4, 5, 6, 8, 9, 11, 12, 14, 16, 17, 18, 20, 22, 24, 27, 28, 29, 31, 33, 34, 35, 44, 46, 48, 49, 57, 58, 59, 61, 66], "nautilusconfig": [1, 2, 4, 6, 8, 9, 12, 34], "refer": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 22, 23, 24, 25, 27, 31, 34, 38, 41, 42, 44, 45, 46, 47, 48, 49, 54, 58, 60, 61, 64], "www": [1, 2, 4, 5, 6, 8, 9, 11, 12, 14, 16, 18, 19, 20, 22, 23, 24, 25, 31, 34, 36, 53, 59, 61], "python": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16, 18, 22, 24, 29, 31, 34, 38, 39, 42, 45, 49, 50, 51, 52, 57, 58], "org": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 16, 18, 20, 22, 24, 31, 34, 53, 57], "dev": [1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 18, 22, 24, 31, 34, 51, 57], "pep": [1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 18, 22, 24, 31, 34], "3155": [1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 18, 22, 24, 31, 34], "json": [1, 2, 4, 5, 6, 8, 9, 29, 44, 45, 46, 59, 61], "byte": [1, 2, 4, 6, 7, 8, 9, 12, 15, 29, 32, 34], "serial": [1, 2, 4, 6, 7, 9, 15, 42, 43, 44, 45, 48], "encod": [1, 2, 4, 6, 9, 29], "pars": [1, 2, 4, 6, 9, 17, 18, 20, 23, 29, 35, 37, 59, 61, 64], "raw": [1, 2, 4, 5, 6, 9, 14, 18, 22, 23, 29, 34, 35, 45, 58, 66], "decod": [1, 2, 4, 6, 9, 59, 61], "cl": [1, 2, 4, 6, 8, 9, 11, 12, 16, 18, 22, 24, 31, 32, 34], "valid": [1, 2, 4, 6, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 25, 27, 28, 31, 33, 34, 41, 43, 45, 63, 64, 65], "whether": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 25, 26, 30, 31, 32, 34, 38, 47, 49, 63, 64, 65], "betfairexecclientconfig": 1, "liveexecclientconfig": [1, 2, 4, 9, 16], "betfairexeccli": 1, "loop": [1, 2, 4, 8, 9, 16, 28, 33, 34, 35, 44, 61], "abstracteventloop": [1, 2, 4, 8, 16, 33, 34], "msgbu": [1, 2, 4, 6, 8, 11, 12, 16, 28, 30, 31, 33, 34, 42], "messagebu": [1, 2, 4, 6, 8, 11, 12, 16, 28, 30, 31, 33, 34, 42], "liveclock": [1, 2, 4, 8, 16, 35], "betfairinstrumentprovid": [1, 63], "strict_handl": 1, "livemarketdatacli": [1, 4, 16], "asyncio": [1, 2, 4, 8, 9, 16, 33, 34, 35], "betfaircli": 1, "httpclient": [1, 35], "messag": [1, 2, 4, 6, 7, 8, 9, 16, 19, 24, 30, 31, 33, 34, 43, 46, 47, 58, 62], "bu": [1, 2, 4, 6, 8, 11, 12, 16, 30, 31, 33, 34, 42, 43, 62], "strict": [1, 17], "handl": [1, 2, 4, 6, 8, 9, 11, 12, 14, 16, 17, 23, 24, 28, 29, 33, 34, 35, 43, 48, 51, 52, 55, 62, 64], "mode": [1, 6, 8, 9, 11, 12, 16, 17, 31, 50], "enabl": [1, 6, 8, 9, 31, 44, 54, 57], "connect": [1, 2, 4, 6, 9, 11, 12, 16, 28, 35, 42, 63, 64, 65, 66], "create_task": [1, 2, 4, 16], "coro": [1, 2, 4, 16], "coroutin": [1, 2, 4, 8, 16], "log_msg": [1, 2, 4, 16], "action": [1, 2, 4, 6, 8, 12, 16, 18, 34, 38, 43, 45, 66], "callabl": [1, 2, 4, 8, 9, 10, 11, 12, 16, 28, 29, 32, 33, 34], "success": [1, 2, 4, 12, 16], "task": [1, 2, 4, 16], "run": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 16, 30, 31, 34, 38, 40, 42, 43, 44, 48, 49, 50, 51, 55, 57, 61, 62, 65, 66], "error": [1, 2, 4, 6, 7, 8, 9, 11, 12, 16, 22, 24, 28, 31, 34, 35, 46, 47, 49, 54, 55, 58, 61, 66], "callback": [1, 2, 4, 8, 10, 11, 16, 28, 33, 34, 35, 64], "done": [1, 2, 4, 6, 8, 12, 16, 36, 58, 61], "write": [1, 2, 4, 7, 8, 9, 15, 16, 29, 32, 38, 48, 54, 59], "degrad": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34], "compon": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 16, 20, 22, 24, 25, 28, 31, 32, 34, 35, 38, 41, 43, 44, 50, 55, 58, 59, 61, 62, 64, 66], "while": [1, 2, 4, 6, 8, 11, 12, 14, 16, 31, 34, 43, 65], "on_degrad": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34], "except": [1, 2, 4, 6, 8, 10, 11, 12, 16, 25, 31, 34, 41, 48, 50, 55], "rerais": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34], "remain": [1, 2, 4, 6, 8, 11, 12, 16, 25, 31, 34, 36, 43, 47, 50], "do": [1, 2, 4, 6, 8, 11, 12, 16, 20, 28, 31, 34, 35, 37, 42, 49, 58, 59, 61, 64], "overrid": [1, 2, 4, 6, 7, 8, 9, 11, 12, 16, 17, 31, 32, 34, 45], "thi": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66], "chang": [1, 2, 4, 5, 6, 8, 11, 12, 13, 14, 16, 18, 19, 22, 25, 27, 28, 31, 34, 45, 49, 51, 54, 55, 62], "disconnect": [1, 2, 4, 9, 11, 12, 16], "dispos": [1, 2, 4, 6, 8, 11, 12, 16, 31, 33, 34], "on_dispos": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34, 58], "fault": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34], "multipl": [1, 2, 4, 6, 8, 11, 12, 14, 16, 31, 32, 33, 34, 41, 43, 44, 49, 58, 59, 61, 62], "time": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 16, 18, 19, 24, 25, 28, 29, 31, 33, 34, 36, 40, 41, 42, 44, 48, 53, 54, 55, 58, 61, 62, 64], "same": [1, 2, 4, 6, 8, 9, 11, 12, 16, 18, 19, 28, 31, 33, 34, 36, 38, 45, 46, 48, 54, 62, 66], "effect": [1, 2, 4, 6, 8, 11, 12, 16, 28, 31, 33, 34, 42], "onc": [1, 2, 4, 6, 8, 11, 12, 16, 20, 25, 28, 31, 33, 34, 38, 43, 47, 48, 51, 59, 61], "idempot": [1, 2, 4, 6, 8, 11, 12, 16, 31, 33, 34], "cannot": [1, 2, 4, 6, 8, 9, 11, 12, 14, 16, 25, 29, 31, 32, 33, 34, 35, 41, 47, 62], "revers": [1, 2, 4, 6, 7, 8, 11, 12, 16, 31, 33, 34], "other": [1, 2, 4, 6, 7, 8, 9, 11, 12, 16, 18, 19, 25, 31, 32, 33, 34, 41, 42, 45, 47, 49, 55, 58, 61, 62, 64], "on_fault": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34], "componentid": [1, 2, 4, 6, 7, 8, 11, 12, 15, 16, 20, 31, 34], "is_connect": [1, 2, 4, 6, 11, 12, 16], "is_degrad": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34], "is_dispos": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34], "is_fault": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34], "is_initi": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34], "is_run": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34], "is_stop": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34], "stop": [1, 2, 4, 6, 8, 9, 11, 12, 16, 25, 27, 31, 34, 36], "request": [1, 2, 4, 6, 8, 10, 11, 12, 16, 25, 28, 34, 43, 44, 64, 65, 66], "datatyp": [1, 2, 4, 6, 8, 11, 12, 16, 18, 34, 35, 37, 64], "data_typ": [1, 2, 4, 6, 8, 11, 12, 16, 18, 29, 34, 35, 37, 64], "uuid4": [1, 2, 4, 6, 8, 10, 11, 12, 16, 19, 25, 28, 33, 34, 35], "correlation_id": [1, 2, 4, 6, 10, 11, 16, 28, 35], "subscript": [1, 2, 4, 6, 8, 11, 12, 16, 28, 34, 64], "correl": [1, 2, 4, 6, 10, 11, 16, 28], "respons": [1, 2, 4, 6, 10, 11, 12, 16, 28, 31, 54], "request_bar": [1, 2, 4, 6, 8, 11, 12, 16, 34], "bartyp": [1, 2, 4, 6, 7, 8, 11, 12, 16, 18, 29, 34], "bar_typ": [1, 2, 4, 6, 7, 8, 11, 12, 16, 18, 29, 34, 43, 48, 59], "limit": [1, 2, 4, 6, 8, 9, 11, 12, 16, 19, 25, 30, 31, 36, 38, 41, 43, 44, 48, 49, 58, 64], "datetim": [1, 2, 4, 5, 6, 8, 11, 12, 14, 16, 18, 19, 22, 25, 34, 46, 59, 61], "end": [1, 2, 4, 6, 8, 11, 12, 16, 18, 34, 43, 44, 47, 49, 59, 61], "bar": [1, 2, 4, 6, 7, 8, 9, 11, 12, 14, 16, 18, 29, 34, 41, 44, 61, 62, 64], "number": [1, 2, 4, 8, 11, 16, 18, 20, 22, 23, 24, 27, 28, 31, 38, 43, 45, 47, 48], "request_instru": [1, 2, 4, 6, 8, 11, 12, 16, 34, 35], "request_quote_tick": [1, 2, 4, 6, 8, 11, 12, 16, 34], "quotetick": [1, 2, 4, 6, 7, 8, 11, 12, 14, 16, 18, 24, 29, 30, 34, 44, 58, 59, 61], "tick": [1, 2, 4, 6, 7, 8, 9, 11, 12, 14, 16, 18, 22, 24, 26, 29, 30, 34, 38, 41, 43, 44, 45, 47, 48, 58, 59, 61, 62, 64], "request_trade_tick": [1, 2, 4, 6, 8, 11, 12, 16, 34], "tradetick": [1, 2, 4, 6, 7, 8, 11, 12, 14, 16, 18, 24, 29, 34, 44, 61], "reset": [1, 2, 4, 5, 6, 7, 8, 11, 12, 14, 16, 24, 30, 31, 34], "field": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 19, 20, 30, 31, 34, 37, 59, 61, 64], "on_reset": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34], "resum": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34], "on_resum": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34], "run_after_delai": [1, 2, 4, 16], "delai": [1, 2, 4, 16], "float": [1, 2, 4, 5, 6, 9, 12, 14, 16, 22, 23, 27, 29, 31, 40, 43, 58], "after": [1, 2, 4, 9, 16, 29], "second": [1, 2, 4, 8, 9, 10, 12, 16, 18, 44, 58], "befor": [1, 2, 4, 8, 9, 16, 28, 29, 41, 47, 59, 61, 62, 66], "on_start": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34, 58, 64], "componentst": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34], "on_stop": [1, 2, 4, 6, 8, 11, 12, 16, 31, 34, 58], "subscrib": [1, 2, 4, 6, 8, 11, 12, 16, 18, 28, 34, 37, 38, 43, 44, 45, 64], "subscribe_bar": [1, 2, 4, 6, 8, 11, 12, 16, 34], "subscribe_instru": [1, 2, 4, 6, 8, 11, 12, 16, 34, 45], "subscribe_instrument_clos": [1, 2, 4, 6, 8, 11, 12, 16, 34], "instrumentclos": [1, 2, 4, 6, 8, 11, 12, 16, 18, 34], "subscribe_instrument_status_upd": [1, 2, 4, 6, 8, 11, 12, 16, 34], "instrumentstatusupd": [1, 2, 4, 6, 8, 11, 12, 16, 18, 34, 44], "subscribe_order_book_delta": [1, 2, 4, 6, 8, 11, 12, 16, 34], "booktyp": [1, 2, 4, 6, 8, 11, 12, 16, 24, 34], "book_typ": [1, 2, 4, 6, 8, 9, 11, 12, 16, 24, 34], "depth": [1, 2, 4, 6, 8, 11, 12, 16, 34], "kwarg": [1, 2, 4, 6, 8, 11, 12, 14, 16, 32, 34], "orderbookdelta": [1, 2, 4, 6, 8, 11, 12, 16, 18, 24, 34, 44], "book": [1, 2, 4, 6, 7, 8, 11, 12, 16, 18, 25, 34, 45, 47, 61, 62], "l1_tbbo": [1, 2, 4, 6, 8, 9, 11, 12, 16, 34], "l2_mbp": [1, 2, 4, 6, 8, 11, 12, 16, 34], "l3_mbo": [1, 2, 4, 6, 8, 11, 12, 16, 34], "maximum": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 16, 22, 27, 31, 34, 44, 45, 53], "keyword": [1, 2, 4, 6, 8, 11, 12, 16, 34, 50], "argument": [1, 2, 4, 6, 8, 9, 11, 12, 16, 34, 42, 43, 49, 61], "subscribe_order_book_snapshot": [1, 2, 4, 6, 8, 11, 12, 16, 34], "orderbook": [1, 2, 4, 6, 7, 8, 11, 12, 16, 18, 24, 32, 34], "snapshot": [1, 2, 4, 6, 7, 8, 11, 12, 16, 18, 34], "level": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 16, 20, 24, 27, 34, 35, 36, 39, 44, 46, 47, 49, 52, 54, 55, 58, 60, 62, 64, 66], "A": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 23, 25, 28, 29, 34, 35, 41, 42, 44, 45, 47, 48, 53, 58, 65], "subscribe_quote_tick": [1, 2, 4, 6, 8, 11, 12, 16, 34, 41, 58], "subscribe_tick": [1, 2, 4, 6, 8, 11, 12, 16, 34], "ticker": [1, 2, 4, 6, 7, 8, 11, 12, 16, 18, 20, 22, 25, 26, 34, 44, 64], "subscribe_trade_tick": [1, 2, 4, 6, 8, 11, 12, 16, 34], "subscribe_venue_status_upd": [1, 2, 4, 6, 8, 11, 12, 16, 34], "subscribed_bar": [1, 2, 4, 6, 11, 16], "subscribed_generic_data": [1, 2, 4, 6, 11, 16], "subscribed_instrument_clos": [1, 2, 4, 6, 11, 16], "close": [1, 2, 4, 6, 7, 8, 9, 11, 12, 14, 16, 18, 19, 25, 26, 29, 34, 36, 47, 48, 49, 66], "subscribed_instrument_status_upd": [1, 2, 4, 6, 11, 16], "statu": [1, 2, 4, 6, 8, 9, 11, 12, 16, 18, 25, 34, 66], "subscribed_instru": [1, 2, 4, 6, 11, 16], "subscribed_order_book_delta": [1, 2, 4, 6, 11, 16], "delta": [1, 2, 4, 6, 8, 11, 12, 16, 18, 24, 25, 34], "subscribed_order_book_snapshot": [1, 2, 4, 6, 11, 16], "subscribed_quote_tick": [1, 2, 4, 6, 11, 16], "subscribed_tick": [1, 2, 4, 6, 11, 16], "subscribed_trade_tick": [1, 2, 4, 6, 11, 16], "trade": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 36, 37, 38, 40, 41, 42, 43, 46, 47, 48, 52, 61, 62, 63, 65, 66], "subscribed_venue_status_upd": [1, 2, 4, 6, 11, 16], "trader_id": [1, 2, 4, 6, 8, 9, 11, 12, 15, 16, 19, 20, 25, 26, 28, 31, 33, 34, 46], "trader": [1, 2, 4, 6, 8, 9, 11, 12, 14, 15, 16, 19, 20, 25, 26, 28, 30, 31, 33, 34, 36, 38, 40, 42, 43, 46, 47, 58, 62, 64, 65], "associ": [1, 2, 4, 6, 7, 8, 9, 11, 12, 15, 16, 19, 23, 25, 26, 28, 31, 34, 47], "traderid": [1, 2, 4, 6, 8, 11, 12, 15, 16, 19, 20, 25, 26, 28, 31, 33, 34], "unsubscrib": [1, 2, 4, 6, 8, 11, 12, 16, 28, 34], "unsubscribe_bar": [1, 2, 4, 6, 8, 11, 12, 16, 34], "unsubscribe_instru": [1, 2, 4, 6, 8, 11, 12, 16, 34], "unsubscribe_instrument_clos": [1, 2, 4, 6, 11, 16], "unsubscribe_instrument_status_upd": [1, 2, 4, 6, 8, 11, 12, 16, 34], "unsubscribe_order_book_delta": [1, 2, 4, 6, 8, 11, 12, 16, 34], "unsubscribe_order_book_snapshot": [1, 2, 4, 6, 8, 11, 12, 16, 34], "unsubscribe_quote_tick": [1, 2, 4, 6, 8, 11, 12, 16, 34, 58], "unsubscribe_tick": [1, 2, 4, 6, 8, 11, 12, 16, 34], "unsubscribe_trade_tick": [1, 2, 4, 6, 8, 11, 12, 16, 34], "unsubscribe_venue_status_upd": [1, 2, 4, 6, 8, 11, 12, 16, 34], "subscriptionstatu": 1, "modul": [1, 2, 6, 9, 10, 13, 14, 34, 42, 52, 58, 59, 61, 62], "qualnam": [1, 2, 14, 34], "boundari": [1, 2, 14, 34, 42, 54, 64, 66], "bsporderbookdelta": 1, "batch": [1, 6, 9, 12, 29, 31, 58], "bsp": 1, "from_dict": [1, 2, 12, 18, 19, 22, 23, 32], "is_snapshot": [1, 18], "sequenc": [1, 6, 8, 9, 18, 24, 25, 43], "uniqu": [1, 4, 6, 8, 9, 10, 18, 20, 24, 45, 48], "uint64": [1, 18, 24], "to_dict": [1, 2, 12, 18, 19, 22, 23, 25, 26, 32], "obj": [1, 2, 12, 18, 19, 22, 29, 32], "ts_event": [1, 2, 4, 6, 8, 9, 10, 11, 12, 16, 18, 19, 22, 24, 34, 37, 41, 59, 61], "unix": [1, 2, 4, 6, 8, 10, 11, 12, 16, 18, 19, 22, 24, 25, 26, 33, 34, 37, 51, 66], "timestamp": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 22, 24, 25, 26, 29, 32, 33, 34, 37, 47, 59, 61, 66], "nanosecond": [1, 2, 4, 6, 8, 10, 11, 12, 15, 16, 18, 19, 22, 24, 25, 26, 29, 33, 34, 37, 44, 62, 66], "occur": [1, 2, 4, 6, 8, 9, 10, 12, 16, 18, 19, 22, 24, 25, 26, 34, 37, 38], "uint64_t": [1, 2, 4, 6, 8, 10, 11, 12, 16, 18, 19, 22, 23, 24, 25, 26, 32, 33, 34], "ts_init": [1, 2, 8, 10, 11, 12, 18, 19, 22, 24, 25, 26, 29, 34, 35, 37, 41, 59, 61], "wa": [1, 2, 4, 6, 8, 10, 11, 12, 16, 18, 19, 22, 24, 25, 26, 33, 34, 37, 41, 42, 43, 49, 62], "bookact": [1, 18], "add": [1, 2, 4, 5, 6, 7, 8, 10, 12, 15, 16, 18, 24, 34, 41, 43, 48, 58, 61, 63, 64, 65], "delet": [1, 7, 15, 18, 24, 58], "act": [1, 18, 22, 37, 47, 52, 55, 58, 64], "flag": [1, 14, 15, 18, 48], "uint8_t": [1, 17, 18, 22, 23, 24], "is_add": [1, 18], "is_clear": [1, 18], "is_delet": [1, 18], "is_upd": [1, 18], "bookord": [1, 18, 24], "betfairtick": 1, "last_traded_pric": 1, "traded_volum": 1, "starting_price_near": 1, "starting_price_far": 1, "betfairstartingpric": 1, "realis": 1, "properti": [1, 2, 4, 5, 6, 8, 12, 16, 19, 22, 25, 33, 34, 37, 45, 66], "betfairexecutioncli": [1, 63], "liveexecutioncli": [1, 4, 9, 16, 43], "watch_stream": 1, "ensur": [1, 6, 10, 11, 12, 15, 25, 40, 41, 44, 46, 47, 49, 50, 53, 54, 56, 60, 65], "stream": [1, 2, 6, 8, 9, 11, 12, 16, 29, 33, 34, 37, 44, 63, 64, 65, 66], "generate_order_status_report": [1, 2, 4, 16], "client_order_id": [1, 2, 4, 6, 7, 12, 15, 16, 19, 25, 26, 43], "clientorderid": [1, 2, 4, 6, 7, 8, 12, 15, 16, 19, 20, 25, 26, 34, 43], "venue_order_id": [1, 2, 4, 6, 7, 12, 16, 19, 25, 26], "venueorderid": [1, 2, 4, 6, 7, 12, 16, 19, 20, 25, 26, 34], "orderstatusreport": [1, 2, 4, 6, 12, 16], "identifi": [1, 2, 4, 6, 7, 8, 9, 10, 12, 16, 34, 41, 43, 45, 48, 58], "": [1, 2, 4, 6, 8, 9, 15, 16, 19, 25, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "report": [1, 2, 4, 5, 6, 9, 16, 19, 34, 55, 58], "open_onli": [1, 2, 4, 16], "nautilus_trad": [1, 2, 4, 5, 6, 8, 9, 12, 16, 29, 33, 34, 35, 37, 40, 41, 42, 43, 45, 48, 57, 58, 59, 61], "mai": [1, 2, 4, 7, 9, 12, 14, 16, 18, 23, 25, 26, 28, 29, 30, 32, 34, 36, 38, 41, 42, 43, 45, 48, 55, 58, 61, 64], "match": [1, 2, 4, 6, 7, 8, 9, 12, 16, 18, 19, 20, 25, 26, 28, 34, 38, 45, 66], "open": [1, 2, 4, 6, 7, 9, 11, 12, 14, 16, 18, 19, 25, 26, 29, 31, 34, 47, 49, 58, 62, 64], "generate_trade_report": [1, 2, 4, 16], "tradereport": [1, 2, 4, 12, 16], "assign": [1, 2, 4, 6, 7, 12, 16, 18, 19, 20, 23, 25, 26, 28, 34, 37, 38, 41, 47, 64], "generate_position_status_report": [1, 2, 4, 16], "positionstatusreport": [1, 2, 4, 9, 12, 16], "check_account_curr": 1, "check": [1, 4, 6, 7, 8, 9, 10, 11, 12, 16, 18, 24, 25, 28, 31, 34, 37, 38, 45, 49, 51, 55, 61, 64], "against": [1, 25, 34, 36, 47, 57], "handle_order_stream_upd": 1, "wait_for_ord": 1, "timeout_second": 1, "10": [1, 4, 9, 12, 16, 25, 26, 43, 47, 48, 53, 57, 58, 59], "get": [1, 7, 8, 12, 16, 45, 52, 60, 64], "our": [1, 48, 58, 59, 61], "submit_ord": [1, 2, 4, 6, 12, 16, 34, 38, 41, 43, 48, 58], "come": [1, 58, 61], "back": [1, 8, 15, 29, 32, 37, 38, 62], "bet_id": 1, "As": [1, 9, 37, 43, 49, 59, 64], "precaut": 1, "wait": [1, 8, 58], "up": [1, 6, 8, 9, 12, 14, 16, 17, 23, 34, 36, 37, 41, 44, 45, 48, 50, 58, 59, 60, 61, 64], "ad": [1, 6, 7, 8, 12, 16, 34, 52, 58, 61, 66], "order_id_to_client_order_id": 1, "cancel_all_ord": [1, 2, 4, 6, 12, 16, 34, 43], "cancelallord": [1, 2, 4, 6, 12, 16, 34], "command": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 31, 34, 35, 38, 42, 43, 48, 50, 51, 55], "cancel": [1, 2, 4, 6, 8, 12, 16, 19, 24, 25, 31, 34, 38, 47, 48, 66], "cancel_ord": [1, 2, 4, 6, 12, 16, 34, 43], "cancelord": [1, 2, 4, 6, 12, 16, 19, 34], "generate_account_st": [1, 2, 4, 6, 12, 16], "info": [1, 2, 4, 6, 8, 9, 11, 12, 16, 19, 22, 25, 26, 46, 58, 64], "publish": [1, 2, 4, 6, 8, 12, 16, 18, 28, 34, 35, 43, 44, 45, 66], "directli": [1, 2, 4, 6, 7, 8, 10, 11, 12, 14, 16, 18, 19, 25, 31, 32, 34, 38, 41, 43, 44, 55, 58], "addit": [1, 2, 4, 6, 8, 9, 12, 16, 19, 22, 38, 43, 49, 54, 58, 62], "implement": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 19, 21, 30, 31, 32, 34, 35, 37, 39, 40, 43, 44, 46, 52, 54, 55, 62], "generate_mass_statu": [1, 2, 4, 16], "lookback_min": [1, 2, 4, 16], "executionmassstatu": [1, 2, 4, 12, 16], "lookback": [1, 2, 4, 9, 16], "generate_order_accept": [1, 2, 4, 6, 12, 16], "strategyid": [1, 2, 4, 6, 7, 8, 12, 15, 16, 19, 20, 25, 26, 34, 43, 48], "strategy_id": [1, 2, 4, 6, 7, 8, 9, 12, 15, 16, 19, 25, 26, 34, 43], "orderaccept": [1, 2, 4, 6, 12, 16, 19], "send": [1, 2, 4, 6, 8, 11, 12, 16, 19, 28, 35, 37, 43], "executionengin": [1, 2, 4, 6, 9, 12, 16, 33, 34, 38, 43], "strategi": [1, 2, 4, 6, 7, 8, 9, 12, 15, 16, 19, 20, 25, 26, 30, 31, 33, 34, 35, 37, 38, 41, 43, 44, 45, 47, 59, 62, 64, 66], "accept": [1, 2, 4, 6, 12, 16, 19, 25, 55], "generate_order_cancel_reject": [1, 2, 4, 6, 12, 16], "reason": [1, 2, 4, 6, 12, 16, 19, 20, 40, 48, 49, 54, 55, 58, 59, 61, 62, 64, 66], "ordercancelreject": [1, 2, 4, 6, 12, 16, 19], "reject": [1, 2, 4, 6, 12, 16, 19, 25, 45], "generate_order_cancel": [1, 2, 4, 6, 12, 16], "ordercancel": [1, 2, 4, 6, 12, 16, 19], "generate_order_expir": [1, 2, 4, 6, 12, 16], "orderexpir": [1, 2, 4, 6, 12, 16, 19], "expir": [1, 2, 4, 6, 8, 12, 16, 19, 25, 48], "generate_order_fil": [1, 2, 4, 6, 12, 16], "positionid": [1, 2, 4, 5, 6, 7, 8, 12, 15, 16, 19, 20, 25, 26, 34], "venue_position_id": [1, 2, 4, 6, 12, 16], "tradeid": [1, 2, 4, 6, 12, 16, 18, 19, 20, 25, 26], "trade_id": [1, 2, 4, 6, 12, 16, 18, 19, 25, 26], "order_sid": [1, 2, 4, 6, 8, 12, 16, 19, 25, 34, 41, 43, 47, 58], "ordertyp": [1, 2, 4, 6, 8, 12, 16, 19, 25], "order_typ": [1, 2, 4, 6, 12, 16, 19, 25], "quote_curr": [1, 2, 4, 6, 12, 16, 22, 26], "so": [1, 2, 4, 6, 8, 11, 12, 16, 17, 19, 20, 25, 29, 34, 38, 42, 43, 49, 52, 53, 55, 58, 60, 61, 62, 64], "must": [1, 2, 4, 6, 8, 9, 10, 11, 12, 16, 18, 19, 20, 23, 25, 28, 29, 34, 43, 45, 48, 53, 54, 55, 64, 65, 66], "pass": [1, 2, 4, 6, 7, 8, 10, 11, 12, 16, 19, 25, 29, 31, 34, 37, 38, 40, 42, 43, 45, 48, 49, 58, 59, 61, 63, 64, 65], "explicitli": [1, 2, 4, 6, 11, 12, 16, 19, 25, 35, 42, 64, 66], "ticket": [1, 2, 4, 6, 12, 16, 49], "here": [1, 2, 4, 6, 8, 10, 12, 16, 34, 35, 39, 41, 43, 44, 48, 49, 50, 52, 58, 62], "otherwis": [1, 2, 4, 6, 8, 12, 16, 19, 34, 43, 45], "engin": [1, 2, 4, 6, 9, 12, 16, 18, 29, 30, 31, 33, 34, 35, 40, 41, 42, 43, 59, 61, 62], "om": [1, 2, 4, 6, 12, 16, 26, 34], "resolut": [1, 2, 4, 6, 12, 16, 44, 62], "averag": [1, 2, 4, 5, 6, 10, 12, 14, 16, 19, 25, 26, 41], "generate_order_modify_reject": [1, 2, 4, 6, 12, 16], "ordermodifyreject": [1, 2, 4, 6, 12, 16, 19], "generate_order_reject": [1, 2, 4, 6, 12, 16], "orderreject": [1, 2, 4, 6, 12, 16, 19], "generate_order_submit": [1, 2, 4, 6, 12, 16], "ordersubmit": [1, 2, 4, 6, 12, 16, 19], "submit": [1, 2, 4, 6, 7, 9, 12, 15, 16, 19, 25, 31, 34, 41, 47, 64, 66], "generate_order_trigg": [1, 2, 4, 6, 12, 16], "ordertrigg": [1, 2, 4, 6, 12, 16, 19], "trigger": [1, 2, 4, 6, 8, 10, 12, 16, 19, 25, 34, 38, 42, 62], "generate_order_upd": [1, 2, 4, 6, 12, 16], "trigger_pric": [1, 2, 4, 6, 8, 12, 16, 19, 25, 34, 47, 64], "venue_order_id_modifi": [1, 2, 4, 6, 12, 16], "orderupd": [1, 2, 4, 6, 12, 16, 19], "modifi": [1, 2, 4, 6, 9, 12, 16, 19, 31, 34, 36, 38, 66], "get_account": [1, 2, 4, 6, 12, 16], "modify_ord": [1, 2, 4, 6, 12, 16, 34, 43], "modifyord": [1, 2, 4, 6, 12, 16, 19, 34], "oms_typ": [1, 2, 4, 6, 7, 9, 12, 16, 34, 58, 59], "omstyp": [1, 2, 4, 6, 7, 9, 12, 16, 34], "query_ord": [1, 2, 4, 6, 12, 16, 34, 43], "queryord": [1, 2, 4, 6, 12, 16, 34], "reconcili": [1, 2, 4, 6, 9, 12, 16, 19], "submitord": [1, 2, 4, 6, 7, 12, 15, 16, 34, 38], "submit_order_list": [1, 2, 4, 6, 12, 16, 34, 43, 48], "submitorderlist": [1, 2, 4, 6, 7, 12, 15, 16, 34], "get_cached_betfair_cli": 1, "credenti": 1, "exist": [1, 2, 4, 6, 7, 8, 9, 11, 12, 16, 22, 24, 28, 29, 34, 41, 43, 46, 47, 55, 59, 61, 66], "sourc": [1, 2, 4, 13, 18, 29, 44, 48, 54, 59, 60, 61, 62, 64], "betfair_usernam": 1, "env": [1, 57], "var": 1, "betfair_password": 1, "betfair_app_kei": [1, 63], "get_cached_betfair_instrument_provid": 1, "binancehttpcli": [1, 2, 64], "load": [1, 2, 4, 6, 7, 8, 9, 12, 15, 16, 29, 33, 34, 35, 58, 64, 65], "binanceinstrumentprovid": [1, 45, 64], "betfairlivedataclientfactori": [1, 63], "livedataclientfactori": [1, 2, 4, 16], "live": [1, 2, 4, 8, 11, 12, 33, 34, 36, 37, 38, 40, 42, 46, 47, 48, 50, 62, 63, 64, 65, 66], "new": [1, 2, 4, 6, 8, 9, 11, 12, 17, 19, 22, 31, 32, 34, 41, 43, 47, 49, 57], "betfairliveexecclientfactori": [1, 63], "liveexecclientfactori": [1, 2, 4, 16], "instrumentprovid": [1, 2, 4, 8, 9, 16, 29, 35, 45], "mean": [1, 2, 4, 10, 11, 14, 28, 29, 58, 59, 62, 66], "bettinginstru": [1, 22, 45], "apicli": [1, 2], "load_ids_async": [1, 2, 4, 8], "model": [1, 2, 4, 5, 6, 8, 9, 12, 16, 27, 41, 42, 43, 45, 48, 58, 59, 61, 62], "load_async": [1, 2, 4, 8], "asynchron": [1, 2, 4, 8, 11, 12, 16, 44, 62], "load_all_async": [1, 2, 4, 8, 35, 45], "latest": [1, 2, 4, 8, 13, 41, 45, 46, 50, 57, 58], "load_market": 1, "search": [1, 4, 59, 65], "debug": [1, 8, 9, 11, 12, 16, 31, 46], "interact": [1, 11, 12, 20, 36, 42, 43, 47, 52, 57, 66], "search_instru": 1, "instrument_filt": 1, "within": [1, 4, 6, 7, 8, 12, 14, 16, 18, 19, 20, 31, 34, 35, 37, 41, 42, 47, 54, 62, 64], "get_betting_instru": 1, "market_id": [1, 22], "selection_id": [1, 22], "handicap": 1, "perform": [1, 5, 6, 8, 9, 10, 11, 12, 16, 30, 31, 34, 40, 42, 43, 44, 46, 49, 52, 54, 55, 58, 59, 61, 62, 64, 66], "friendli": 1, "lookup": [1, 10], "add_bulk": [1, 2, 4, 8], "bulk": [1, 2, 4, 8, 12, 18, 24, 25, 36, 42], "add_curr": [1, 2, 4, 7, 8, 15], "held": [1, 2, 4, 7, 8, 25, 31, 34, 36], "string": [1, 2, 4, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 29, 31, 32, 33, 43, 46, 48, 61], "find": [1, 2, 4, 8, 22, 27, 35, 39, 42, 44, 50, 52, 59, 61], "get_al": [1, 2, 4, 8], "map": [1, 2, 4, 8, 11, 12, 16, 17, 18, 19, 27, 29, 32, 52], "immedi": [1, 2, 4, 8, 12, 36, 43, 47, 63, 64, 65], "list_al": [1, 2, 4, 8], "betfairstreamcli": 1, "http_client": 1, "logger_adapt": 1, "message_handl": 1, "host": [1, 4, 9], "com": [1, 14, 25, 50, 53, 57, 58, 59, 61], "port": [1, 4, 9, 42, 58], "crlf": 1, "post_connect": 1, "post": [1, 6, 9, 29, 31, 62, 64], "post_disconnect": 1, "betfairorderstreamcli": 1, "partition_matched_by_strategy_ref": 1, "include_overall_posit": 1, "customer_strategy_ref": 1, "betfairmarketstreamcli": 1, "binancedataclientconfig": 2, "api_kei": [2, 63, 64], "api_secret": [2, 63, 64], "binanceaccounttyp": [2, 35, 64], "base_url_http": [2, 64], "base_url_w": [2, 64], "u": [2, 54, 57, 58, 61, 66], "testnet": [2, 35], "use_agg_trade_tick": [2, 64], "binancedatacli": 2, "public": [2, 8, 12, 25], "binance_api_kei": [2, 64], "binance_testnet_api_kei": [2, 64], "environ": [2, 9, 33, 35, 38, 44, 52, 57, 58, 62, 63, 64, 65], "variabl": [2, 49, 50, 58, 59, 61, 63, 64, 65], "client": [2, 3, 4, 6, 7, 8, 9, 12, 15, 16, 19, 20, 25, 26, 34, 38, 42, 43, 44, 45, 63, 64, 65, 66], "endpoint": [2, 11, 12, 28, 64], "websocket": [2, 3, 62, 64], "aggreg": [2, 9, 18, 44], "binanceexecclientconfig": 2, "clock_sync_interval_sec": 2, "warn_gtd_to_gtc": 2, "use_position_id": 2, "treat_expired_as_cancel": 2, "binanceexecutioncli": 2, "warn": [2, 6, 7, 8, 9, 12, 16, 34, 38, 43, 46, 66], "gtd": [2, 6, 8, 12, 19, 25, 34, 47, 62], "forc": [2, 6, 8, 12, 19, 25, 34, 48, 62], "transform": [2, 7, 32, 38], "gtc": [2, 8, 12, 19, 25, 47], "hedg": [2, 6, 7, 34, 59], "position_id": [2, 5, 7, 12, 15, 19, 25, 26, 34, 38, 58], "virtual": [2, 7, 51, 57], "semant": 2, "treat": [2, 38], "certain": [2, 23, 28, 32, 42, 43, 45, 47, 58], "combin": [2, 10, 18, 20, 36, 41, 44, 45, 54], "you": [2, 6, 8, 9, 12, 13, 28, 29, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65], "uniform": 2, "get_cached_binance_http_cli": [2, 35], "secret": [2, 4, 35], "base_url": 2, "is_testnet": [2, 35], "is_u": 2, "url": 2, "get_cached_binance_spot_instrument_provid": 2, "binancespotinstrumentprovid": 2, "get_cached_binance_futures_instrument_provid": 2, "binancefuturesinstrumentprovid": [2, 35], "binancelivedataclientfactori": [2, 64], "union": [2, 4, 6, 9], "binancespotdatacli": [2, 64], "binancefuturesdatacli": [2, 64], "binanceliveexecclientfactori": [2, 64], "binancespotexecutioncli": [2, 64], "binancefuturesexecutioncli": [2, 64], "common": [2, 7, 16, 33, 35, 36, 38, 43, 52, 63, 64, 65], "doc": [2, 9, 44, 49, 52, 58, 60, 64, 66], "github": [2, 58], "io": [2, 50, 58], "apidoc": 2, "en": [2, 8, 10, 20, 25, 50], "definit": [2, 4, 41, 45, 52, 54, 61, 64], "binanceratelimittyp": 2, "binanceratelimitinterv": 2, "interv": [2, 4, 6, 8, 9, 11, 12, 16, 29, 31, 34, 43], "binanceklineinterv": 2, "kline": 2, "chart": 2, "binanceexchangefiltertyp": 2, "binancesymbolfiltertyp": 2, "binanceordersid": 2, "binanceexecutiontyp": 2, "binanceorderstatu": 2, "binancetimeinforc": 2, "binanceordertyp": 2, "binancesecuritytyp": 2, "secur": [2, 4, 22, 65], "binancemethodtyp": 2, "binanceneworderresptyp": 2, "neworderresptyp": 2, "binanceenumpars": 2, "through": [2, 4, 6, 7, 8, 10, 11, 12, 14, 16, 18, 19, 25, 28, 31, 32, 34, 35, 38, 44, 45, 50, 52, 54, 56, 59, 61, 62], "concret": [2, 6, 7, 8, 10, 11, 12, 14, 16, 18, 19, 25, 31, 32, 34], "subclass": [2, 6, 7, 8, 10, 11, 12, 14, 16, 18, 19, 25, 29, 30, 31, 32, 34, 37, 45], "binancebar": [2, 64], "high": [2, 8, 11, 12, 14, 16, 18, 29, 31, 34, 42, 44, 46, 52, 54, 55, 62], "low": [2, 6, 10, 14, 18, 29, 34, 64, 66], "volum": [2, 11, 14, 18, 29, 44, 61, 64], "quote_volum": 2, "taker_buy_base_volum": 2, "taker_buy_quote_volum": 2, "candlestick": [2, 14], "is_revis": [2, 18], "revis": [2, 18], "previou": [2, 14, 18, 28, 34, 41], "is_single_pric": [2, 18], "ohlc": [2, 18], "singl": [2, 6, 7, 8, 9, 12, 16, 18, 20, 28, 29, 30, 34, 42, 44, 45, 46, 48, 53, 58, 59, 61, 64], "binancetick": [2, 64], "price_chang": 2, "price_change_perc": 2, "weighted_avg_pric": 2, "last_pric": 2, "open_pric": 2, "high_pric": [2, 14], "low_pric": [2, 14], "open_time_m": 2, "close_time_m": 2, "first_id": 2, "last_id": 2, "prev_close_pric": 2, "bid_pric": [2, 59, 61], "bid_qti": 2, "ask_pric": [2, 59, 61], "ask_qti": 2, "24hr": [2, 64], "statist": [2, 5, 42, 62], "percent": 2, "weight": [2, 14, 42], "millisecond": [2, 6, 8, 9, 10, 12, 29, 34, 44, 66], "first": [2, 8, 25, 28, 29, 32, 37, 43, 44, 50, 56, 57, 58, 62, 64], "over": [2, 6, 14, 19, 43, 44, 48, 49, 59, 61, 64], "usdt_futur": [2, 35, 64], "binancecommondatacli": 2, "histor": [2, 4, 6, 8, 11, 12, 16, 34, 42, 44, 59, 61, 62, 64, 66], "binancefuturescontracttyp": 2, "deriv": [2, 6, 22, 40, 41, 43, 64], "contract": [2, 4, 22, 23, 37, 45, 47, 54, 64, 65], "binancefuturescontractstatu": 2, "binancefuturespositionsid": 2, "binancefuturesworkingtyp": 2, "work": [2, 8, 9, 37, 42, 44, 45, 46, 47, 48, 50, 52, 58, 59, 60, 64, 66], "binancefuturesmargintyp": 2, "binancefuturespositionupdatereason": 2, "binancefutureseventtyp": 2, "binancefuturesenumpars": 2, "binancecommonexecutioncli": 2, "binancefuturesmarkpriceupd": 2, "mark": [2, 14, 28, 42, 47, 64, 66], "index": [2, 7, 8, 10, 14, 23, 29, 47, 62], "estimated_settl": 2, "funding_r": 2, "ts_next_fund": 2, "fund": [2, 64], "estim": 2, "settl": [2, 22], "hour": [2, 4, 18, 44], "settlement": [2, 22, 45], "next": [2, 6, 8, 10, 11, 29, 34, 49, 58, 59], "binancespotpermiss": 2, "permiss": [2, 63, 64, 65], "binancespotsymbolstatu": 2, "binancespoteventtyp": 2, "binancespotenumpars": 2, "brokerag": [3, 66], "each": [3, 6, 8, 12, 16, 29, 32, 34, 35, 36, 37, 40, 42, 43, 46, 47, 48, 53, 58, 59, 61, 66], "lower": [3, 14, 25, 28, 47, 52, 58, 64], "rest": [3, 6, 11, 12, 62, 63, 64], "built": [3, 4, 13, 16, 17, 21, 23, 32, 40, 43, 44, 47, 48, 52, 54, 58, 64, 65], "top": [3, 11, 12, 13, 18, 24, 25, 34, 35, 49, 55], "contractid": 4, "as_integer_ratio": 4, "integ": [4, 6, 8, 10, 16, 18, 22, 23, 31, 32], "ratio": [4, 5, 14, 59, 61], "whose": [4, 36, 43], "exactli": [4, 19, 38, 45], "origin": [4, 7, 12, 20, 25, 34, 38, 43, 62], "denomin": [4, 8, 17, 19, 23, 25], "bit_count": 4, "ones": 4, "binari": [4, 42, 57, 62], "absolut": [4, 10, 29], "known": [4, 29, 36, 42, 47], "popul": 4, "bin": [4, 5, 18], "13": 4, "0b1101": 4, "3": [4, 14, 24, 53, 57], "bit_length": 4, "bit": [4, 6, 10, 57], "necessari": [4, 18, 28, 37, 38, 43, 45, 47, 52, 54, 58, 64, 65], "37": 4, "0b100101": 4, "conjug": 4, "complex": [4, 10, 12, 32, 43, 44, 50, 58, 62], "ration": 4, "lowest": [4, 14, 39, 42, 54, 60], "from_byt": 4, "byteord": 4, "big": 4, "sign": [4, 18, 19, 25, 26], "arrai": [4, 10], "hold": [4, 10, 12, 37, 38, 42, 62], "either": [4, 6, 8, 12, 20, 23, 34, 35, 36, 38, 44, 47, 58, 63, 64, 65, 66], "buffer": [4, 8, 9, 16], "protocol": [4, 9, 12, 20, 29, 34], "iter": [4, 6, 8, 12, 14], "produc": [4, 7, 14, 28, 42, 45, 46, 52], "bytearrai": 4, "exampl": [4, 18, 20, 23, 28, 29, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 55, 57, 58, 61, 64], "most": [4, 6, 7, 8, 12, 28, 34, 38, 42, 45, 54, 62, 63, 64, 65], "signific": 4, "begin": [4, 28, 58], "littl": [4, 55, 58], "To": [4, 25, 42, 43, 44, 49, 54, 57, 58, 59, 60, 63, 64, 65, 66], "nativ": [4, 22, 34, 45, 62, 64, 66], "sy": 4, "indic": [4, 6, 7, 8, 9, 10, 18, 26, 30, 34, 42, 43, 47, 58], "two": [4, 14, 20, 22, 25, 27, 35, 36, 37, 41, 43, 46, 47, 48, 49, 61, 63, 64, 65], "complement": 4, "imag": [4, 58], "imaginari": 4, "part": [4, 8, 25, 42, 45, 48, 49, 50], "numer": [4, 8, 20], "real": [4, 24, 42, 44, 62], "to_byt": 4, "overflowerror": [4, 17, 22, 23], "determin": [4, 9, 14, 22, 28, 34, 43, 44, 61], "comboleg": 4, "conid": 4, "openclos": 4, "shortsaleslot": 4, "designatedloc": 4, "exemptcod": 4, "leg": 4, "combo": 4, "deltaneutralcontract": 4, "neutral": 4, "ibcontract": [4, 65], "sectyp": [4, 65], "liter": 4, "stk": [4, 65], "opt": [4, 48], "fut": 4, "fop": 4, "contfut": [4, 65], "primaryexchang": [4, 65], "localsymbol": 4, "tradingclass": 4, "lasttradedateorcontractmonth": [4, 65], "multipli": [4, 14, 22, 26, 45], "strike": [4, 22], "right": [4, 13, 29, 49, 52, 55, 62], "includeexpir": 4, "secidtyp": [4, 65], "secid": [4, 65], "descript": [4, 13, 25, 26, 41, 48], "issuerid": 4, "combolegsdescrip": 4, "adapt": [4, 8, 14, 33, 37, 42, 44, 45, 57, 62, 63, 64, 65, 66], "interactive_brok": 4, "build_futures_chain": [4, 65], "build_options_chain": [4, 65], "min_expiry_dai": 4, "max_expiry_dai": 4, "describ": [4, 42, 44, 49, 58], "futur": [4, 22, 33, 35, 41, 43, 44, 45, 47, 54, 60, 62, 64, 65, 66], "e": [4, 8, 9, 12, 25, 26, 28, 32, 43, 45, 46, 49, 58, 62, 64, 65], "where": [4, 8, 9, 10, 19, 25, 27, 28, 32, 34, 38, 42, 47, 48, 49, 52, 59, 61, 62, 64, 66], "Will": [4, 7, 8, 9, 12, 17, 20, 28, 34, 43], "smart": [4, 65], "stock": [4, 36, 65], "full": [4, 8, 16, 25, 36, 38, 41, 43, 45, 47, 58, 64, 66], "chain": 4, "options_chain": 4, "futures_chain": 4, "dai": [4, 5, 6, 8, 12, 14, 18, 19, 25, 44, 47], "y": [4, 37, 46, 58, 59, 61], "m": [4, 8, 10, 46, 59, 61], "d": [4, 14, 46, 59, 61], "expiri": [4, 22, 25, 34], "ibordertag": 4, "whatif": 4, "ocagroup": 4, "ocatyp": 4, "allornon": 4, "activestarttim": 4, "activestoptim": 4, "goodaftertim": 4, "outsiderth": 4, "attach": [4, 38, 47], "tag": [4, 8, 9, 12, 19, 20, 25, 34, 36, 47], "ib": [4, 20, 57, 65, 66], "ibcontractdetail": 4, "marketnam": 4, "mintick": 4, "validexchang": 4, "pricemagnifi": 4, "underconid": 4, "longnam": 4, "contractmonth": 4, "industri": 4, "categori": [4, 55], "subcategori": 4, "timezoneid": 4, "tradinghour": 4, "liquidhour": 4, "evrul": 4, "evmultipli": 4, "mdsizemultipli": 4, "agggroup": 4, "undersymbol": 4, "undersectyp": 4, "marketruleid": 4, "secidlist": 4, "realexpirationd": 4, "lasttradetim": 4, "stocktyp": 4, "minsiz": 4, "170141183460469231731687303715884105727": 4, "sizeincr": 4, "suggestedsizeincr": 4, "cusip": 4, "descappend": 4, "bondtyp": 4, "coupontyp": 4, "putabl": 4, "coupon": 4, "matur": 4, "issued": 4, "nextoptiond": 4, "nextoptiontyp": 4, "nextoptionparti": 4, "contractdetail": 4, "intern": [4, 6, 8, 9, 11, 12, 14, 16, 17, 18, 22, 28, 31, 43, 48, 53, 58, 59], "eas": 4, "interactivebrokersgatewayconfig": 4, "trading_mod": 4, "paper": [4, 42, 44], "read_only_api": 4, "timeout": [4, 9, 12, 16], "300": 4, "interactivebrokersgatewai": 4, "setup": [4, 6, 8, 12, 34, 58], "tws_usernam": [4, 65], "tws_password": [4, 65], "tw": [4, 65], "docker": [4, 57, 62, 65], "try": [4, 58], "gatewai": [4, 57, 64, 65], "interactivebrokersinstrumentproviderconfig": [4, 65], "frozenset": [4, 9], "load_contract": [4, 65], "cache_validity_dai": 4, "pickle_path": 4, "interactivebrokersinstrumentprovid": [4, 65], "global": [4, 20, 31, 32], "fresh": [4, 59, 61], "pull": [4, 58, 59, 61], "upon": [4, 41, 45], "tradingnod": [4, 9, 15, 16, 35, 44, 63, 64, 65], "mani": [4, 7, 8, 11, 12, 21, 29, 42, 50, 54, 58, 59, 61, 62, 64], "make": [4, 6, 8, 12, 19, 22, 25, 38, 42, 43, 44, 48, 51, 54, 57, 58, 61, 62], "even": [4, 25, 48, 49], "restart": 4, "path": [4, 8, 9, 29, 38, 46, 58, 59, 61], "store": [4, 14, 15, 23, 32, 41, 59, 61], "pickl": [4, 6], "dure": [4, 19, 40, 49, 52, 58], "cache_valid": 4, "period": [4, 5, 14, 20, 43, 45, 49], "interactivebrokersdataclientconfig": [4, 65], "ibg_host": 4, "127": 4, "ibg_port": 4, "ibg_client_id": 4, "use_regular_trading_hour": 4, "market_data_typ": 4, "ibapi": [4, 65], "enum_implem": 4, "0x7fba5bd9ac50": 4, "interactivebrokersdatacli": [4, 65], "hostnam": 4, "ip": 4, "address": [4, 9, 28, 43, 62], "4002": 4, "4001": 4, "server": [4, 48, 58], "client_id": [4, 6, 8, 9, 11, 12, 16, 29, 34, 35, 37, 64], "regular": [4, 38, 43], "mostli": [4, 62], "interactivebrok": [4, 25], "rth": 4, "realtim": 4, "ibmarketdatatypeenum": 4, "interactivebrokerscli": 4, "delayed_frozen": 4, "without": [4, 8, 20, 34, 58, 62], "interactivebrokersexecclientconfig": 4, "interactivebrokersexeccli": 4, "ibg_account_id": 4, "tws_account": 4, "interactivebrokersexecutioncli": [4, 65], "get_cached_ib_cli": 4, "get_cached_interactive_brokers_instrument_provid": 4, "interactivebrokerslivedataclientfactori": [4, 65], "interactivebrokersliveexecclientfactori": [4, 65], "interactivebrokersspotexecutioncli": 4, "It": [4, 6, 8, 12, 16, 18, 20, 37, 38, 40, 41, 43, 44, 45, 48, 52, 54, 57, 59, 60, 61, 62, 64, 66], "import": [4, 6, 8, 9, 12, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 58, 60, 61, 65], "shall": 4, "have": [4, 6, 8, 9, 12, 13, 19, 23, 28, 30, 34, 36, 38, 42, 43, 45, 48, 49, 58, 59, 61, 62, 63, 64, 65], "enough": [4, 11, 19, 43, 50, 62, 65], "Not": [4, 62], "case": [4, 10, 29, 30, 35, 37, 43, 44, 45, 55, 58, 59, 61, 63, 64, 65], "group": [5, 6, 9, 10, 11, 12, 16, 31, 32, 34, 36, 40, 42], "relat": [5, 6, 7, 10, 11, 12, 14, 25, 36, 42, 43, 45, 52], "portfolioanalyz": [5, 30, 40], "analyz": [5, 14, 30, 40, 42], "track": [5, 43], "metric": [5, 14, 41], "register_statist": [5, 40], "portfoliostatist": [5, 40], "deregister_statist": 5, "deregist": [5, 6, 7, 8, 11, 12, 16, 28, 34], "seri": [5, 10, 40, 43, 53], "calculate_statist": 5, "add_posit": [5, 7, 15], "add_trad": 5, "realized_pnl": [5, 19, 26, 40], "realiz": [5, 19, 26, 40, 54], "add_return": 5, "entri": [5, 8, 19, 26, 31, 36, 47, 58, 61], "panda": [5, 10, 16, 59, 61], "core": [5, 8, 9, 11, 12, 28, 33, 37, 38, 45, 47, 52, 54, 58, 59, 61, 62], "total_pnl": [5, 26], "unrealized_pnl": [5, 19, 26, 30], "unreal": [5, 9, 19, 26, 30], "total_pnl_percentag": 5, "percentag": [5, 8, 10, 22, 31, 45, 47], "get_performance_stats_pnl": 5, "profit": [5, 8, 25, 36, 47], "loss": [5, 7, 8, 12, 14, 16, 25, 31, 36, 47], "get_performance_stats_return": 5, "get_performance_stats_gener": 5, "get_stats_pnls_format": 5, "backtest": [5, 8, 11, 12, 29, 33, 34, 37, 38, 42, 46, 48, 50, 61, 62], "format": [5, 8, 9, 10, 18, 20, 23, 24, 29, 46, 58, 59, 61], "print": [5, 9, 10, 24], "footer": 5, "get_stats_returns_format": 5, "get_stats_general_format": 5, "reportprovid": 5, "variou": [5, 8, 14, 27, 28, 42, 44, 48, 51, 53, 58, 59, 61], "generate_orders_report": [5, 34], "generate_order_fills_report": [5, 34, 58], "generate_positions_report": [5, 34, 58], "generate_account_report": [5, 34, 58], "serializ": 5, "primit": [5, 32, 43, 50, 52, 54], "calculate_from_return": 5, "calculate_from_realized_pnl": [5, 40], "calculate_from_ord": 5, "calculate_from_posit": 5, "expect": [5, 6, 10, 18, 20, 29, 33, 34, 40, 42, 50, 54, 58, 66], "longratio": 5, "precis": [5, 11, 12, 15, 17, 18, 22, 23, 24, 26, 27, 29], "2": [5, 14, 15, 22, 41, 43, 57, 58], "output": [5, 8, 9, 14, 40, 55, 58], "avglos": 5, "loser": [5, 40], "maxlos": 5, "minlos": 5, "minimum": [5, 8, 9, 12, 14, 22, 27, 45, 46, 65], "profitfactor": 5, "annual": 5, "factor": [5, 62], "win": [5, 40, 42], "returnsaverag": 5, "returnsaverageloss": 5, "lose": [5, 15, 29], "returnsaveragewin": 5, "returnsvolatil": 5, "252": 5, "volatil": [5, 14], "downsampl": 5, "daili": [5, 9, 46, 64], "riskreturnratio": 5, "risk": [5, 9, 16, 19, 25, 30, 33, 34, 38, 42, 62], "sharperatio": 5, "sharp": 5, "sortinoratio": 5, "sortino": 5, "winrat": [5, 40], "avgwinn": 5, "winner": [5, 40], "maxwinn": 5, "minwinn": 5, "backtestdatacli": 6, "clientid": [6, 8, 11, 12, 16, 20, 34, 35, 37, 64], "config": [6, 7, 8, 11, 12, 15, 16, 29, 31, 33, 34, 43, 48, 49, 58, 59, 63, 64, 65], "datacli": [6, 9, 11, 16, 35], "execut": [6, 7, 8, 9, 11, 16, 19, 20, 25, 31, 33, 34, 36, 42, 44, 45, 58, 62, 63, 64, 65, 66], "backtestmarketdatacli": 6, "marketdatacli": [6, 11, 16], "backtestengin": [6, 9, 15, 43, 44, 58], "backtestengineconfig": [6, 9, 46, 50, 58, 59], "add_actor": [6, 34], "actor": [6, 7, 8, 9, 12, 15, 33, 34, 35, 37, 41, 42, 43, 44, 45, 62, 64], "add_data": 6, "element": [6, 7], "assum": [6, 8, 41, 42, 43, 50, 64], "vari": [6, 23, 47], "could": [6, 9, 14, 16, 19, 21, 28, 29, 34, 35, 37, 43, 49, 50, 51, 55, 61], "incorrect": 6, "logic": [6, 8, 11, 12, 21, 28, 38, 42, 45, 49, 62], "add_exec_algorithm": [6, 34, 43], "execalgorithm": [6, 9, 12, 34, 43], "exec_algorithm": [6, 9, 34, 43], "algorithm": [6, 7, 8, 9, 12, 14, 19, 20, 25, 34, 47, 62], "add_instru": [6, 7, 15], "its": [6, 7, 8, 9, 11, 12, 13, 25, 32, 34, 38, 41, 43, 45, 52, 54, 55, 61, 62], "would": [6, 8, 25, 28, 29, 40, 41, 42, 48, 55, 58, 61], "invalidconfigur": [6, 12, 16], "add_strategi": [6, 34], "add_venu": 6, "simulationmodul": 6, "fillmodel": 6, "fill_model": 6, "latencymodel": 6, "latency_model": 6, "frozen_account": [6, 9], "bar_execut": [6, 9], "reject_stop_ord": [6, 9], "support_gtd_ord": 6, "use_random_id": 6, "simulatedexchang": [6, 47], "net": [6, 30, 34, 58], "simul": [6, 24, 29, 42, 44, 58], "latenc": [6, 29], "frozen": 6, "process": [6, 8, 10, 11, 12, 16, 28, 29, 31, 34, 38, 47, 61], "move": [6, 14, 22, 27, 36, 47], "submiss": [6, 38], "randomli": 6, "backtest_end": 6, "backtest_start": 6, "change_fill_model": 6, "clear_actor": [6, 34], "clear_data": 6, "clear_exec_algorthm": 6, "clear_strategi": [6, 34], "releas": [6, 7, 8, 12, 13, 33, 34, 36, 41], "resourc": [6, 8, 12, 33, 34, 60], "dump_pickled_data": 6, "manual": [6, 50, 53, 58, 59, 61], "requir": [6, 8, 12, 19, 22, 23, 25, 29, 36, 37, 38, 41, 42, 43, 45, 47, 48, 50, 57, 58, 59, 61, 64], "previous": [6, 8, 12, 16, 34], "get_result": 6, "backtestresult": [6, 58], "instance_id": [6, 8, 9, 16, 33, 46], "per": [6, 8, 9, 11, 12, 15, 16, 27, 29, 30, 31, 34, 38, 40, 43, 47, 49, 61, 64], "kernel": [6, 9, 33, 42], "nautiluskernel": [6, 9, 33, 42], "list_venu": 6, "load_pickled_data": 6, "highli": [6, 50, 54, 57, 62], "advis": [6, 38, 41, 66], "obtain": 6, "direct": [6, 14, 19, 26, 28, 43, 47, 48], "access": [6, 7, 43, 54, 62, 66], "follow": [6, 14, 23, 35, 36, 37, 38, 40, 41, 43, 44, 46, 47, 49, 50, 51, 53, 57, 58, 59, 61, 63, 64, 65, 66], "assumpt": 6, "inherit": [6, 8, 9, 34, 37, 40, 43, 48], "successfulli": [6, 64], "dump": 6, "prior": [6, 7, 22, 28], "machine_id": [6, 8, 16, 33], "machin": [6, 8, 16, 33, 56, 62], "portfoliofacad": [6, 12, 16, 30, 31, 33, 34], "drop": [6, 8, 9, 10, 13], "separ": [6, 9, 13, 20, 23, 29, 35, 36, 45, 46, 48, 49, 57, 58, 59, 61, 64], "desir": [6, 13, 43, 48], "run_config_id": 6, "At": [6, 12, 34, 65], "analysi": [6, 9, 14, 42], "more": [6, 8, 10, 22, 25, 28, 36, 39, 41, 43, 44, 45, 47, 49, 50, 58, 59, 60, 61, 62, 64], "fit": [6, 54], "memori": [6, 9, 42, 52, 54, 61, 62], "util": [6, 38, 41, 42, 44, 49, 52, 62], "utc": [6, 8, 10, 11, 12, 25, 34, 46, 47, 59, 61], "token": 6, "backtestrunconfig": [6, 9, 58, 59], "run_finish": 6, "finish": 6, "run_id": 6, "run_start": 6, "testclock": [6, 8], "financi": [6, 18, 20, 22, 23, 26, 27, 61], "random": [6, 10, 29], "32": 6, "unsign": 6, "invalid": [6, 8, 10, 12, 25, 41, 42, 45], "adjust_account": 6, "adjust": [6, 14, 58], "best_ask_pric": [6, 24], "best": [6, 18, 24, 25, 36, 47, 52], "best_bid_pric": [6, 24], "wire": [6, 8, 19, 34, 43, 48], "exec_cli": [6, 9, 63, 64, 65], "backtestexeccli": 6, "get_book": 6, "get_matching_engin": 6, "ordermatchingengin": 6, "get_open_ask_ord": 6, "get_open_bid_ord": 6, "get_open_ord": 6, "initialize_account": 6, "is_frozen_account": 6, "ts_now": [6, 8], "give": [6, 8, 12, 28, 34, 62], "pend": [6, 8, 12, 19, 23, 28, 30, 34], "along": [6, 47], "process_bar": 6, "dynam": [6, 29, 41, 43, 52], "auction": 6, "process_instrument_statu": 6, "venuestatusupd": [6, 8, 12, 18, 34, 44], "process_order_book_delta": 6, "process_quote_tick": 6, "process_trade_tick": 6, "process_venue_statu": 6, "register_cli": [6, 11, 12, 16], "tradingcommand": [6, 12, 16], "set_fill_model": 6, "set_latency_model": 6, "executioncli": [6, 11, 12, 16, 30, 35, 38, 43], "prob_fill_on_limit": 6, "prob_fill_on_stop": 6, "prob_slippag": 6, "random_se": [6, 29], "probabilist": 6, "probabl": 6, "slippag": [6, 25], "slip": 6, "seed": [6, 19, 29], "is_limit_fil": 6, "is_slip": 6, "is_stop_fil": 6, "aggress": [6, 25], "base_latency_nano": 6, "nanoseconds_in_millisecond": 6, "insert_latency_nano": 6, "update_latency_nano": 6, "cancel_latency_nano": 6, "o": [6, 35, 43, 46, 59, 61, 62, 65], "1_000_000_000": 6, "insert": [6, 8], "reach": [6, 8, 11, 13, 19, 25, 26, 47], "fxrolloverinterestconfig": 6, "rate_data": 6, "component_id": [6, 7, 8, 9, 15], "actorconfig": [6, 8, 9], "fxrolloverinterestmodul": 6, "add_synthet": [6, 7, 8, 12, 15, 34, 41], "syntheticinstru": [6, 7, 8, 12, 15, 22, 34, 41], "synthet": [6, 7, 8, 11, 12, 15, 16, 20, 22, 34], "update_synthet": [6, 8, 12, 34, 41], "deregister_warning_ev": [6, 8, 12, 34], "handle_bar": [6, 8, 12, 14, 34], "on_bar": [6, 8, 12, 34], "individu": [6, 8, 12, 29, 34, 43, 46, 64], "handle_data": [6, 8, 12, 34], "on_data": [6, 8, 12, 34, 37, 64], "handle_ev": [6, 8, 12, 34], "on_ev": [6, 8, 12, 34, 58], "handle_historical_data": [6, 8, 12, 34], "handle_instru": [6, 8, 12, 34], "on_instru": [6, 8, 12, 34, 45], "handle_instrument_clos": [6, 8, 12, 34], "on_instrument_clos": [6, 8, 12, 34], "handle_instrument_status_upd": [6, 8, 12, 34], "on_instrument_status_upd": [6, 8, 12, 34], "handle_order_book": [6, 8, 12, 34], "order_book": [6, 7, 8, 12, 34], "on_order_book": [6, 8, 12, 34], "handle_order_book_delta": [6, 8, 12, 34], "on_order_book_delta": [6, 8, 12, 34], "handle_quote_tick": [6, 8, 11, 12, 14, 34, 58], "on_quote_tick": [6, 8, 12, 34, 58], "handle_tick": [6, 8, 12, 34], "on_tick": [6, 8, 12, 34], "handle_trade_tick": [6, 8, 11, 12, 14, 34], "on_trade_tick": [6, 8, 12, 34], "handle_venue_status_upd": [6, 8, 12, 34], "on_venue_status_upd": [6, 8, 12, 34], "has_pending_request": [6, 8, 12, 34], "els": [6, 7, 8, 10, 11, 12, 16, 17, 18, 20, 26, 30, 34, 55, 58], "is_pending_request": [6, 8, 12, 28, 34], "request_id": [6, 8, 10, 11, 12, 28, 34, 35], "on_load": [6, 8, 12, 34], "runtimeerror": [6, 8, 12, 22, 32, 34], "caught": [6, 8, 12, 34], "log_diagnost": 6, "diagnost": 6, "out": [6, 8, 11, 12, 13, 15, 40, 58, 61, 62, 64], "overridden": [6, 8, 12, 34], "cleanup": [6, 8, 12, 34], "on_historical_data": [6, 8, 12, 34], "save": [6, 8, 9, 12, 16, 33, 34, 58, 61], "on_sav": [6, 8, 12, 34], "intent": [6, 8, 12, 43, 55], "recommend": [6, 8, 12, 37, 41, 45, 50, 51, 52, 56, 57], "paus": [6, 8, 12], "pending_request": [6, 8, 12, 34], "publish_data": [6, 8, 12, 34], "being": [6, 7, 8, 12, 20, 28, 34, 36, 38, 43, 47, 48, 50, 52, 54, 58], "publish_sign": [6, 8, 12, 34], "signal": [6, 8, 12, 14, 29, 33, 34, 58], "persist": [6, 7, 8, 9, 12, 15, 16, 33, 34, 42, 58, 59, 61, 62], "register_bas": [6, 8, 12, 34], "register_venu": 6, "register_warning_ev": [6, 8, 12, 34], "recent": [6, 7, 8, 12, 34], "inclus": [6, 8, 12, 34], "infer": [6, 8, 12, 23, 32, 34, 35, 64], "less": [6, 8, 9, 12, 23, 25, 34, 61], "request_data": [6, 8, 12, 34], "subscribe_data": [6, 8, 12, 34, 37, 64], "suppli": [6, 8, 12, 34, 63, 64, 65], "sent": [6, 8, 11, 12, 19, 25, 28, 34, 38, 43], "correspond": [6, 7, 8, 12, 14, 19, 20, 34, 52, 61, 63, 64, 65], "interval_m": [6, 8, 12, 34], "dataengin": [6, 8, 9, 11, 12, 16, 18, 33, 34, 37, 45], "maintain": [6, 8, 12, 34, 42, 54, 55, 58, 62], "becaus": [6, 8, 12, 34, 43, 54, 64], "affect": [6, 8, 12, 34], "to_importable_config": [6, 8, 12, 34], "importableactorconfig": [6, 8, 9, 12], "unsubscribe_data": [6, 8, 12, 34], "simulationmoduleconfig": 6, "abstract": [6, 7, 14, 20, 29, 30, 31, 32, 37, 42, 47, 55], "backtestnod": [6, 44, 58, 59], "node": [6, 9, 16, 20, 42, 44, 46, 58, 59, 63, 64, 65], "orchestr": [6, 11, 12, 58], "get_engin": [6, 58], "synchron": [6, 42, 58], "elapsed_tim": 6, "total_ev": 6, "total_ord": 6, "total_posit": 6, "stats_pnl": 6, "stats_return": 6, "complet": [6, 11, 12, 16, 28, 30, 31, 37, 46, 48, 51, 54, 58, 64], "ensure_plot": 6, "func": 6, "decor": 6, "plot": [6, 14], "librari": [6, 8, 41, 42, 52, 54, 57, 62], "instal": [6, 42, 51, 56, 58, 62, 65], "better": [6, 25, 47, 59, 61], "how": [6, 7, 9, 34, 36, 42, 43, 47, 48, 52, 54, 58, 59], "infrastructur": [7, 42, 44, 46], "central": [7, 11, 12, 14, 20, 43, 45, 49, 59, 61], "cachedatabas": [7, 9, 15], "databas": [7, 9, 11, 12, 15, 16, 38, 57, 59, 61], "cacheconfig": [7, 9], "bypass": [7, 8, 9, 16, 31, 46], "account_for_venu": 7, "actor_id": [7, 34], "agnost": [7, 21, 62], "what": [7, 12, 28, 34, 37, 49, 50, 54, 64], "actual": [7, 42, 43, 48, 61, 62, 65], "offer": [7, 25, 45, 47, 55, 62, 63, 65], "flexibl": [7, 37, 43, 44, 48, 58, 62, 64], "add_account": [7, 15], "add_bar": 7, "add_ord": [7, 12, 15], "replac": [7, 9, 12, 29, 34], "emul": [7, 8, 12, 19, 25, 33, 34, 41, 43], "add_order_book": 7, "add_order_list": 7, "orderlist": [7, 8, 12, 25, 34], "order_list": [7, 12, 34], "add_position_id": 7, "add_quote_tick": 7, "add_submit_order_command": [7, 15], "add_submit_order_list_command": [7, 15], "add_tick": 7, "add_trade_tick": 7, "bar_capac": [7, 9], "capac": [7, 8, 14], "bar_count": 7, "book_update_count": 7, "build_index": 7, "re": [7, 10, 25, 28, 47, 48, 51, 52, 55, 62, 64], "build": [7, 9, 11, 16, 29, 41, 42, 47, 48, 49, 52, 57, 58, 63, 64, 65], "cache_account": 7, "cache_command": 7, "cache_curr": 7, "cache_gener": 7, "cache_instru": 7, "cache_order_list": 7, "cache_ord": 7, "cache_posit": 7, "cache_synthet": 7, "check_integr": [7, 12, 16, 24], "check_residu": [7, 12, 16, 34], "residu": [7, 9, 12, 16, 34], "consid": [7, 8, 9, 12, 16, 25, 28, 38, 42, 44, 54, 60, 64], "clear_index": 7, "client_order_ids_clos": 7, "client_order_ids_emul": 7, "client_order_ids_inflight": 7, "flight": [7, 9, 16, 25], "client_order_ids_open": 7, "delete_actor": [7, 15], "delete_strategi": [7, 15], "exec_algorithm_id": [7, 8, 9, 12, 19, 25, 34, 43], "execalgorithmid": [7, 8, 12, 19, 20, 25, 34, 43], "flush_db": [7, 12, 16], "flush": [7, 9, 12, 15, 16, 29, 58], "perman": [7, 12, 16], "remov": [7, 8, 12, 16, 47, 55], "get_xrat": 7, "mid": [7, 14, 18, 24, 44, 47, 58], "has_bar": 7, "has_order_book": 7, "has_quote_tick": 7, "has_tick": 7, "has_trade_tick": 7, "is_order_clos": 7, "is_order_emul": [7, 38], "is_order_inflight": 7, "is_order_open": 7, "is_position_clos": 7, "is_position_open": 7, "load_account": [7, 15], "load_actor": [7, 15], "load_instru": [7, 15], "load_ord": [7, 15], "load_posit": [7, 15], "load_strategi": [7, 15], "load_submit_order_command": [7, 15], "load_submit_order_list_command": [7, 15], "orderlistid": [7, 8, 12, 15, 19, 20, 25], "order_list_id": [7, 12, 15, 19, 25, 36], "load_synthet": [7, 15], "order_exist": [7, 12], "order_list_exist": 7, "No": [7, 34, 38, 64], "particular": [7, 8, 9, 16, 23, 28, 35, 43, 45, 55], "no_order_sid": [7, 19, 25, 34, 43], "orders_clos": 7, "orders_closed_count": 7, "orders_emul": [7, 38], "orders_emulated_count": [7, 38], "orders_for_exec_algorithm": [7, 43], "orders_for_exec_spawn": [7, 43], "spawn": [7, 12, 19, 25], "primari": [7, 11, 12, 19, 25, 43, 66], "orders_for_posit": 7, "orders_inflight": 7, "orders_inflight_count": 7, "orders_open": 7, "orders_open_count": 7, "orders_total_count": 7, "position_closed_id": 7, "position_exist": 7, "position_for_ord": 7, "position_open_id": 7, "position_snapshot": 7, "no_position_sid": [7, 34], "positions_clos": 7, "positions_closed_count": 7, "positions_open": 7, "positions_open_count": 7, "positions_total_count": 7, "quote_tick": [7, 59, 61], "quote_tick_count": 7, "snapshot_posit": 7, "append": [7, 8, 46, 64, 66], "uuid": 7, "v4": 7, "strategy_id_for_ord": 7, "strategy_id_for_posit": 7, "synthetic_id": [7, 41], "tick_capac": [7, 9], "ticker_count": 7, "trade_tick": 7, "trade_tick_count": 7, "update_account": [7, 15, 30], "update_actor": [7, 15], "update_ord": [7, 15, 30], "update_posit": [7, 15, 30], "update_strategi": [7, 15], "load_curr": [7, 15], "facad": [7, 8, 30], "assembl": [8, 42], "framework": [8, 10, 13, 34, 44, 52, 55], "domain": [8, 10, 18, 19, 21, 23, 34, 42], "concept": [8, 42, 52, 60, 64], "introduc": [8, 44, 52, 60, 62], "abov": [8, 14, 25, 28, 37, 38, 41, 42, 44, 45, 46, 48, 55, 58], "layer": [8, 10, 11, 12, 42, 44], "test": [8, 34, 42, 44, 45, 49, 53, 54, 57, 58, 59, 60, 61, 66], "control": [8, 38], "queue": [8, 9, 16], "own": [8, 12, 14, 32, 34, 52, 54, 66], "entir": [8, 10, 11, 12, 24, 34, 38, 40, 45, 62], "stand": [8, 34, 47], "alon": [8, 34], "wai": [8, 15, 21, 28, 34, 37, 38, 42, 44, 45, 46, 47, 53, 58, 62, 64, 66], "usag": [8, 34], "thei": [8, 29, 34, 36, 38, 39, 41, 47, 55, 64], "platform": [8, 11, 12, 14, 31, 34, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 54, 57, 60, 62, 64], "attempt": [8, 34, 36, 42, 49, 66], "activ": [8, 9, 11, 12, 16, 28, 31, 38, 43, 47, 50, 64], "cancel_tim": 8, "label": [8, 10, 37], "local_now": 8, "tzinfo": 8, "tz": [8, 10, 34, 59, 61], "timezon": [8, 10, 34, 53], "target": 8, "awar": [8, 10, 34, 36, 52], "next_time_n": 8, "register_default_handl": 8, "handler": [8, 11, 28, 29, 33, 34, 35, 37, 64], "timeev": 8, "set_time_alert": 8, "alert_tim": 8, "alert": [8, 43], "past": 8, "fail": 8, "condit": [8, 9, 23, 25, 34, 35, 42, 43, 47, 54, 55, 62], "set_time_alert_n": 8, "alert_time_n": 8, "set_tim": 8, "timedelta": [8, 9, 11, 16, 18, 31], "start_tim": [8, 9, 59, 64], "stop_tim": 8, "until": [8, 16, 25, 38, 41, 47], "repeat": 8, "indefinit": 8, "now": [8, 24, 34, 37, 38, 41, 44, 46, 58, 61, 62], "set_timer_n": 8, "interval_n": [8, 11], "start_time_n": 8, "stop_time_n": 8, "timer_count": 8, "timer_nam": 8, "wikipedia": [8, 10, 20], "wiki": [8, 10, 20], "unix_tim": 8, "timestamp_m": 8, "timestamp_n": [8, 12, 35, 41], "n": [8, 10, 14, 22, 27, 29], "utc_now": 8, "monoton": [8, 37], "unit": [8, 22, 23, 31, 54, 55], "advance_tim": 8, "to_time_n": 8, "advanc": [8, 25, 28, 47, 62], "timeeventhandl": 8, "chronolog": 8, "component_nam": 8, "happen": [8, 36], "constructor": [8, 38, 43, 45, 48], "thu": [8, 18, 62], "pre_initi": 8, "taken": [8, 9, 49, 54, 64], "__name__": [8, 9], "componentfsmfactori": 8, "finit": 8, "get_state_transition_t": 8, "transit": [8, 10, 21, 54], "tabl": [8, 10, 32, 38, 60], "c": [8, 10, 28, 38, 42, 49, 50, 52, 54, 57, 62], "orderfactori": [8, 34, 36, 38, 43, 47], "initial_order_id_count": 8, "initial_order_list_id_count": 8, "bracket": 8, "entry_trigger_pric": 8, "entry_pric": 8, "sl_trigger_pric": 8, "tp_trigger_pric": 8, "tp_price": 8, "entry_order_typ": 8, "tp_order_typ": 8, "timeinforc": [8, 12, 19, 25, 43, 47], "time_in_forc": [8, 12, 19, 25, 43, 47], "expire_tim": [8, 12, 25, 47], "entry_post_onli": 8, "tp_post_onli": 8, "quote_quant": [8, 19, 25], "triggertyp": [8, 12, 19, 25, 38, 41, 43, 47], "emulation_trigg": [8, 12, 19, 25, 38, 41, 43], "no_trigg": [8, 12, 25], "trigger_instrument_id": [8, 19, 25, 41], "contingencytyp": [8, 12, 19, 25, 36], "contingency_typ": [8, 12, 19, 25], "ouo": 8, "entry_exec_algorithm_id": 8, "sl_exec_algorithm_id": 8, "tp_exec_algorithm_id": 8, "entry_exec_algorithm_param": 8, "tp_exec_algorithm_param": 8, "sl_exec_algorithm_param": 8, "take": [8, 9, 13, 29, 36, 41, 43, 45, 47, 49, 58, 59, 60, 61], "alwai": [8, 9, 25, 41, 42, 45, 46, 49], "stop_market": [8, 36, 38, 44, 47, 64], "child": [8, 12, 25, 36, 43, 47], "limit_if_touch": [8, 38, 44, 47, 64], "market_if_touch": [8, 38, 44, 47, 64], "well": [8, 10, 25, 28, 41, 42, 43, 44, 45, 50, 58, 61], "tp": 8, "sl": 8, "conting": [8, 12, 19, 25, 43, 62], "create_list": 8, "generate_client_order_id": 8, "generate_order_list_id": 8, "post_onli": [8, 12, 19, 25, 47], "reduce_onli": [8, 12, 19, 25, 47], "display_qti": [8, 12, 25, 47], "exec_algorithm_param": [8, 19, 25, 43], "limitord": [8, 12, 25, 43, 47], "ioc": [8, 12, 19, 25, 47, 62], "fok": [8, 12, 19, 25, 43, 47, 62], "at_the_open": [8, 12, 19, 25, 47, 62], "at_the_clos": [8, 12, 19, 25, 47, 62], "carri": [8, 12, 19, 25, 40, 43], "reduc": [8, 9, 12, 14, 16, 19, 25, 31, 36, 43, 54, 55, 59, 62], "instruct": [8, 12, 19, 25, 34, 36, 58, 62, 66], "displai": [8, 12, 25, 40], "iceberg": [8, 12, 25, 47, 62], "arbitrari": [8, 12, 19, 25, 37, 40, 58], "delimit": [8, 12, 19, 23, 25], "epoch": [8, 12, 25], "greater": [8, 12, 17, 22, 23, 24, 25, 29, 52, 54], "trigger_typ": [8, 12, 25, 47], "limitiftouchedord": [8, 25], "lit": [8, 25], "marketord": [8, 12, 25, 34, 43, 47], "often": [8, 12, 19, 42, 47, 48, 55], "marketiftouchedord": [8, 25, 47], "mit": [8, 25], "market_to_limit": [8, 12, 38, 43, 44, 47], "markettolimitord": [8, 12, 25, 47], "set_client_order_id_count": 8, "set_order_list_id_count": 8, "stop_limit": [8, 38, 44, 47, 64], "stoplimitord": [8, 25, 47], "stopmarketord": [8, 25, 47], "trailing_stop_limit": [8, 38, 44, 47], "limit_offset": [8, 12, 25, 47], "trailing_offset": [8, 12, 25, 47, 64], "trailingoffsettyp": [8, 12, 25, 47], "trailing_offset_typ": [8, 12, 25, 47], "trailingstoplimitord": [8, 25, 47], "trail": [8, 12, 25, 49], "offset": [8, 12, 25], "typic": [8, 9, 14, 25, 35, 36, 45, 47, 58, 61], "no_trailing_offset": [8, 12, 25], "trailing_stop_market": [8, 38, 44, 47, 64], "trailingstopmarketord": [8, 25, 47], "clientorderidgener": 8, "initial_count": 8, "identifiergener": 8, "set_count": 8, "counter": 8, "orderlistidgener": 8, "positionidgener": 8, "flip": 8, "f": [8, 29, 35, 41, 50, 58, 59, 61], "get_count": 8, "loglevel": [8, 9, 46, 50], "level_stdout": 8, "level_fil": 8, "file_log": 8, "file_nam": 8, "file_format": 8, "component_level": 8, "stdout": [8, 9, 24, 46, 58], "file": [8, 9, 29, 36, 51, 52, 54, 57, 58, 59], "suffix": [8, 9, 46], "plain": [8, 9, 46, 61], "text": [8, 9, 29, 46, 59, 61], "unless": [8, 9, 42, 52, 55, 66], "file_auto": 8, "g": [8, 9, 12, 25, 26, 43, 45, 46, 49, 58, 64], "change_clock": 8, "is_bypass": [8, 16, 31], "critic": [8, 49, 54, 55, 62], "logcolor": 8, "color": 8, "red": 8, "annot": 8, "content": [8, 13, 18, 60], "record": 8, "normal": [8, 28, 38, 50, 64, 66], "ex": [8, 57], "stack": [8, 11, 12, 42], "trace": [8, 50], "get_logg": [8, 16], "encapsul": 8, "yellow": 8, "log_memori": 8, "nautilus_head": 8, "maxsiz": 8, "strip": 8, "size": [8, 9, 11, 12, 14, 16, 18, 22, 24, 26, 31, 43, 44, 45, 47, 59, 61], "infinit": 8, "await": [8, 9, 35, 45], "put": 8, "block": [8, 9, 16, 29, 46, 47, 48, 52, 54, 55, 61], "item": [8, 13, 18], "unlik": [8, 25], "reliabl": [8, 42, 62], "know": [8, 38, 43, 58, 59], "qsize": [8, 9], "your": [8, 25, 37, 40, 42, 43, 48, 49, 52, 56, 57, 58, 61, 63, 64, 65, 66], "thread": [8, 16, 28, 33, 42, 46, 62], "won": [8, 29, 64], "t": [8, 9, 28, 29, 42, 47, 49, 50, 59, 64], "interrupt": 8, "safe": [8, 28, 42, 49, 50, 54, 62], "never": [8, 25, 47], "avail": [8, 9, 12, 13, 27, 29, 34, 35, 41, 44, 45, 46, 47, 50, 57, 58, 61, 63, 64, 65], "get_nowait": 8, "queueempti": 8, "peek_back": 8, "pop": 8, "peek_front": 8, "front": 8, "peek_index": 8, "indexerror": 8, "onto": [8, 54, 58], "slot": 8, "put_nowait": 8, "queueful": 8, "to_list": 8, "copi": [8, 35, 37, 58], "throttler": 8, "output_send": 8, "output_drop": 8, "throttl": [8, 58], "exce": [8, 58], "unbound": 8, "bound": 8, "upstream": 8, "is_limit": 8, "recv_count": 8, "msg": [8, 28], "sent_count": [8, 28], "livetim": 8, "deleg": [8, 10, 11, 32], "is_expir": 8, "iterate_next_tim": 8, "hash": [8, 18], "pop_ev": 8, "event_id": [8, 10, 19, 22], "continu": [8, 38, 64], "looptim": 8, "threadtim": 8, "msgspec": 9, "struct": 9, "positiveint": 9, "dequeu": 9, "cachedatabaseconfig": [9, 15], "localhost": [9, 58], "ssl": [9, 57], "timestamps_as_iso8601": [9, 32], "redi": [9, 15, 57, 62], "iso": [9, 10, 17, 32, 46], "8601": [9, 10, 32, 46], "load_all_instru": 9, "frozendict": 9, "parser": [9, 10, 29, 59], "dataengineconfig": [9, 11], "time_bars_build_with_no_upd": 9, "time_bars_timestamp_on_clos": 9, "validate_data_sequ": 9, "emit": [9, 11], "extra": [9, 11, 12, 16, 31, 64, 65], "riskengineconfig": [9, 31], "max_order_submit_r": [9, 16, 31], "100": [9, 10, 27, 47, 55, 64], "00": [9, 23, 43, 47], "max_order_modify_r": [9, 16, 31], "max_notional_per_ord": [9, 16, 31], "riskengin": [9, 12, 16, 31, 33, 34, 38, 43, 45], "pre": [9, 10, 16, 29, 31, 38, 49, 51, 58], "still": [9, 19, 28, 43, 49, 50, 64], "duplic": [9, 12, 26, 34, 48], "notion": [9, 16, 22, 26, 31, 45], "execengineconfig": [9, 12], "load_cach": [9, 12, 16], "allow_cash_posit": [9, 12, 16], "unleverag": [9, 12, 16], "orderemulatorconfig": [9, 12], "orderemul": [9, 12, 33, 34, 38, 43], "streamingconfig": 9, "catalog_path": [9, 58, 59, 61], "fs_protocol": [9, 29], "fs_storage_opt": [9, 29], "flush_interval_m": [9, 29], "replace_exist": 9, "include_typ": [9, 29], "catalog": [9, 11, 16, 29, 33, 42, 58, 61], "feather": [9, 29, 44], "fsspec": [9, 29, 59, 61], "filesystem": [9, 29, 59, 61], "storag": [9, 29, 42, 59, 61], "chunk": [9, 29, 32, 61], "datacatalogconfig": 9, "use_rust": [9, 11, 16], "rust": [9, 24, 41, 42, 46, 57], "schema": [9, 32], "version": [9, 10, 13, 43, 50, 57], "actor_path": 9, "config_path": [9, 58, 59], "actorfactori": 9, "step": [9, 11, 18, 27, 44, 49, 50, 51, 52, 54, 62], "strategyconfig": [9, 34, 48, 58], "order_id_tag": [9, 34, 48], "external_order_claim": [9, 34], "becom": [9, 22, 25, 36, 43, 47, 52, 62, 64], "amongst": 9, "see": [9, 38, 41, 42, 43, 45, 46, 48, 50, 57, 58, 59, 61, 64, 65], "extern": [9, 12, 16, 18, 20, 34, 59], "claim": [9, 12, 16, 34], "importablestrategyconfig": [9, 34, 58, 59], "strategy_path": [9, 58, 59], "strategyfactori": 9, "execalgorithmconfig": [9, 12], "importableexecalgorithmconfig": [9, 12], "exec_algorithm_path": 9, "execalgorithmfactori": 9, "loggingconfig": [9, 46, 50, 58], "log_level": [9, 46, 50, 58], "log_level_fil": [9, 46], "log_directori": [9, 46], "log_file_nam": [9, 46], "log_file_format": [9, 46], "log_component_level": [9, 46], "bypass_log": 9, "stderr": [9, 46], "automat": [9, 13, 35, 46, 47, 51, 58], "rotat": [9, 46], "nautiluskernelconfig": [9, 33], "cache_databas": 9, "data_engin": [9, 16, 33, 34], "risk_engin": [9, 33, 34], "exec_engin": [9, 16, 33, 34], "load_stat": [9, 33], "save_st": [9, 33], "loop_debug": 9, "timeout_connect": 9, "timeout_reconcili": 9, "timeout_portfolio": 9, "timeout_disconnect": 9, "timeout_post_stop": 9, "sandbox": [9, 33, 35, 38, 42, 44], "context": [9, 29, 33, 35, 38, 44, 47, 49, 62], "hyphen": [9, 20, 48], "positivefloat": 9, "reconcil": [9, 12, 16, 66], "final": [9, 43, 51, 55, 61, 63, 64, 65], "shutdown": 9, "importablefactoryconfig": 9, "importableconfig": [9, 16], "backtestvenueconfig": [9, 58, 59], "backtestdataconfig": [9, 29, 58, 59], "data_cl": [9, 58, 59], "catalog_fs_protocol": 9, "catalog_fs_storage_opt": 9, "end_tim": [9, 58, 59, 64], "filter_expr": 9, "metadata": [9, 18, 35, 37, 64], "bar_spec": [9, 18], "batch_siz": 9, "10000": [9, 47], "001": [9, 20, 43, 46, 48], "run_analysi": 9, "batch_size_byt": 9, "input": [9, 10, 14, 16, 22, 29, 31, 40, 41, 46, 58], "parse_filters_expr": 9, "pyarrow": 9, "dataset": [9, 29, 45], "express": [9, 10, 22, 26, 41, 47, 62], "chf": 9, "hello": 9, "livedataengineconfig": [9, 16], "livedataengin": [9, 16], "10_000": 9, "liveriskengineconfig": [9, 16], "liveriskengin": [9, 16], "liveexecengineconfig": [9, 16], "reconciliation_lookback_min": 9, "filter_unclaimed_external_ord": 9, "filter_position_report": 9, "inflight_check_interval_m": 9, "2000": 9, "inflight_check_threshold_m": 9, "5000": [9, 43, 47], "liveexecengin": 9, "purpos": [9, 29, 35, 41, 48, 59, 61, 62], "lost": [9, 38], "some": [9, 37, 42, 43, 45, 46, 49, 50, 52, 54, 58, 64, 66], "point": [9, 10, 12, 23, 24, 28, 38, 42, 43, 47, 49, 64], "leav": [9, 25, 47], "intermedi": 9, "recov": [9, 41], "via": [9, 11, 12, 14, 34, 38, 43, 44, 46, 58, 62, 65], "nonnegativeint": 9, "minut": [9, 18, 44, 59, 61], "unclaim": 9, "caus": [9, 55, 64], "conflict": [9, 43, 66], "2_000": 9, "exceed": [9, 19, 45], "threshold": [9, 11, 18, 58], "5_000": 9, "beyond": [9, 48, 50, 64], "rule": [9, 18, 34], "thumb": 9, "shouldn": [9, 28], "coloc": 9, "avoid": [9, 43, 54, 55], "potenti": [9, 28, 29, 41, 44, 52], "race": [9, 54], "livedatacli": [9, 16], "soon": 9, "tradingnodeconfig": [9, 16, 46, 50, 63, 64, 65], "data_cli": [9, 63, 64, 65], "000": [9, 43, 47], "constant": [10, 14, 42], "throughout": [10, 18, 38, 42, 43, 44, 49, 52, 55, 60], "main": [10, 35, 43, 44, 46, 47, 48, 52, 57, 58], "focu": 10, "effici": [10, 14, 16, 36, 42, 49, 62], "usabl": 10, "form": [10, 14], "design": [10, 14, 16, 21, 35, 37, 41, 44, 46, 52, 54, 55, 62, 66], "philosophi": [10, 52, 62], "massag": 10, "finitestatemachin": 10, "correct": [10, 42, 43, 44, 45, 47, 54, 60, 61, 62], "entiti": [10, 20, 44], "as_utc_index": 10, "datetimeindex": 10, "as_utc_timestamp": 10, "dt": [10, 59, 61], "dt_to_unix_nano": [10, 59, 61], "accur": [10, 15, 42], "microsecond": 10, "\u03bc": 10, "format_iso8601": 10, "is_datetime_utc": 10, "is_tz_awar": 10, "time_object": 10, "is_tz_naiv": 10, "naiv": 10, "maybe_dt_to_unix_nano": 10, "int64": [10, 15], "maybe_unix_nanos_to_dt": 10, "nano": 10, "micros_to_nano": 10, "micro": 10, "round": [10, 18, 22, 27], "millis_to_nano": 10, "milli": 10, "nanos_to_micro": 10, "nanos_to_milli": 10, "nanos_to_sec": 10, "secs_to_milli": 10, "sec": 10, "secs_to_nano": 10, "unix_nanos_to_dt": 10, "determinist": [10, 62], "state_machin": 10, "state_transition_t": 10, "initial_st": 10, "trigger_pars": 10, "state_pars": 10, "consist": [10, 11, 12, 44, 49, 62, 64], "need": [10, 11, 12, 13, 14, 25, 28, 29, 37, 38, 43, 46, 47, 48, 49, 50, 51, 54, 57, 58, 59, 60, 61, 62, 64, 66], "state_str": 10, "invalidstatetrigg": [10, 25], "add_not": 10, "with_traceback": 10, "tb": 10, "__traceback__": 10, "command_id": [10, 11, 12], "document": [10, 12, 13, 36, 39, 41, 42, 44, 47, 48, 54, 60, 64], "document_id": 10, "response_id": [10, 11], "basis_points_as_percentag": 10, "basis_point": [10, 47, 64], "basi": [10, 36, 47, 64], "fast_mad": 10, "ndarrai": [10, 14], "deviat": [10, 14], "numpi": [10, 49], "fast_mad_with_mean": 10, "fast_mean": 10, "evalu": [10, 41, 49], "10x": 10, "faster": 10, "np": [10, 14], "200": [10, 18, 47], "fast_mean_iter": 10, "next_valu": 10, "current_valu": 10, "expected_length": 10, "drop_left": 10, "left": [10, 39, 42, 55, 60], "fast_std": 10, "std": 10, "fast_std_with_mean": 10, "25x": 10, "pseudo": 10, "univers": [10, 28, 42, 62], "4": 10, "128": 10, "rfc": 10, "4122": 10, "panic": [10, 24], "runtim": [10, 42, 45, 49, 52, 54, 62], "universally_unique_identifi": 10, "tool": [11, 14, 31, 34, 41, 42, 51, 52, 57, 62], "architectur": [11, 12, 55], "somewhat": [11, 12], "mirror": [11, 12], "beneath": [11, 12], "altern": [11, 12, 43, 44, 51, 55, 64], "abl": [11, 12, 19, 28, 37, 48, 54, 58, 62, 66], "written": [11, 12, 46, 62], "due": [11, 12, 19, 37, 62], "reusabl": [11, 12], "help": [11, 12, 25, 30, 31, 34, 43, 44, 50, 52, 60, 62], "baraggreg": [11, 18, 44], "barbuild": 11, "builder": [11, 16, 64], "build_now": 11, "price_precis": [11, 12, 22, 26, 27, 41], "uint8": [11, 17, 26], "set_parti": 11, "partial_bar": 11, "partial": [11, 25, 36, 47, 59], "size_precis": [11, 22, 26], "ts_last": [11, 12, 24, 25, 26], "tickbaraggreg": 11, "timebaraggreg": 11, "build_with_no_upd": 11, "timestamp_on_clos": 11, "timer": [11, 34, 43, 48], "get_start_tim": 11, "next_close_n": 11, "valuebaraggreg": 11, "get_cumulative_valu": 11, "cumul": [11, 14], "volumebaraggreg": 11, "emploi": [11, 12, 42], "simpl": [11, 12, 14, 41, 43, 58, 59, 61, 62], "fan": [11, 12], "pattern": [11, 12, 28, 34, 42], "datacommand": [11, 16], "datarespons": [11, 16], "ingest": [11, 12, 44, 48, 64], "check_connect": [11, 12, 16], "check_disconnect": [11, 12, 16], "command_count": [11, 12, 16, 31], "data_count": [11, 16], "default_cli": [11, 12, 16], "deregister_cli": [11, 12, 16], "register_catalog": [11, 16], "parquetdatacatalog": [11, 16, 29, 33, 44, 59], "register_default_cli": [11, 12, 16], "overwritten": [11, 12, 16, 17], "register_venue_rout": [11, 12, 16], "registered_cli": [11, 12, 16], "datarequest": [11, 16, 35], "request_count": [11, 16], "response_count": [11, 16], "subscribed_synthetic_quot": [11, 16], "subscribed_synthetic_trad": [11, 16], "depend": [12, 22, 26, 34, 43, 45, 51, 57, 59, 62, 64], "least": [12, 22, 25, 34, 64], "k": [12, 14, 22, 34, 44, 45], "modif": [12, 34, 38, 47, 51], "fix": [12, 17, 18, 19, 20, 23, 27, 29, 34, 36, 47, 58, 62], "pending_cancel": [12, 25, 34], "onix": [12, 19, 20, 23, 34, 36], "biz": [12, 19, 20, 23, 34, 36], "5": [12, 14, 18, 19, 20, 23, 34, 36, 41, 43, 47], "sp2": [12, 19, 23, 34, 36], "msgtype_g_71": [12, 34], "html": [12, 19, 20, 23, 34, 36, 50], "modify_order_in_plac": 12, "place": [12, 23, 25, 27, 36, 47, 50, 55, 59], "on_ord": [12, 43], "on_order_ev": 12, "orderev": [12, 16, 19, 25, 30], "on_order_list": 12, "spawn_limit": [12, 43], "reduce_primari": 12, "spawn_market": [12, 43], "spawn_market_to_limit": [12, 43], "deni": [12, 19, 25, 31, 34, 38], "parent_order_id": [12, 19, 25], "parent": [12, 19, 22, 25, 36, 43, 47], "yet": [12, 34], "intentio": 12, "constrain": 12, "get_issu": [12, 20], "unspecifi": [12, 16, 34], "create_matching_cor": 12, "price_incr": [12, 22], "matchingcor": [12, 38], "increment": [12, 18, 22, 24, 27], "get_matching_cor": 12, "get_submit_order_command": 12, "get_submit_order_list_command": 12, "subscribed_quot": 12, "feed": [12, 41, 64], "subscribed_trad": 12, "distribut": [12, 48], "get_external_order_claim": [12, 16], "position_id_count": [12, 16], "reconcile_mass_statu": [12, 16], "mass": [12, 16], "reconcile_report": [12, 16], "executionreport": [12, 16], "reconcile_st": [12, 16], "timeout_sec": [12, 16], "register_external_order_claim": [12, 16], "registr": [12, 16, 28], "register_oms_typ": [12, 16], "report_count": [12, 16], "trigger_stop_ord": 12, "fill_market_ord": 12, "fill_limit_ord": 12, "delete_ord": 12, "get_ord": 12, "get_orders_ask": 12, "get_orders_bid": 12, "is_limit_match": 12, "is_stop_trigg": 12, "is_touch_trigg": 12, "match_limit_if_touched_ord": 12, "match_limit_ord": 12, "match_market_if_touched_ord": 12, "match_ord": 12, "match_stop_limit_ord": 12, "match_stop_market_ord": 12, "msgtype_f_70": 12, "msgtype_d_68": 12, "neworderlist": 12, "msgtype_e_69": 12, "has_emulated_ord": 12, "report_id": 12, "order_statu": 12, "orderstatu": [12, 25], "filled_qti": [12, 25], "ts_accept": 12, "no_conting": [12, 25], "avg_px": [12, 25], "cancel_reason": 12, "ts_trigger": [12, 25], "position_sid": [12, 25, 34], "flat": [12, 19, 25, 26, 30, 47], "those": [12, 20, 35, 62], "order_report": 12, "trade_report": 12, "position_report": 12, "add_order_report": 12, "add_trade_report": 12, "add_position_report": 12, "welcom": [13, 39, 44, 49, 52, 56, 60, 62], "cython": [13, 38, 39, 42, 49, 51, 52, 54], "nautilustrad": [13, 35, 39, 42, 43, 44, 47, 48, 50, 52, 56, 58, 60, 61, 63, 64, 65, 66], "detail": [13, 38, 39, 41, 46, 47, 48, 58, 60, 61], "technic": [13, 14], "sphinx": 13, "pleas": 13, "head": [13, 40], "master": 13, "branch": 13, "stabl": [13, 46, 57], "develop": [13, 14, 42, 51, 55, 57, 58, 62], "featur": [13, 14, 19, 28, 39, 41, 44, 50, 52, 54, 58, 60, 64], "select": [13, 14, 53, 59, 61], "down": [13, 16, 27, 38], "menu": [13, 42], "sidebar": 13, "explor": [13, 60], "click": [13, 55], "view": [13, 42, 49], "explan": 13, "question": [13, 28], "further": [13, 44, 46, 47, 48], "assist": [13, 42, 52], "commun": [13, 44, 62], "discoveri": 14, "idea": [14, 62], "inspir": [14, 62], "proprietari": 14, "adaptivemovingaverag": 14, "period_": 14, "period_alpha_fast": 14, "period_alpha_slow": 14, "movingaverag": 14, "ama": 14, "across": [14, 30, 43, 44, 62], "roll": 14, "window": [14, 53, 57, 62], "perri": 14, "kaufman": 14, "nois": [14, 64], "swing": 14, "rel": 14, "small": [14, 54, 66], "increas": [14, 25, 37, 62], "lag": 14, "efficiencyratio": 14, "fast": [14, 62], "smooth": [14, 54], "slow": 14, "alpha_fast": 14, "extract": [14, 18, 29, 52], "alpha_diff": 14, "alpha": [14, 58], "alpha_slow": 14, "has_input": 14, "warm": [14, 58], "update_raw": 14, "exponentialmovingaverag": 14, "exponenti": 14, "donchianchannel": 14, "donchian": 14, "channel": [14, 46], "three": [14, 34, 44], "line": [14, 29, 49, 50, 55, 58, 59, 61], "compris": [14, 35], "upper": 14, "band": 14, "around": [14, 21, 30, 50], "median": 14, "highest": [14, 28, 39, 42, 60, 62], "area": [14, 49, 55], "middl": 14, "hullmovingaverag": 14, "hull": 14, "hma": 14, "alan": 14, "extrem": [14, 42], "movingaveragefactori": 14, "construct": [14, 36, 41, 42, 54, 64, 66], "ma_typ": 14, "movingaveragetyp": 14, "simplemovingaverag": 14, "weightedmovingaverag": 14, "float64": 14, "averagetruerang": 14, "use_previ": 14, "value_floor": 14, "inner": 14, "boolean": [14, 48, 49], "update_mid": 14, "floor": 14, "bollingerband": 14, "bolling": 14, "trend": 14, "awai": [14, 22, 25, 27, 47], "sma": 14, "prefer": [14, 43, 48, 51], "measur": [14, 48], "speed": [14, 25, 62], "thought": 14, "proxi": 14, "fuzzycandl": 14, "candledirect": 14, "candles": 14, "candlebodys": 14, "body_s": 14, "candlewicks": 14, "upper_wick_s": 14, "lower_wick_s": 14, "fuzzi": 14, "candl": 14, "bodi": [14, 49], "wick": 14, "overal": [14, 52], "fuzzycandlestick": 14, "threshold1": 14, "threshold2": 14, "threshold3": 14, "threshold4": 14, "fuzzifi": 14, "dimension": 14, "membership": 14, "x": [14, 37, 40, 61], "vector": [14, 46, 62], "keltnerchannel": 14, "k_multipli": 14, "ma_type_atr": 14, "atr_floor": 14, "keltner": 14, "envelop": 14, "below": [14, 25, 29, 35, 38, 42, 43, 46, 48, 49, 57, 58, 59, 61, 64, 65], "tradition": [14, 62], "ema": 14, "plu": 14, "atr": 14, "minu": 14, "keltnerposit": 14, "extens": [14, 42, 51, 52, 55, 62], "movingaverageconvergencediverg": [14, 58], "fast_period": [14, 58], "slow_period": [14, 58], "fast_sma": 14, "onbalancevolum": 14, "momentum": [14, 48], "pressur": 14, "value_cumul": 14, "rateofchang": 14, "use_log": 14, "relativestrengthindex": 14, "strength": 14, "rsi": 14, "gain": 14, "spreadanalyz": 14, "spread": [14, 24, 41, 43], "max": [14, 16, 31, 40, 53], "dequ": 14, "stochast": 14, "period_k": 14, "period_d": 14, "oscil": 14, "bought": 14, "sold": 14, "forextrad": 14, "educ": 14, "explain": [14, 43, 49, 54, 58], "value_d": 14, "value_k": 14, "durat": [14, 18, 19, 26], "high_datetim": 14, "low_datetim": 14, "since_high": 14, "since_low": 14, "volatilityratio": 14, "volumeweightedaveragepric": 14, "param": [14, 19, 43, 66], "technologi": [15, 42], "box": [15, 62], "rediscachedatabas": 15, "17": 15, "digit": [15, 23], "19": 15, "One": [15, 49, 52, 61, 62], "solv": 15, "achiev": [15, 41, 42, 44, 48, 54, 63, 64, 65], "timestamps_as_str": [15, 32], "msgpackseri": [15, 32], "overarch": 16, "uvloop": [16, 44, 62], "interfac": [16, 34, 42, 54, 66], "present": [16, 41], "broker": [16, 36, 42, 47, 48, 57, 58, 66], "intermediari": 16, "possibl": [16, 25, 27, 28, 31, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 57, 64, 66], "special": [16, 50, 64], "get_cmd_queue_task": 16, "_asyncio": 16, "get_req_queue_task": 16, "get_res_queue_task": 16, "get_data_queue_task": 16, "cmd_qsize": 16, "req_qsiz": 16, "res_qsiz": 16, "data_qs": 16, "kill": [16, 47], "abruptli": 16, "_lib": 16, "tslib": 16, "liveexecutionengin": [16, 43], "get_evt_queue_task": 16, "get_inflight_check_task": 16, "evt_qsiz": 16, "max_notionals_per_ord": [16, 31], "set_max_notional_per_ord": [16, 31], "new_valu": [16, 31], "disabl": [16, 31], "invalidoper": [16, 31], "set_trading_st": [16, 31], "tradingst": [16, 31], "trading_st": [16, 31], "network": [16, 42, 44, 62], "is_built": 16, "get_event_loop": [16, 35], "add_data_client_factori": [16, 63, 64, 65], "add_exec_client_factori": [16, 63, 64, 65], "liveexecutionclientfactori": 16, "gracefulli": 16, "shut": [16, 38], "executor": [16, 33], "run_async": 16, "stop_async": 16, "tradingnodebuild": 16, "servic": 16, "build_data_cli": 16, "build_exec_cli": 16, "uint16_t": 17, "iso4217": 17, "currencytyp": 17, "currency_typ": 17, "medium": [17, 34], "9": [17, 22, 23, 57], "uint16": 17, "4217": 17, "from_internal_map": 17, "from_str": [17, 18, 20, 23, 41, 45, 47, 48, 58, 59, 61], "unknown": 17, "veri": [17, 37, 58], "like": [17, 29, 43, 48, 51, 58, 59, 61, 62], "cryptocurr": [17, 22, 45, 64], "robust": [17, 40, 49, 62], "8": [17, 29, 41], "is_crypto": 17, "is_fiat": 17, "fiat": [17, 22, 45], "overwrit": 17, "fundament": [18, 19, 23, 47, 54], "barspecif": [18, 44], "sampl": [18, 59], "check_information_aggreg": 18, "check_threshold_aggreg": 18, "check_time_aggreg": 18, "from_timedelta": 18, "is_information_aggreg": 18, "driven": [18, 42, 62], "tick_run": [18, 44], "volume_run": [18, 44], "value_run": [18, 44], "is_threshold_aggreg": 18, "tick_imbal": [18, 44], "volume_imbal": [18, 44], "value_imbal": [18, 44], "is_time_aggreg": 18, "week": [18, 44], "month": [18, 44, 53, 59, 61], "ambigu": 18, "aggregationsourc": 18, "aggregation_sourc": 18, "accordingli": 18, "is_externally_aggreg": 18, "is_internally_aggreg": 18, "order_id": 18, "exposur": [18, 30], "signed_s": 18, "packet": 18, "bid_siz": [18, 29, 59, 61], "ask_siz": [18, 29, 59, 61], "capsule_from_list": 18, "extract_pric": 18, "extract_volum": 18, "from_raw": [18, 23], "int64_t": [18, 23, 32], "raw_bid": 18, "raw_ask": 18, "bid_price_prec": 18, "ask_price_prec": 18, "raw_bid_s": 18, "raw_ask_s": 18, "bid_size_prec": 18, "ask_size_prec": 18, "scale": [18, 29], "list_from_capsul": [18, 29], "capsul": [18, 29], "aggressorsid": 18, "aggressor_sid": 18, "buyer": 18, "seller": 18, "counterparti": [18, 20], "aggressor": [18, 47], "raw_pric": 18, "price_prec": [18, 24], "raw_siz": 18, "size_prec": 18, "close_pric": 18, "instrumentclosetyp": 18, "close_typ": 18, "marketstatu": 18, "statusupd": 18, "hashabl": 18, "themselv": [18, 36, 42], "topic": [18, 28, 34, 60], "genericdata": 18, "wrapper": 18, "wrap": [18, 59], "is_report": 19, "ordstatu": 19, "39": 19, "tagnum_39": 19, "orderdeni": 19, "unsupport": [19, 66], "denied_reason": 19, "valid_str": 19, "is_bui": [19, 25], "is_sel": [19, 25], "orderiniti": [19, 25, 38, 43], "linked_order_id": [19, 25, 36], "exec_spawn_id": [19, 25, 43], "had": 19, "emulationtrigg": [19, 25], "link": [19, 25, 36, 42, 47, 61, 62], "orderpendingcancel": 19, "orderpendingupd": 19, "stoplimit": 19, "positionchang": 19, "opening_order_id": [19, 26], "signed_qti": [19, 26], "peak_qti": [19, 26], "avg_px_open": [19, 26], "avg_px_clos": [19, 26], "realized_return": [19, 26], "ts_open": [19, 26], "positionev": [19, 30], "idt": 19, "peak": [19, 26], "closing_order_id": [19, 26], "duration_n": [19, 26], "ts_close": [19, 26], "positionclos": 19, "positionopen": [19, 58], "correctli": [20, 23, 29, 32, 37, 43, 49, 58, 59, 61], "d02851908": 20, "firm": [20, 62], "get_id": 20, "is_this_trad": 20, "compar": [20, 62], "get_tag": 20, "charact": [20, 28, 49], "aud": [20, 45, 47, 59, 63], "usd": [20, 23, 45, 47, 53, 58, 59, 61, 65], "idealpro": [20, 47, 65], "btcusdt": [20, 35, 41, 45, 47, 64], "binanc": [20, 35, 41, 43, 45, 47, 48, 66], "is_synthet": 20, "synth": [20, 22, 41], "emacross": [20, 59], "collid": 20, "is_extern": 20, "did": 20, "tradabl": [20, 22, 45], "ticker_symbol": 20, "1003": 20, "tagnum_1003": 20, "abbrevi": 20, "tester": [20, 46], "rich": [21, 42, 52, 62], "seek": [21, 47, 50], "venue_nam": 22, "event_type_id": 22, "event_type_nam": 22, "competition_id": 22, "competition_nam": 22, "event_nam": 22, "event_country_cod": 22, "event_open_d": 22, "betting_typ": 22, "market_nam": 22, "market_start_tim": 22, "market_typ": 22, "selection_nam": 22, "selection_handicap": 22, "tick_scheme_nam": 22, "min_pric": [22, 27, 45], "max_pric": [22, 27, 45], "asset_class": 22, "assetclass": 22, "asset_typ": 22, "assettyp": 22, "base_from_dict": 22, "base_to_dict": 22, "calculate_base_quant": 22, "get_base_curr": 22, "get_settlement_curr": 22, "linear": 22, "quanto": 22, "settlement_curr": 22, "is_invers": [22, 26], "lot_siz": 22, "lot": [22, 45, 52, 62], "board": 22, "make_pric": [22, 43, 45], "make_qti": [22, 43, 45], "maker_fe": [22, 45], "fee": [22, 47], "max_not": [22, 45], "printabl": 22, "max_quant": [22, 45], "min_not": [22, 45], "min_quant": [22, 45], "native_symbol": 22, "next_ask_pric": [22, 27], "num_tick": 22, "nearest": [22, 27], "scheme": 22, "next_bid_pric": [22, 27], "notional_valu": [22, 26], "size_incr": 22, "taker_fe": [22, 45], "make_symbol": 22, "201070830": 22, "123456": 22, "cryptoperpetu": [22, 45], "perpetu": [22, 45, 47, 64, 66], "swap": [22, 45, 58], "cost": [22, 26], "is_quanto": 22, "cryptofutur": [22, 45], "underli": [22, 45, 52], "expiry_d": 22, "from_int_c": 22, "deliver": [22, 45, 58], "currencypair": [22, 45], "equiti": [22, 31, 45, 62, 65], "isin": [22, 65], "identif": 22, "tick_siz": 22, "futurescontract": 22, "optionscontract": 22, "strike_pric": 22, "optionkind": 22, "kind": 22, "formula": 22, "syneth": 22, "nan": [22, 40], "change_formula": [22, 41], "marginaccountbal": 23, "money_max": 23, "9_223_372_036": 23, "money_min": 23, "as_decim": 23, "as_doubl": 23, "whitespac": 23, "1000000": [23, 29], "to_str": 23, "under": [23, 40, 43, 49, 64, 66], "price_max": 23, "price_min": 23, "whole": 23, "fraction": 23, "from_int": [23, 47, 58, 59, 61], "raw_to_f64": 23, "non": [23, 58], "capabl": [23, 43, 58, 60, 62, 64], "share": [23, 42, 45, 48, 57, 64], "quantity_max": 23, "18_446_744_073": 23, "quantity_min": 23, "qty": 23, "l1": [24, 44], "l2": [24, 44], "l3": [24, 44], "granular": [24, 50, 62], "apply_delta": 24, "best_ask_s": 24, "best_bid_s": 24, "clear_ask": 24, "clear_bid": 24, "midpoint": 24, "pprint": 24, "num_level": 24, "simulate_fil": 24, "is_aggress": [24, 25], "update_quote_tick": [24, 30], "update_trade_tick": 24, "init_id": 25, "likelihood": 25, "protect": [25, 61], "far": 25, "higher": [25, 28, 44, 46, 60, 62], "On": [25, 35], "moo": 25, "moc": 25, "php": 25, "closing_sid": 25, "has_pric": 25, "has_trigger_pric": 25, "summari": [25, 26, 47, 50], "init_ev": 25, "is_cancel": 25, "is_child_ord": 25, "is_clos": [25, 26], "longer": [25, 38, 49, 55], "status": 25, "is_conting": 25, "is_emul": [25, 38], "is_inflight": 25, "pending_upd": 25, "is_open": [25, 26], "partially_fil": 25, "is_parent_ord": 25, "is_pass": 25, "passiv": 25, "is_pending_cancel": 25, "is_pending_upd": 25, "is_post_onli": 25, "is_primari": 25, "is_quote_quant": 25, "is_reduce_onli": 25, "is_spawn": 25, "last_trade_id": [25, 26], "leaves_qti": 25, "opposite_sid": 25, "opposit": [25, 26, 47], "side_str": 25, "signed_decimal_qti": [25, 26], "25": [25, 26], "transform_pi": 25, "would_reduce_onli": 25, "position_qti": 25, "expire_time_n": 25, "favor": [25, 36], "loo": 25, "loc": 25, "attain": 25, "penetr": 25, "significantli": [25, 42], "basic": [25, 48, 58], "enter": [25, 47, 49], "elimin": [25, 54, 62], "expos": [25, 58], "is_trigg": 25, "mtl": 25, "remaind": [25, 47, 59], "portion": [25, 47], "touch": 25, "similar": [25, 35, 42, 61], "init": [25, 57], "cost_curr": 26, "is_long": 26, "is_opposite_sid": 26, "is_short": 26, "In": [26, 29, 35, 36, 41, 43, 54, 58, 61, 62, 64], "side_from_order_sid": 26, "space": [27, 49], "fixedtickschem": 27, "min_tick": 27, "max_tick": 27, "tickschem": 27, "tieredtickschem": 27, "tier": [27, 47], "max_ticks_per_ti": 27, "find_tick_index": 27, "get_tick_schem": 27, "list_tick_schem": 27, "register_tick_schem": 27, "tick_schem": 27, "round_down": 27, "round_up": 27, "loos": [28, 42], "coupl": [28, 42, 49, 59, 61], "facilit": [28, 30, 41, 42, 44, 62], "consum": [28, 36, 42, 46], "pub": [28, 42], "sub": [28, 42], "req": [28, 42], "rep": [28, 42], "wildcard": [28, 34], "hierarch": 28, "asterisk": 28, "comp": 28, "anyth": 28, "comput": 28, "mp": 28, "camp": 28, "p": [28, 58], "coop": 28, "has_subscrib": 28, "is_subscrib": 28, "prioriti": [28, 42, 66], "pub_count": 28, "req_count": 28, "res_count": 28, "inappropri": 28, "sound": [28, 45], "behaviour": [28, 47, 54], "is_matching_pi": 28, "organ": [28, 30, 45], "retriev": [29, 42, 63, 65], "basedatacatalog": 29, "arg": 29, "kw": 29, "abc": 29, "queryabl": 29, "parquet": [29, 32, 33, 58, 59, 61], "root": [29, 55, 57], "threadsaf": 29, "bardatawrangl": 29, "wrangler": 29, "default_volum": 29, "ts_init_delta": 29, "column": 29, "quotetickdatawrangl": 29, "process_bar_data": 29, "bid_data": 29, "ask_data": 29, "is_raw": 29, "shuffl": 29, "tradetickdatawrangl": 29, "linepreprocessor": 29, "reader": [29, 59], "textread": [29, 59, 61], "attribut": 29, "were": [29, 61], "prepend": [29, 33], "2021": 29, "06": [29, 47, 53], "29t06": 29, "03": [29, 46, 53], "14": 29, "528000": 29, "op": 29, "mcm": 29, "pt": 29, "1624946594395": 29, "mc": 29, "179082386": 29, "rc": 29, "atb": 29, "93": 29, "addition": [29, 43], "want": [29, 54], "someth": [29, 32, 37, 64], "logginglinepreprocessor": 29, "staticmethod": 29, "def": [29, 35, 37, 40, 43, 45, 48, 58, 59, 61, 64], "pre_process": 29, "json_data": 29, "split": [29, 43, 59, 61], "yield": [29, 49, 59, 61], "post_process": 29, "instrument_provider_upd": 29, "byteread": 29, "block_pars": [29, 61], "byte_pars": 29, "hook": [29, 42, 51], "ahead": 29, "line_pars": [29, 59, 61], "line_preprocessor": 29, "newlin": 29, "b": [29, 59], "row": [29, 32, 59, 61], "clean": [29, 52, 61, 62], "char": 29, "csvreader": [29, 61], "header": [29, 57, 61], "as_datafram": [29, 61], "utf": 29, "parquetread": [29, 61], "streamingengin": 29, "data_config": [29, 59], "target_batch_size_byt": 29, "512000000": 29, "_bufferiter": 29, "merg": 29, "extract_generic_data_client_id": 29, "inject": 29, "streamingfeatherwrit": [29, 33], "writer": [29, 33, 46], "check_flush": 29, "generate_signal_class": 29, "value_typ": 29, "signaldata": 29, "fleet": [30, 34], "satisfi": [30, 37], "initialize_ord": 30, "initialize_posit": 30, "is_completely_flat": 30, "is_flat": 30, "is_net_long": 30, "is_net_short": 30, "net_exposur": 30, "net_posit": 30, "set_specific_venu": 30, "positions": 31, "monitor": 31, "halt": 31, "fixedrisks": 31, "stop_loss": 31, "commission_r": 31, "exchange_r": 31, "hard_limit": 31, "unit_batch_s": 31, "v": [31, 58], "hard": 31, "risk_bp": 31, "xrate": 31, "update_instru": 31, "sizer": 31, "besid": 32, "messagepack": [32, 44], "deseri": 32, "obj_byt": 32, "parquetseri": 32, "get_cls_tabl": 32, "get_partition_kei": 32, "get_schema": 32, "list_schema": 32, "register_parquet": 32, "pa": 32, "cls_type": 32, "subset": 32, "miss": 32, "togeth": [32, 36, 47, 53, 64], "go": [32, 58, 59, 61], "register_serializable_object": 32, "loop_sig_callback": 33, "concurr": [33, 62], "threadpoolexecutor": 33, "ts_creat": 33, "packag": [34, 44, 51, 57, 58, 62, 65], "major": [34, 42, 62], "forexsess": 34, "forexsessionfilt": 34, "session": [34, 40, 47], "local_from_utc": 34, "time_now": 34, "next_start": 34, "mondai": 34, "fridai": 34, "sydnei": 34, "0700": 34, "1600": 34, "australia": 34, "tokyo": 34, "0900": 34, "1800": 34, "asia": 34, "london": 34, "0800": 34, "europ": 34, "york": 34, "1700": 34, "america": 34, "new_york": 34, "prev_start": 34, "next_end": 34, "prev_end": 34, "newsimpact": 34, "newsev": 34, "impact": [34, 43], "econom": 34, "economicnewseventfilt": 34, "news_data": 34, "letter": 34, "unfiltered_data_start": 34, "unfiltered_data_end": 34, "next_ev": 34, "prev_ev": 34, "convent": [34, 43, 46, 49, 50], "cancel_gtd_expiri": 34, "close_all_posit": [34, 43, 58], "close_posit": [34, 43, 58], "indicators_initi": 34, "order_factori": [34, 41, 43, 47, 58], "register_indicator_for_bar": 34, "register_indicator_for_quote_tick": 34, "register_indicator_for_trade_tick": 34, "registered_ind": 34, "manage_gtd_expiri": [34, 48], "actor_st": 34, "tradingstrategi": 34, "clear_exec_algorithm": 34, "exec_algorithm_st": 34, "strategy_st": 34, "glob": [34, 59, 61], "websocketcli": 35, "suggest": 35, "standalon": 35, "discov": [35, 45], "consumpt": [35, 37], "getenv": [35, 65], "binance_futures_testnet_api_kei": [35, 64], "binance_futures_testnet_api_secret": [35, 64], "behavior": [35, 41], "perp": [35, 45, 47, 48, 64], "ethusdt": [35, 41, 43, 45, 47, 48], "anywher": 35, "anytim": 35, "pyx": [35, 51, 52], "cpdef": [35, 43], "not_non": 35, "cdef": 35, "_handle_instrument_respons": 35, "_clock": 35, "_send_data_req": 35, "py": [35, 43, 50, 51, 58], "_instrument_provid": 35, "_log": [35, 50, 58], "_handle_data_respons": 35, "guid": [36, 37, 39, 42, 47, 49, 51, 56, 57, 58, 59, 66], "conjunct": [36, 47], "involv": [36, 41, 43, 50, 58], "larger": [36, 44, 66], "relationship": [36, 47], "1385": 36, "tagnum_1385": 36, "marketplac": 36, "made": [36, 38, 41, 42, 45, 48], "effort": [36, 41], "unexecut": 36, "reduct": 36, "easi": [36, 38], "modular": [37, 42, 62, 66], "natur": 37, "cover": [37, 39, 54, 55], "mydatapoint": 37, "z": 37, "__init__": [37, 43, 48, 58], "_ts_event": 37, "_ts_init": 37, "respect": [37, 44, 55], "approach": [37, 54, 64], "shown": [37, 48, 61], "docstr": [37, 42], "strictli": 37, "super": [37, 48, 58], "them": [37, 42, 43, 45, 58], "some_optional_categori": 37, "my_adapt": 37, "isinst": [37, 58, 64], "regardless": 38, "bid_ask": [38, 47], "subject": [38, 39, 49], "retain": [38, 41, 45], "progress": [38, 61], "stage": [38, 59], "Then": [38, 56, 58, 59, 63, 64, 65], "insid": [38, 65], "arriv": [38, 42, 43], "ye": [38, 64], "Or": [38, 45], "is_emulated_c": 38, "reli": 38, "job": [38, 52, 62], "crash": [38, 42], "reload": 38, "rememb": 38, "choos": [39, 48], "although": [39, 43, 55, 61], "varieti": [40, 66], "analys": 40, "categor": 40, "calculate_": 40, "precondit": 40, "len": [40, 61], "stat": [40, 64], "degener": 40, "turn": 40, "tear": 40, "sheet": 40, "benefici": 41, "howev": [41, 47, 48, 49, 50, 52, 55, 57, 58, 61, 62, 64], "serv": [41, 58], "analyt": 41, "plan": [41, 65], "compos": [41, 42], "power": [41, 52, 62], "evalexpr": 41, "incom": 41, "preced": 41, "demonstr": [41, 43, 58], "bitcoin": 41, "ethereum": [41, 45], "btcusdt_binance_id": 41, "ethusdt_binance_id": 41, "btc": [41, 47, 65], "eth": 41, "somewher": 41, "_synthetic_id": 41, "structur": 41, "show": [41, 43, 59], "new_formula": 41, "ethusdt_bin": [41, 43], "30000": [41, 47], "00000000": 41, "consider": 41, "despit": 41, "caution": [41, 64], "erron": 41, "lead": 41, "undefin": [41, 54], "understand": [41, 42, 43, 50, 52], "techniqu": 42, "ddd": 42, "decis": 42, "off": [42, 43, 49, 59, 61], "compet": 42, "roughli": 42, "testabl": [42, 62], "deploy": [42, 44, 62], "codebas": [42, 44, 49, 50, 52, 54, 55], "much": [42, 47, 59, 61], "formal": [42, 54], "style": 42, "plug": 42, "research": [42, 59, 61, 62], "overhead": 42, "switch": 42, "didn": 42, "improv": [42, 50], "predict": 42, "Of": 42, "lmax": 42, "award": 42, "disruptor": 42, "articl": 42, "martin": 42, "fowler": 42, "cohes": 42, "nav": 42, "componentri": 42, "foundat": 42, "nautilus_cor": 42, "collect": [42, 46, 49], "cbindgen": [42, 54], "product": [42, 52, 55, 62, 64], "resid": 42, "bind": [42, 62], "compil": [42, 51, 52, 54, 57, 62], "extend": [42, 52, 62], "cpython": [42, 52, 62], "wheel": [42, 57, 62], "softwar": [42, 44, 62], "rustc": [42, 57], "unsaf": 42, "section": [42, 54, 63, 64, 65], "bloat": 42, "undocu": 42, "third": 42, "parti": 42, "simultan": [43, 62], "sever": [43, 47, 52, 64], "crucial": 43, "hood": 43, "relev": [43, 49], "look": [43, 60], "arrow": [43, 44], "movement": 43, "conveni": [43, 45, 58], "boilerpl": [43, 59], "trade_s": [43, 48, 58, 59], "last_trad": [43, 47], "horizon_sec": 43, "20": [43, 47, 48, 59], "interval_sec": 43, "aim": [43, 49, 62, 66], "evenli": 43, "horizon": 43, "smaller": 43, "minim": [43, 48, 58], "concentr": 43, "ema_cross_twap": 43, "emacrosstwap": 43, "emacrosstwapconfig": 43, "twapexecalgorithm": 43, "250": [43, 47], "05": 43, "fast_ema_period": [43, 48, 59], "slow_ema_period": [43, 48, 59], "twap_horizon_sec": 43, "twap_interval_sec": 43, "secondari": 43, "thoroughli": 43, "starter": 43, "noqa": 43, "too": 43, "readi": [43, 58], "aris": 43, "routin": 43, "simpli": [43, 48, 58, 59, 61, 64], "spawn_sequ": 43, "20230404": 43, "e1": 43, "terminologi": 43, "chosen": [43, 59, 61], "confus": 43, "deal": 43, "aid": [43, 54, 55], "keep": [43, 49, 55, 62], "truth": [44, 60], "discrep": [44, 60], "stai": [44, 60], "interchag": [44, 60], "deploi": [44, 62], "project": [44, 51, 54, 55, 57, 62, 66], "subcompon": 44, "easili": [44, 61, 62], "nearli": 44, "apach": 44, "demo": 44, "boost": 44, "linux": [44, 57, 62], "maco": [44, 57, 62], "comprehens": 44, "dollar": 44, "sport": [45, 66], "game": 45, "incorrectli": 45, "truncat": 45, "surpris": 45, "testinstrumentprovid": [45, 59, 61], "audusd": [45, 59], "default_fx_cci": [45, 59, 61], "binance_http_cli": 45, "live_logg": 45, "flexibli": 45, "autom": [45, 62], "90500": 45, "150": 45, "demand": [45, 47], "necessarili": [45, 47, 64], "unifi": [45, 47, 66], "mpsc": 46, "crossbeam": 46, "By": [46, 59], "dbg": 46, "inf": 46, "wrn": 46, "err": 46, "consol": 46, "_": 46, "001_2023": 46, "23_635a4539": 46, "4fe2": 46, "4cb1": 46, "9be3": 46, "3079ba8d879": 46, "basenam": 46, "mention": 46, "config_nod": [46, 65], "omit": [46, 63, 64, 65], "larg": [47, 61, 62], "essenti": 47, "provis": 47, "exact": 47, "explanatori": 47, "restrict": [47, 55], "brief": 47, "good": [47, 48], "til": 47, "opg": 47, "ever": 47, "particip": 47, "visibl": [47, 50], "hidden": 47, "equival": 47, "double_last": 47, "consecut": 47, "double_bid_ask": 47, "last_or_bid_ask": 47, "mid_point": 47, "100bp": 47, "price_ti": 47, "easiest": 47, "care": [47, 54], "don": [47, 50], "simpler": 47, "clariti": 47, "clearli": [47, 66], "comment": [47, 49, 55], "ecn": [47, 58], "100_000": [47, 59, 61], "usdt": [47, 64], "notic": 47, "currenex": 47, "50": [47, 49], "gbp": 47, "3000": 47, "hit": 47, "30010": 47, "middai": 47, "6th": 47, "june": 47, "2022": 47, "50_000": 47, "06t12": 47, "jpy": [47, 65], "200_000": 47, "30_100": 47, "30_150": 47, "30100": 47, "30150": 47, "take_profit": 47, "ethusd": 47, "coin_m": 47, "trailing_stop": 47, "72000": 47, "71000": 47, "00100": 47, "1_250_000": 47, "00050": 47, "heart": 48, "experi": 48, "discuss": 48, "etc": [48, 58, 59, 61, 65], "itself": [48, 54], "mystrategi": 48, "fire": 48, "remot": 48, "launch": 48, "mystrategyconfig": 48, "parameter": 48, "though": [48, 49], "sens": [48, 61], "safeti": [48, 52, 62], "thrown": 48, "belong": 48, "till": 48, "guidelin": 49, "compliant": 49, "opinion": 49, "formatt": [49, 51], "philosoph": 49, "agre": 49, "sai": 49, "handcraft": 49, "toward": 49, "stylist": 49, "align": 49, "indent": 49, "hang": [49, 58], "vaniti": 49, "parenthesi": 49, "practic": 49, "conserv": 49, "locat": 49, "comma": [49, 61], "long_method_with_many_param": 49, "some_arg1": 49, "some_arg2": 49, "some_arg3": 49, "advantag": [49, 52, 54, 62], "idiomat": 49, "notabl": 49, "departur": 49, "truthi": 49, "everyth": [49, 58], "pyobject": [49, 52], "googl": [49, 54], "discourag": 49, "chanc": 49, "unexpect": 49, "bug": [49, 62], "foo": 49, "might": [49, 62], "said": [49, 64, 66], "aren": 49, "encourag": 49, "feedback": 49, "depart": 49, "appar": 49, "adher": [49, 54], "lint": [49, 51], "ignor": [49, 50], "yaml": 49, "justif": 49, "titl": 49, "fewer": 49, "capit": [49, 66], "imper": 49, "voic": 49, "blank": 49, "80": 49, "width": 49, "bullet": 49, "issu": [49, 50, 58, 62], "hyperlink": 49, "guidanc": 50, "languag": [50, 52, 54, 62], "syntax": [50, 51, 52, 62], "bint": 50, "bubbl": 50, "caller": [50, 54], "vote": 50, "year": 50, "unfortun": 50, "youtrack": 50, "jetbrain": 50, "9476": 50, "readthedoc": 50, "src": 50, "userguid": 50, "gdb": 50, "workflow": 50, "quit": 50, "debugg": 50, "few": 50, "thing": 50, "With": 50, "verbos": 50, "flow": 50, "pycharm": [51, 55], "profession": [51, 62], "edit": 51, "interpret": [51, 52], "visual": [51, 57], "studio": [51, 57], "pyenv": [51, 57], "poetri": [51, 57, 65], "commit": 51, "auto": 51, "pxd": [51, 52], "valuabl": 52, "contribut": 52, "believ": 52, "eco": 52, "whilst": [52, 54], "overcom": 52, "inher": [52, 62], "shortcom": 52, "lack": [52, 54], "alloc": [52, 66], "world": [52, 62], "straight": [52, 62], "forward": [52, 58, 62], "magnitud": 52, "cours": 52, "introduct": 52, "thorough": 52, "review": [52, 56], "familiar": 52, "yourself": 52, "expert": 52, "test_kit": [53, 59, 61], "folder": [53, 55], "download": [53, 57, 58, 59, 61], "fred": 53, "stlouisf": 53, "usd1mtd156n": 53, "interbank": 53, "oecd": 53, "htm": 53, "fxstreet": 53, "calendar": 53, "gmt": 53, "yearli": 53, "quarter": 53, "stitch": 53, "icon": 53, "xx": 53, "31": 53, "04": 53, "30": 53, "07": 53, "09": 53, "12": [53, 58], "program": [54, 62], "ideal": 54, "mission": [54, 62], "ownership": [54, 62], "lifetim": 54, "garbag": [54, 62], "collector": [54, 62], "eventu": [54, 64, 66], "hft": 54, "interoper": 54, "abi": 54, "compat": [54, 66], "ffi": 54, "pyo3": [54, 57, 62], "abil": [54, 62], "outsid": 54, "great": 54, "facil": 54, "therebi": 54, "shift": 54, "goal": [54, 55], "strive": [54, 58], "why": [54, 58], "invari": 54, "uphold": 54, "meet": [54, 66], "oblig": 54, "rustonomicon": 54, "dark": 54, "art": 54, "unsafeti": 54, "russel": 54, "johnston": 54, "suit": 55, "divid": 55, "broad": 55, "pytest": 55, "subdirectori": 55, "simplifi": 55, "magicmock": 55, "codecov": 55, "expens": 55, "appropri": [55, 57], "induc": 55, "damag": 55, "imposs": 55, "catch": 55, "unrecogn": 55, "ultim": 55, "pragma": 55, "redund": 55, "needless": 55, "assert": [55, 59, 61], "notimplementederror": 55, "kept": 55, "refactor": 55, "benefit": [55, 59], "judici": 55, "properli": 56, "quick": [56, 59, 61], "11": 57, "64": 57, "isol": 57, "sdist": 57, "pip": 57, "betfair": [57, 66], "h": [57, 59, 61], "ll": [57, 59, 61, 63, 64, 65], "cargo": 57, "macbook": 57, "pro": 57, "m1": 57, "m2": 57, "sure": 57, "python_configure_opt": 57, "python_vers": 57, "r": 57, "getting_start": 57, "virtualenv": 57, "pyproject": 57, "toml": 57, "rustup": 57, "toolchain": 57, "curl": [57, 58], "proto": 57, "tlsv1": 57, "ssf": 57, "sh": 57, "desktop": 57, "2019": 57, "shell": [57, 62], "home": 57, "powershel": 57, "site": 57, "python3": 57, "clone": 57, "git": 57, "nautechsystem": [57, 58], "cd": 57, "whl": 57, "jupyt": 58, "notebook": [58, 59, 61], "fastest": 58, "bear": 58, "mind": 58, "termin": 58, "ghcr": 58, "jupyterlab": 58, "8888": 58, "web": 58, "browser": 58, "cell": [58, 59, 61], "investig": 58, "12845": 58, "deshaw": 58, "prepar": 58, "script": [58, 62], "min": 58, "apt": 58, "githubusercont": 58, "nautilus_data": 58, "hist_data_to_catalog": 58, "eur": [58, 59, 61, 65], "from_env": [58, 59], "nautilus_path": 58, "hand": [58, 60, 61], "macd": 58, "mere": 58, "macdconfig": 58, "26": 58, "1_000_000": [58, 59], "entry_threshold": 58, "00010": 58, "macdstrategi": 58, "easier": [58, 62], "later": 58, "5d": 58, "check_for_entri": 58, "check_for_exit": 58, "elif": 58, "exit": 58, "noth": 58, "seem": 58, "aspect": 58, "sim": [58, 59], "cfd": [58, 62, 65], "as_nautilu": [58, 59], "2020": [58, 59, 61], "fine": 58, "__main__": 58, "piec": 58, "shutil": [59, 61], "process_fil": [59, 61], "write_object": [59, 61], "histdata": [59, 61], "ascii": [59, 61], "data_dir": 59, "raw_fil": 59, "unabl": [59, 64], "hdf5": [59, 61], "compress": [59, 61], "helper": [59, 61], "minimis": [59, 61], "idx": 59, "strptime": [59, 61], "getcwd": [59, 61], "rmtree": [59, 61], "mkdir": [59, 61], "glob_path": [59, 61], "zip": [59, 61], "02": [59, 61], "grid": 59, "venues_config": 59, "1580398089820000000": 59, "1580504394501000000": 59, "ema_cross": 59, "emacrossconfig": 59, "15": 59, "hope": 60, "page": 60, "dive": 60, "input_fil": 61, "histdata_com_ascii_audusd_": 61, "histdata_com_ascii_audusd_t202001": 61, "hist_data": 61, "And": 61, "lambda": 61, "break": 61, "appear": 61, "offici": 62, "grade": 62, "quantit": 62, "ai": 62, "pariti": 62, "challeng": 62, "workload": 62, "frequenc": 62, "independ": 62, "oco": 62, "oto": 62, "ident": [62, 64], "arbitrag": 62, "agent": 62, "train": 62, "rl": 62, "ancient": 62, "greek": 62, "sailor": 62, "nau": 62, "ship": 62, "chamber": 62, "growth": 62, "approxim": 62, "logarithm": 62, "spiral": 62, "translat": 62, "aesthet": 62, "conduct": [62, 66], "suitabl": 62, "reimplement": 62, "drive": 62, "java": 62, "proven": 62, "circumv": 62, "decad": 62, "ago": 62, "evolv": 62, "fledg": 62, "orient": 62, "tiob": 62, "popular": 62, "de": 62, "facto": 62, "lingua": 62, "franca": 62, "scienc": 62, "learn": 62, "artifici": 62, "intellig": 62, "drawback": 62, "especi": 62, "embed": 62, "ecosystem": 62, "superset": 62, "heavili": 62, "vast": 62, "paradigm": 62, "blazingli": 62, "devic": 62, "increasingli": 62, "catalogu": 63, "your_betfair_usernam": 63, "your_betfair_password": 63, "your_betfair_app_kei": 63, "your_betfair_cert_dir": 63, "betfair_api_kei": 63, "betfair_api_secret": 63, "betfair_cert_dir": 63, "confirm": [63, 64, 65], "2017": 64, "largest": 64, "unstabl": 64, "beta": 64, "phase": 64, "exercis": 64, "assort": 64, "binancewebsocketcli": 64, "unif": 64, "polici": 64, "clarifi": 64, "trailing_offet_typ": 64, "activation_pric": 64, "your_binance_api_kei": 64, "your_binance_api_secret": 64, "coin_futur": 64, "binance_api_secret": 64, "binance_testnet_api_secret": 64, "binance_futures_api_kei": 64, "binance_futures_api_secret": 64, "isolated_margin": 64, "busd": 64, "stablecoin": 64, "collater": 64, "cluster": 64, "behav": 64, "your_binance_testnet_api_kei": 64, "your_binance_testnet_api_secret": 64, "comparison": 64, "enorm": 64, "unnecessari": 64, "qualifycontract": 65, "usual": 65, "resolv": 65, "initialis": 65, "aapl": 65, "nasdaq": 65, "cme": 65, "me": 65, "amd": 65, "intc": 65, "ibus30": 65, "ymh24": 65, "cbot": 65, "clz27": 65, "nymex": 65, "esz27": 65, "spy251219c00395000": 65, "arca": 65, "spy": 65, "20251219": 65, "bond": 65, "us03076kaa60": 65, "paxo": 65, "workstat": 65, "interactivebrokersexecutionclientconfig": 65, "heavi": 66, "cex": 66, "widest": 66, "criteria": 66, "_m": 66}, "objects": {"nautilus_trader": [[0, 0, 0, "-", "accounting"], [3, 0, 0, "-", "adapters"], [5, 0, 0, "-", "analysis"], [6, 0, 0, "-", "backtest"], [7, 0, 0, "-", "cache"], [8, 0, 0, "-", "common"], [9, 0, 0, "-", "config"], [10, 0, 0, "-", "core"], [11, 0, 0, "-", "data"], [12, 0, 0, "-", "execution"], [14, 0, 0, "-", "indicators"], [15, 0, 0, "-", "infrastructure"], [16, 0, 0, "-", "live"], [21, 0, 0, "-", "model"], [28, 0, 0, "-", "msgbus"], [29, 0, 0, "-", "persistence"], [30, 0, 0, "-", "portfolio"], [31, 0, 0, "-", "risk"], [32, 0, 0, "-", "serialization"], [33, 0, 0, "-", "system"], [34, 0, 0, "-", "trading"]], "nautilus_trader.accounting.accounts": [[0, 0, 0, "-", "cash"], [0, 0, 0, "-", "margin"]], "nautilus_trader.accounting.accounts.cash": [[0, 1, 1, "", "CashAccount"]], "nautilus_trader.accounting.accounts.cash.CashAccount": [[0, 2, 1, "", "apply"], [0, 2, 1, "", "balance"], [0, 2, 1, "", "balance_free"], [0, 2, 1, "", "balance_locked"], [0, 2, 1, "", "balance_total"], [0, 2, 1, "", "balances"], [0, 2, 1, "", "balances_free"], [0, 2, 1, "", "balances_locked"], [0, 2, 1, "", "balances_total"], [0, 3, 1, "", "base_currency"], [0, 3, 1, "", "calculate_account_state"], [0, 2, 1, "", "calculate_balance_locked"], [0, 2, 1, "", "calculate_commission"], [0, 2, 1, "", "calculate_pnls"], [0, 2, 1, "", "clear_balance_locked"], [0, 2, 1, "", "commission"], [0, 2, 1, "", "commissions"], [0, 2, 1, "", "currencies"], [0, 3, 1, "", "event_count"], [0, 3, 1, "", "events"], [0, 3, 1, "", "id"], [0, 3, 1, "", "is_cash_account"], [0, 3, 1, "", "is_margin_account"], [0, 2, 1, "", "is_unleveraged"], [0, 3, 1, "", "last_event"], [0, 2, 1, "", "starting_balances"], [0, 3, 1, "", "type"], [0, 2, 1, "", "update_balance_locked"], [0, 2, 1, "", "update_balances"], [0, 2, 1, "", "update_commissions"]], "nautilus_trader.accounting.accounts.margin": [[0, 1, 1, "", "MarginAccount"]], "nautilus_trader.accounting.accounts.margin.MarginAccount": [[0, 2, 1, "", "apply"], [0, 2, 1, "", "balance"], [0, 2, 1, "", "balance_free"], [0, 2, 1, "", "balance_locked"], [0, 2, 1, "", "balance_total"], [0, 2, 1, "", "balances"], [0, 2, 1, "", "balances_free"], [0, 2, 1, "", "balances_locked"], [0, 2, 1, "", "balances_total"], [0, 3, 1, "", "base_currency"], [0, 3, 1, "", "calculate_account_state"], [0, 2, 1, "", "calculate_commission"], [0, 2, 1, "", "calculate_margin_init"], [0, 2, 1, "", "calculate_margin_maint"], [0, 2, 1, "", "calculate_pnls"], [0, 2, 1, "", "clear_margin"], [0, 2, 1, "", "clear_margin_init"], [0, 2, 1, "", "clear_margin_maint"], [0, 2, 1, "", "commission"], [0, 2, 1, "", "commissions"], [0, 2, 1, "", "currencies"], [0, 3, 1, "", "default_leverage"], [0, 3, 1, "", "event_count"], [0, 3, 1, "", "events"], [0, 3, 1, "", "id"], [0, 3, 1, "", "is_cash_account"], [0, 3, 1, "", "is_margin_account"], [0, 2, 1, "", "is_unleveraged"], [0, 3, 1, "", "last_event"], [0, 2, 1, "", "leverage"], [0, 2, 1, "", "leverages"], [0, 2, 1, "", "margin"], [0, 2, 1, "", "margin_init"], [0, 2, 1, "", "margin_maint"], [0, 2, 1, "", "margins"], [0, 2, 1, "", "margins_init"], [0, 2, 1, "", "margins_maint"], [0, 2, 1, "", "set_default_leverage"], [0, 2, 1, "", "set_leverage"], [0, 2, 1, "", "starting_balances"], [0, 3, 1, "", "type"], [0, 2, 1, "", "update_balances"], [0, 2, 1, "", "update_commissions"], [0, 2, 1, "", "update_margin"], [0, 2, 1, "", "update_margin_init"], [0, 2, 1, "", "update_margin_maint"]], "nautilus_trader.accounting": [[0, 0, 0, "-", "calculators"], [0, 0, 0, "-", "factory"], [0, 0, 0, "-", "manager"]], "nautilus_trader.accounting.calculators": [[0, 1, 1, "", "ExchangeRateCalculator"], [0, 1, 1, "", "RolloverInterestCalculator"]], "nautilus_trader.accounting.calculators.ExchangeRateCalculator": [[0, 2, 1, "", "get_rate"]], "nautilus_trader.accounting.calculators.RolloverInterestCalculator": [[0, 2, 1, "", "calc_overnight_rate"], [0, 2, 1, "", "get_rate_data"]], "nautilus_trader.accounting.factory": [[0, 1, 1, "", "AccountFactory"]], "nautilus_trader.accounting.factory.AccountFactory": [[0, 2, 1, "", "create"], [0, 2, 1, "", "register_account_type"], [0, 2, 1, "", "register_calculated_account"]], "nautilus_trader.accounting.manager": [[0, 1, 1, "", "AccountsManager"]], "nautilus_trader.adapters": [[1, 0, 0, "-", "betfair"], [2, 0, 0, "-", "binance"], [4, 0, 0, "-", "interactive_brokers"]], "nautilus_trader.adapters.betfair": [[1, 0, 0, "-", "client"], [1, 0, 0, "-", "common"], [1, 0, 0, "-", "config"], [1, 0, 0, "-", "data"], [1, 0, 0, "-", "data_types"], [1, 0, 0, "-", "execution"], [1, 0, 0, "-", "factories"], [1, 0, 0, "-", "historic"], [1, 0, 0, "-", "providers"], [1, 0, 0, "-", "sockets"]], "nautilus_trader.adapters.betfair.client": [[1, 1, 1, "", "BetfairHttpClient"]], "nautilus_trader.adapters.betfair.client.BetfairHttpClient": [[1, 2, 1, "", "keep_alive"], [1, 2, 1, "", "list_market_catalogue"], [1, 2, 1, "", "list_navigation"]], "nautilus_trader.adapters.betfair.config": [[1, 1, 1, "", "BetfairDataClientConfig"], [1, 1, 1, "", "BetfairExecClientConfig"]], "nautilus_trader.adapters.betfair.config.BetfairDataClientConfig": [[1, 2, 1, "", "dict"], [1, 2, 1, "", "fully_qualified_name"], [1, 2, 1, "", "json"], [1, 2, 1, "", "parse"], [1, 2, 1, "", "validate"]], "nautilus_trader.adapters.betfair.config.BetfairExecClientConfig": [[1, 2, 1, "", "dict"], [1, 2, 1, "", "fully_qualified_name"], [1, 2, 1, "", "json"], [1, 2, 1, "", "parse"], [1, 2, 1, "", "validate"]], "nautilus_trader.adapters.betfair.data": [[1, 1, 1, "", "BetfairDataClient"]], "nautilus_trader.adapters.betfair.data.BetfairDataClient": [[1, 2, 1, "", "connect"], [1, 2, 1, "", "create_task"], [1, 2, 1, "", "degrade"], [1, 2, 1, "", "disconnect"], [1, 2, 1, "", "dispose"], [1, 2, 1, "", "fault"], [1, 2, 1, "", "fully_qualified_name"], [1, 3, 1, "", "id"], [1, 3, 1, "", "is_connected"], [1, 3, 1, "", "is_degraded"], [1, 3, 1, "", "is_disposed"], [1, 3, 1, "", "is_faulted"], [1, 3, 1, "", "is_initialized"], [1, 3, 1, "", "is_running"], [1, 3, 1, "", "is_stopped"], [1, 2, 1, "", "request"], [1, 2, 1, "", "request_bars"], [1, 2, 1, "", "request_instrument"], [1, 2, 1, "", "request_instruments"], [1, 2, 1, "", "request_quote_ticks"], [1, 2, 1, "", "request_trade_ticks"], [1, 2, 1, "", "reset"], [1, 2, 1, "", "resume"], [1, 2, 1, "", "run_after_delay"], [1, 2, 1, "", "start"], [1, 3, 1, "", "state"], [1, 2, 1, "", "stop"], [1, 2, 1, "", "subscribe"], [1, 2, 1, "", "subscribe_bars"], [1, 2, 1, "", "subscribe_instrument"], [1, 2, 1, "", "subscribe_instrument_close"], [1, 2, 1, "", "subscribe_instrument_status_updates"], [1, 2, 1, "", "subscribe_instruments"], [1, 2, 1, "", "subscribe_order_book_deltas"], [1, 2, 1, "", "subscribe_order_book_snapshots"], [1, 2, 1, "", "subscribe_quote_ticks"], [1, 2, 1, "", "subscribe_ticker"], [1, 2, 1, "", "subscribe_trade_ticks"], [1, 2, 1, "", "subscribe_venue_status_updates"], [1, 2, 1, "", "subscribed_bars"], [1, 2, 1, "", "subscribed_generic_data"], [1, 2, 1, "", "subscribed_instrument_close"], [1, 2, 1, "", "subscribed_instrument_status_updates"], [1, 2, 1, "", "subscribed_instruments"], [1, 2, 1, "", "subscribed_order_book_deltas"], [1, 2, 1, "", "subscribed_order_book_snapshots"], [1, 2, 1, "", "subscribed_quote_ticks"], [1, 2, 1, "", "subscribed_tickers"], [1, 2, 1, "", "subscribed_trade_ticks"], [1, 2, 1, "", "subscribed_venue_status_updates"], [1, 3, 1, "", "trader_id"], [1, 3, 1, "", "type"], [1, 2, 1, "", "unsubscribe"], [1, 2, 1, "", "unsubscribe_bars"], [1, 2, 1, "", "unsubscribe_instrument"], [1, 2, 1, "", "unsubscribe_instrument_close"], [1, 2, 1, "", "unsubscribe_instrument_status_updates"], [1, 2, 1, "", "unsubscribe_instruments"], [1, 2, 1, "", "unsubscribe_order_book_deltas"], [1, 2, 1, "", "unsubscribe_order_book_snapshots"], [1, 2, 1, "", "unsubscribe_quote_ticks"], [1, 2, 1, "", "unsubscribe_ticker"], [1, 2, 1, "", "unsubscribe_trade_ticks"], [1, 2, 1, "", "unsubscribe_venue_status_updates"], [1, 3, 1, "", "venue"]], "nautilus_trader.adapters.betfair.data_types": [[1, 1, 1, "", "BSPOrderBookDelta"], [1, 1, 1, "", "BSPOrderBookDeltas"], [1, 1, 1, "", "BetfairStartingPrice"], [1, 1, 1, "", "BetfairTicker"], [1, 1, 1, "", "SubscriptionStatus"]], "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta": [[1, 3, 1, "", "action"], [1, 2, 1, "", "clear"], [1, 3, 1, "", "flags"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "fully_qualified_name"], [1, 3, 1, "", "instrument_id"], [1, 3, 1, "", "is_add"], [1, 3, 1, "", "is_clear"], [1, 3, 1, "", "is_delete"], [1, 3, 1, "", "is_update"], [1, 3, 1, "", "order"], [1, 3, 1, "", "sequence"], [1, 2, 1, "", "to_dict"], [1, 3, 1, "", "ts_event"], [1, 3, 1, "", "ts_init"]], "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDeltas": [[1, 3, 1, "", "deltas"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "fully_qualified_name"], [1, 3, 1, "", "instrument_id"], [1, 3, 1, "", "is_snapshot"], [1, 3, 1, "", "sequence"], [1, 2, 1, "", "to_dict"], [1, 3, 1, "", "ts_event"], [1, 3, 1, "", "ts_init"]], "nautilus_trader.adapters.betfair.data_types.BetfairStartingPrice": [[1, 2, 1, "", "fully_qualified_name"], [1, 4, 1, "", "ts_event"], [1, 4, 1, "", "ts_init"]], "nautilus_trader.adapters.betfair.data_types.BetfairTicker": [[1, 2, 1, "", "from_dict"], [1, 2, 1, "", "fully_qualified_name"], [1, 3, 1, "", "instrument_id"], [1, 2, 1, "", "to_dict"], [1, 3, 1, "", "ts_event"], [1, 3, 1, "", "ts_init"]], "nautilus_trader.adapters.betfair.execution": [[1, 1, 1, "", "BetfairExecutionClient"]], "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient": [[1, 3, 1, "", "account_id"], [1, 3, 1, "", "account_type"], [1, 3, 1, "", "base_currency"], [1, 2, 1, "", "cancel_all_orders"], [1, 2, 1, "", "cancel_order"], [1, 2, 1, "", "check_account_currency"], [1, 2, 1, "", "connect"], [1, 2, 1, "", "create_task"], [1, 2, 1, "", "degrade"], [1, 2, 1, "", "disconnect"], [1, 2, 1, "", "dispose"], [1, 2, 1, "", "fault"], [1, 2, 1, "", "fully_qualified_name"], [1, 2, 1, "", "generate_account_state"], [1, 2, 1, "", "generate_mass_status"], [1, 2, 1, "", "generate_order_accepted"], [1, 2, 1, "", "generate_order_cancel_rejected"], [1, 2, 1, "", "generate_order_canceled"], [1, 2, 1, "", "generate_order_expired"], [1, 2, 1, "", "generate_order_filled"], [1, 2, 1, "", "generate_order_modify_rejected"], [1, 2, 1, "", "generate_order_rejected"], [1, 2, 1, "", "generate_order_status_report"], [1, 2, 1, "", "generate_order_status_reports"], [1, 2, 1, "", "generate_order_submitted"], [1, 2, 1, "", "generate_order_triggered"], [1, 2, 1, "", "generate_order_updated"], [1, 2, 1, "", "generate_position_status_reports"], [1, 2, 1, "", "generate_trade_reports"], [1, 2, 1, "", "get_account"], [1, 2, 1, "", "handle_order_stream_update"], [1, 3, 1, "", "id"], [1, 3, 1, "", "is_connected"], [1, 3, 1, "", "is_degraded"], [1, 3, 1, "", "is_disposed"], [1, 3, 1, "", "is_faulted"], [1, 3, 1, "", "is_initialized"], [1, 3, 1, "", "is_running"], [1, 3, 1, "", "is_stopped"], [1, 2, 1, "", "modify_order"], [1, 3, 1, "", "oms_type"], [1, 2, 1, "", "query_order"], [1, 2, 1, "", "reset"], [1, 2, 1, "", "resume"], [1, 2, 1, "", "run_after_delay"], [1, 2, 1, "", "start"], [1, 3, 1, "", "state"], [1, 2, 1, "", "stop"], [1, 2, 1, "", "submit_order"], [1, 2, 1, "", "submit_order_list"], [1, 3, 1, "", "trader_id"], [1, 3, 1, "", "type"], [1, 3, 1, "", "venue"], [1, 2, 1, "", "wait_for_order"], [1, 2, 1, "", "watch_stream"]], "nautilus_trader.adapters.betfair.factories": [[1, 1, 1, "", "BetfairLiveDataClientFactory"], [1, 1, 1, "", "BetfairLiveExecClientFactory"], [1, 5, 1, "", "get_cached_betfair_client"], [1, 5, 1, "", "get_cached_betfair_instrument_provider"]], "nautilus_trader.adapters.betfair.factories.BetfairLiveDataClientFactory": [[1, 2, 1, "", "create"]], "nautilus_trader.adapters.betfair.factories.BetfairLiveExecClientFactory": [[1, 2, 1, "", "create"]], "nautilus_trader.adapters.betfair.providers": [[1, 1, 1, "", "BetfairInstrumentProvider"]], "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider": [[1, 2, 1, "", "add"], [1, 2, 1, "", "add_bulk"], [1, 2, 1, "", "add_currency"], [1, 4, 1, "", "count"], [1, 2, 1, "", "currencies"], [1, 2, 1, "", "currency"], [1, 2, 1, "", "find"], [1, 2, 1, "", "get_all"], [1, 2, 1, "", "get_betting_instrument"], [1, 2, 1, "", "initialize"], [1, 2, 1, "", "list_all"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_all"], [1, 2, 1, "", "load_all_async"], [1, 2, 1, "", "load_async"], [1, 2, 1, "", "load_ids"], [1, 2, 1, "", "load_ids_async"], [1, 2, 1, "", "load_markets"], [1, 2, 1, "", "search_instruments"], [1, 4, 1, "", "venue"]], "nautilus_trader.adapters.betfair.sockets": [[1, 1, 1, "", "BetfairMarketStreamClient"], [1, 1, 1, "", "BetfairOrderStreamClient"], [1, 1, 1, "", "BetfairStreamClient"]], "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient": [[1, 2, 1, "", "post_connection"], [1, 2, 1, "", "post_disconnection"]], "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient": [[1, 2, 1, "", "post_connection"], [1, 2, 1, "", "post_disconnection"]], "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient": [[1, 2, 1, "", "post_connection"], [1, 2, 1, "", "post_disconnection"]], "nautilus_trader.adapters.binance.common": [[2, 0, 0, "-", "enums"], [2, 0, 0, "-", "types"]], "nautilus_trader.adapters.binance.common.enums": [[2, 1, 1, "", "BinanceAccountType"], [2, 1, 1, "", "BinanceEnumParser"], [2, 1, 1, "", "BinanceExchangeFilterType"], [2, 1, 1, "", "BinanceExecutionType"], [2, 1, 1, "", "BinanceKlineInterval"], [2, 1, 1, "", "BinanceMethodType"], [2, 1, 1, "", "BinanceNewOrderRespType"], [2, 1, 1, "", "BinanceOrderSide"], [2, 1, 1, "", "BinanceOrderStatus"], [2, 1, 1, "", "BinanceOrderType"], [2, 1, 1, "", "BinanceRateLimitInterval"], [2, 1, 1, "", "BinanceRateLimitType"], [2, 1, 1, "", "BinanceSecurityType"], [2, 1, 1, "", "BinanceSymbolFilterType"], [2, 1, 1, "", "BinanceTimeInForce"]], "nautilus_trader.adapters.binance.common.types": [[2, 1, 1, "", "BinanceBar"], [2, 1, 1, "", "BinanceTicker"]], "nautilus_trader.adapters.binance.common.types.BinanceBar": [[2, 3, 1, "", "bar_type"], [2, 3, 1, "", "close"], [2, 2, 1, "", "from_dict"], [2, 2, 1, "", "fully_qualified_name"], [2, 3, 1, "", "high"], [2, 3, 1, "", "is_revision"], [2, 2, 1, "", "is_single_price"], [2, 3, 1, "", "low"], [2, 3, 1, "", "open"], [2, 2, 1, "", "to_dict"], [2, 3, 1, "", "ts_event"], [2, 3, 1, "", "ts_init"], [2, 3, 1, "", "volume"]], "nautilus_trader.adapters.binance.common.types.BinanceTicker": [[2, 2, 1, "", "from_dict"], [2, 2, 1, "", "fully_qualified_name"], [2, 3, 1, "", "instrument_id"], [2, 2, 1, "", "to_dict"], [2, 3, 1, "", "ts_event"], [2, 3, 1, "", "ts_init"]], "nautilus_trader.adapters.binance": [[2, 0, 0, "-", "config"], [2, 0, 0, "-", "factories"]], "nautilus_trader.adapters.binance.config": [[2, 1, 1, "", "BinanceDataClientConfig"], [2, 1, 1, "", "BinanceExecClientConfig"]], "nautilus_trader.adapters.binance.config.BinanceDataClientConfig": [[2, 2, 1, "", "dict"], [2, 2, 1, "", "fully_qualified_name"], [2, 2, 1, "", "json"], [2, 2, 1, "", "parse"], [2, 2, 1, "", "validate"]], "nautilus_trader.adapters.binance.config.BinanceExecClientConfig": [[2, 2, 1, "", "dict"], [2, 2, 1, "", "fully_qualified_name"], [2, 2, 1, "", "json"], [2, 2, 1, "", "parse"], [2, 2, 1, "", "validate"]], "nautilus_trader.adapters.binance.factories": [[2, 1, 1, "", "BinanceLiveDataClientFactory"], [2, 1, 1, "", "BinanceLiveExecClientFactory"], [2, 5, 1, "", "get_cached_binance_futures_instrument_provider"], [2, 5, 1, "", "get_cached_binance_http_client"], [2, 5, 1, "", "get_cached_binance_spot_instrument_provider"]], "nautilus_trader.adapters.binance.factories.BinanceLiveDataClientFactory": [[2, 2, 1, "", "create"]], "nautilus_trader.adapters.binance.factories.BinanceLiveExecClientFactory": [[2, 2, 1, "", "create"]], "nautilus_trader.adapters.binance.futures": [[2, 0, 0, "-", "data"], [2, 0, 0, "-", "enums"], [2, 0, 0, "-", "execution"], [2, 0, 0, "-", "providers"], [2, 0, 0, "-", "types"]], "nautilus_trader.adapters.binance.futures.data": [[2, 1, 1, "", "BinanceFuturesDataClient"]], "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient": [[2, 2, 1, "", "connect"], [2, 2, 1, "", "create_task"], [2, 2, 1, "", "degrade"], [2, 2, 1, "", "disconnect"], [2, 2, 1, "", "dispose"], [2, 2, 1, "", "fault"], [2, 2, 1, "", "fully_qualified_name"], [2, 3, 1, "", "id"], [2, 3, 1, "", "is_connected"], [2, 3, 1, "", "is_degraded"], [2, 3, 1, "", "is_disposed"], [2, 3, 1, "", "is_faulted"], [2, 3, 1, "", "is_initialized"], [2, 3, 1, "", "is_running"], [2, 3, 1, "", "is_stopped"], [2, 2, 1, "", "request"], [2, 2, 1, "", "request_bars"], [2, 2, 1, "", "request_instrument"], [2, 2, 1, "", "request_instruments"], [2, 2, 1, "", "request_quote_ticks"], [2, 2, 1, "", "request_trade_ticks"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "resume"], [2, 2, 1, "", "run_after_delay"], [2, 2, 1, "", "start"], [2, 3, 1, "", "state"], [2, 2, 1, "", "stop"], [2, 2, 1, "", "subscribe"], [2, 2, 1, "", "subscribe_bars"], [2, 2, 1, "", "subscribe_instrument"], [2, 2, 1, "", "subscribe_instrument_close"], [2, 2, 1, "", "subscribe_instrument_status_updates"], [2, 2, 1, "", "subscribe_instruments"], [2, 2, 1, "", "subscribe_order_book_deltas"], [2, 2, 1, "", "subscribe_order_book_snapshots"], [2, 2, 1, "", "subscribe_quote_ticks"], [2, 2, 1, "", "subscribe_ticker"], [2, 2, 1, "", "subscribe_trade_ticks"], [2, 2, 1, "", "subscribe_venue_status_updates"], [2, 2, 1, "", "subscribed_bars"], [2, 2, 1, "", "subscribed_generic_data"], [2, 2, 1, "", "subscribed_instrument_close"], [2, 2, 1, "", "subscribed_instrument_status_updates"], [2, 2, 1, "", "subscribed_instruments"], [2, 2, 1, "", "subscribed_order_book_deltas"], [2, 2, 1, "", "subscribed_order_book_snapshots"], [2, 2, 1, "", "subscribed_quote_ticks"], [2, 2, 1, "", "subscribed_tickers"], [2, 2, 1, "", "subscribed_trade_ticks"], [2, 2, 1, "", "subscribed_venue_status_updates"], [2, 3, 1, "", "trader_id"], [2, 3, 1, "", "type"], [2, 2, 1, "", "unsubscribe"], [2, 2, 1, "", "unsubscribe_bars"], [2, 2, 1, "", "unsubscribe_instrument"], [2, 2, 1, "", "unsubscribe_instrument_close"], [2, 2, 1, "", "unsubscribe_instrument_status_updates"], [2, 2, 1, "", "unsubscribe_instruments"], [2, 2, 1, "", "unsubscribe_order_book_deltas"], [2, 2, 1, "", "unsubscribe_order_book_snapshots"], [2, 2, 1, "", "unsubscribe_quote_ticks"], [2, 2, 1, "", "unsubscribe_ticker"], [2, 2, 1, "", "unsubscribe_trade_ticks"], [2, 2, 1, "", "unsubscribe_venue_status_updates"], [2, 3, 1, "", "venue"]], "nautilus_trader.adapters.binance.futures.enums": [[2, 1, 1, "", "BinanceFuturesContractStatus"], [2, 1, 1, "", "BinanceFuturesContractType"], [2, 1, 1, "", "BinanceFuturesEnumParser"], [2, 1, 1, "", "BinanceFuturesEventType"], [2, 1, 1, "", "BinanceFuturesMarginType"], [2, 1, 1, "", "BinanceFuturesPositionSide"], [2, 1, 1, "", "BinanceFuturesPositionUpdateReason"], [2, 1, 1, "", "BinanceFuturesWorkingType"]], "nautilus_trader.adapters.binance.futures.execution": [[2, 1, 1, "", "BinanceFuturesExecutionClient"]], "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient": [[2, 3, 1, "", "account_id"], [2, 3, 1, "", "account_type"], [2, 3, 1, "", "base_currency"], [2, 2, 1, "", "cancel_all_orders"], [2, 2, 1, "", "cancel_order"], [2, 2, 1, "", "connect"], [2, 2, 1, "", "create_task"], [2, 2, 1, "", "degrade"], [2, 2, 1, "", "disconnect"], [2, 2, 1, "", "dispose"], [2, 2, 1, "", "fault"], [2, 2, 1, "", "fully_qualified_name"], [2, 2, 1, "", "generate_account_state"], [2, 2, 1, "", "generate_mass_status"], [2, 2, 1, "", "generate_order_accepted"], [2, 2, 1, "", "generate_order_cancel_rejected"], [2, 2, 1, "", "generate_order_canceled"], [2, 2, 1, "", "generate_order_expired"], [2, 2, 1, "", "generate_order_filled"], [2, 2, 1, "", "generate_order_modify_rejected"], [2, 2, 1, "", "generate_order_rejected"], [2, 2, 1, "", "generate_order_status_report"], [2, 2, 1, "", "generate_order_status_reports"], [2, 2, 1, "", "generate_order_submitted"], [2, 2, 1, "", "generate_order_triggered"], [2, 2, 1, "", "generate_order_updated"], [2, 2, 1, "", "generate_position_status_reports"], [2, 2, 1, "", "generate_trade_reports"], [2, 2, 1, "", "get_account"], [2, 3, 1, "", "id"], [2, 3, 1, "", "is_connected"], [2, 3, 1, "", "is_degraded"], [2, 3, 1, "", "is_disposed"], [2, 3, 1, "", "is_faulted"], [2, 3, 1, "", "is_initialized"], [2, 3, 1, "", "is_running"], [2, 3, 1, "", "is_stopped"], [2, 2, 1, "", "modify_order"], [2, 3, 1, "", "oms_type"], [2, 2, 1, "", "query_order"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "resume"], [2, 2, 1, "", "run_after_delay"], [2, 2, 1, "", "start"], [2, 3, 1, "", "state"], [2, 2, 1, "", "stop"], [2, 2, 1, "", "submit_order"], [2, 2, 1, "", "submit_order_list"], [2, 3, 1, "", "trader_id"], [2, 4, 1, "", "treat_expired_as_canceled"], [2, 3, 1, "", "type"], [2, 4, 1, "", "use_position_ids"], [2, 3, 1, "", "venue"]], "nautilus_trader.adapters.binance.futures.providers": [[2, 1, 1, "", "BinanceFuturesInstrumentProvider"]], "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider": [[2, 2, 1, "", "add"], [2, 2, 1, "", "add_bulk"], [2, 2, 1, "", "add_currency"], [2, 4, 1, "", "count"], [2, 2, 1, "", "currencies"], [2, 2, 1, "", "currency"], [2, 2, 1, "", "find"], [2, 2, 1, "", "get_all"], [2, 2, 1, "", "initialize"], [2, 2, 1, "", "list_all"], [2, 2, 1, "", "load"], [2, 2, 1, "", "load_all"], [2, 2, 1, "", "load_all_async"], [2, 2, 1, "", "load_async"], [2, 2, 1, "", "load_ids"], [2, 2, 1, "", "load_ids_async"], [2, 4, 1, "", "venue"]], "nautilus_trader.adapters.binance.futures.types": [[2, 1, 1, "", "BinanceFuturesMarkPriceUpdate"]], "nautilus_trader.adapters.binance.futures.types.BinanceFuturesMarkPriceUpdate": [[2, 2, 1, "", "from_dict"], [2, 2, 1, "", "fully_qualified_name"], [2, 2, 1, "", "to_dict"], [2, 4, 1, "", "ts_event"], [2, 4, 1, "", "ts_init"]], "nautilus_trader.adapters.binance.spot": [[2, 0, 0, "-", "data"], [2, 0, 0, "-", "enums"], [2, 0, 0, "-", "execution"], [2, 0, 0, "-", "providers"]], "nautilus_trader.adapters.binance.spot.data": [[2, 1, 1, "", "BinanceSpotDataClient"]], "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient": [[2, 2, 1, "", "connect"], [2, 2, 1, "", "create_task"], [2, 2, 1, "", "degrade"], [2, 2, 1, "", "disconnect"], [2, 2, 1, "", "dispose"], [2, 2, 1, "", "fault"], [2, 2, 1, "", "fully_qualified_name"], [2, 3, 1, "", "id"], [2, 3, 1, "", "is_connected"], [2, 3, 1, "", "is_degraded"], [2, 3, 1, "", "is_disposed"], [2, 3, 1, "", "is_faulted"], [2, 3, 1, "", "is_initialized"], [2, 3, 1, "", "is_running"], [2, 3, 1, "", "is_stopped"], [2, 2, 1, "", "request"], [2, 2, 1, "", "request_bars"], [2, 2, 1, "", "request_instrument"], [2, 2, 1, "", "request_instruments"], [2, 2, 1, "", "request_quote_ticks"], [2, 2, 1, "", "request_trade_ticks"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "resume"], [2, 2, 1, "", "run_after_delay"], [2, 2, 1, "", "start"], [2, 3, 1, "", "state"], [2, 2, 1, "", "stop"], [2, 2, 1, "", "subscribe"], [2, 2, 1, "", "subscribe_bars"], [2, 2, 1, "", "subscribe_instrument"], [2, 2, 1, "", "subscribe_instrument_close"], [2, 2, 1, "", "subscribe_instrument_status_updates"], [2, 2, 1, "", "subscribe_instruments"], [2, 2, 1, "", "subscribe_order_book_deltas"], [2, 2, 1, "", "subscribe_order_book_snapshots"], [2, 2, 1, "", "subscribe_quote_ticks"], [2, 2, 1, "", "subscribe_ticker"], [2, 2, 1, "", "subscribe_trade_ticks"], [2, 2, 1, "", "subscribe_venue_status_updates"], [2, 2, 1, "", "subscribed_bars"], [2, 2, 1, "", "subscribed_generic_data"], [2, 2, 1, "", "subscribed_instrument_close"], [2, 2, 1, "", "subscribed_instrument_status_updates"], [2, 2, 1, "", "subscribed_instruments"], [2, 2, 1, "", "subscribed_order_book_deltas"], [2, 2, 1, "", "subscribed_order_book_snapshots"], [2, 2, 1, "", "subscribed_quote_ticks"], [2, 2, 1, "", "subscribed_tickers"], [2, 2, 1, "", "subscribed_trade_ticks"], [2, 2, 1, "", "subscribed_venue_status_updates"], [2, 3, 1, "", "trader_id"], [2, 3, 1, "", "type"], [2, 2, 1, "", "unsubscribe"], [2, 2, 1, "", "unsubscribe_bars"], [2, 2, 1, "", "unsubscribe_instrument"], [2, 2, 1, "", "unsubscribe_instrument_close"], [2, 2, 1, "", "unsubscribe_instrument_status_updates"], [2, 2, 1, "", "unsubscribe_instruments"], [2, 2, 1, "", "unsubscribe_order_book_deltas"], [2, 2, 1, "", "unsubscribe_order_book_snapshots"], [2, 2, 1, "", "unsubscribe_quote_ticks"], [2, 2, 1, "", "unsubscribe_ticker"], [2, 2, 1, "", "unsubscribe_trade_ticks"], [2, 2, 1, "", "unsubscribe_venue_status_updates"], [2, 3, 1, "", "venue"]], "nautilus_trader.adapters.binance.spot.enums": [[2, 1, 1, "", "BinanceSpotEnumParser"], [2, 1, 1, "", "BinanceSpotEventType"], [2, 1, 1, "", "BinanceSpotPermissions"], [2, 1, 1, "", "BinanceSpotSymbolStatus"]], "nautilus_trader.adapters.binance.spot.execution": [[2, 1, 1, "", "BinanceSpotExecutionClient"]], "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient": [[2, 3, 1, "", "account_id"], [2, 3, 1, "", "account_type"], [2, 3, 1, "", "base_currency"], [2, 2, 1, "", "cancel_all_orders"], [2, 2, 1, "", "cancel_order"], [2, 2, 1, "", "connect"], [2, 2, 1, "", "create_task"], [2, 2, 1, "", "degrade"], [2, 2, 1, "", "disconnect"], [2, 2, 1, "", "dispose"], [2, 2, 1, "", "fault"], [2, 2, 1, "", "fully_qualified_name"], [2, 2, 1, "", "generate_account_state"], [2, 2, 1, "", "generate_mass_status"], [2, 2, 1, "", "generate_order_accepted"], [2, 2, 1, "", "generate_order_cancel_rejected"], [2, 2, 1, "", "generate_order_canceled"], [2, 2, 1, "", "generate_order_expired"], [2, 2, 1, "", "generate_order_filled"], [2, 2, 1, "", "generate_order_modify_rejected"], [2, 2, 1, "", "generate_order_rejected"], [2, 2, 1, "", "generate_order_status_report"], [2, 2, 1, "", "generate_order_status_reports"], [2, 2, 1, "", "generate_order_submitted"], [2, 2, 1, "", "generate_order_triggered"], [2, 2, 1, "", "generate_order_updated"], [2, 2, 1, "", "generate_position_status_reports"], [2, 2, 1, "", "generate_trade_reports"], [2, 2, 1, "", "get_account"], [2, 3, 1, "", "id"], [2, 3, 1, "", "is_connected"], [2, 3, 1, "", "is_degraded"], [2, 3, 1, "", "is_disposed"], [2, 3, 1, "", "is_faulted"], [2, 3, 1, "", "is_initialized"], [2, 3, 1, "", "is_running"], [2, 3, 1, "", "is_stopped"], [2, 2, 1, "", "modify_order"], [2, 3, 1, "", "oms_type"], [2, 2, 1, "", "query_order"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "resume"], [2, 2, 1, "", "run_after_delay"], [2, 2, 1, "", "start"], [2, 3, 1, "", "state"], [2, 2, 1, "", "stop"], [2, 2, 1, "", "submit_order"], [2, 2, 1, "", "submit_order_list"], [2, 3, 1, "", "trader_id"], [2, 4, 1, "", "treat_expired_as_canceled"], [2, 3, 1, "", "type"], [2, 4, 1, "", "use_position_ids"], [2, 3, 1, "", "venue"]], "nautilus_trader.adapters.binance.spot.providers": [[2, 1, 1, "", "BinanceSpotInstrumentProvider"]], "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider": [[2, 2, 1, "", "add"], [2, 2, 1, "", "add_bulk"], [2, 2, 1, "", "add_currency"], [2, 4, 1, "", "count"], [2, 2, 1, "", "currencies"], [2, 2, 1, "", "currency"], [2, 2, 1, "", "find"], [2, 2, 1, "", "get_all"], [2, 2, 1, "", "initialize"], [2, 2, 1, "", "list_all"], [2, 2, 1, "", "load"], [2, 2, 1, "", "load_all"], [2, 2, 1, "", "load_all_async"], [2, 2, 1, "", "load_async"], [2, 2, 1, "", "load_ids"], [2, 2, 1, "", "load_ids_async"], [2, 4, 1, "", "venue"]], "nautilus_trader.adapters.interactive_brokers": [[4, 0, 0, "-", "common"], [4, 0, 0, "-", "config"], [4, 0, 0, "-", "data"], [4, 0, 0, "-", "execution"], [4, 0, 0, "-", "factories"], [4, 0, 0, "-", "providers"]], "nautilus_trader.adapters.interactive_brokers.common": [[4, 1, 1, "", "ComboLeg"], [4, 1, 1, "", "ContractId"], [4, 1, 1, "", "DeltaNeutralContract"], [4, 1, 1, "", "IBContract"], [4, 1, 1, "", "IBContractDetails"], [4, 1, 1, "", "IBOrderTags"]], "nautilus_trader.adapters.interactive_brokers.common.ComboLeg": [[4, 2, 1, "", "dict"], [4, 2, 1, "", "fully_qualified_name"], [4, 2, 1, "", "json"], [4, 2, 1, "", "parse"], [4, 2, 1, "", "validate"]], "nautilus_trader.adapters.interactive_brokers.common.ContractId": [[4, 2, 1, "", "as_integer_ratio"], [4, 2, 1, "", "bit_count"], [4, 2, 1, "", "bit_length"], [4, 2, 1, "", "conjugate"], [4, 3, 1, "", "denominator"], [4, 2, 1, "", "from_bytes"], [4, 3, 1, "", "imag"], [4, 3, 1, "", "numerator"], [4, 3, 1, "", "real"], [4, 2, 1, "", "to_bytes"]], "nautilus_trader.adapters.interactive_brokers.common.DeltaNeutralContract": [[4, 2, 1, "", "dict"], [4, 2, 1, "", "fully_qualified_name"], [4, 2, 1, "", "json"], [4, 2, 1, "", "parse"], [4, 2, 1, "", "validate"]], "nautilus_trader.adapters.interactive_brokers.common.IBContract": [[4, 2, 1, "", "dict"], [4, 2, 1, "", "fully_qualified_name"], [4, 2, 1, "", "json"], [4, 2, 1, "", "parse"], [4, 2, 1, "", "validate"]], "nautilus_trader.adapters.interactive_brokers.common.IBContractDetails": [[4, 2, 1, "", "dict"], [4, 2, 1, "", "fully_qualified_name"], [4, 2, 1, "", "json"], [4, 2, 1, "", "parse"], [4, 2, 1, "", "validate"]], "nautilus_trader.adapters.interactive_brokers.common.IBOrderTags": [[4, 2, 1, "", "dict"], [4, 2, 1, "", "fully_qualified_name"], [4, 2, 1, "", "json"], [4, 2, 1, "", "parse"], [4, 2, 1, "", "validate"]], "nautilus_trader.adapters.interactive_brokers.config": [[4, 1, 1, "", "InteractiveBrokersDataClientConfig"], [4, 1, 1, "", "InteractiveBrokersExecClientConfig"], [4, 1, 1, "", "InteractiveBrokersGatewayConfig"], [4, 1, 1, "", "InteractiveBrokersInstrumentProviderConfig"]], "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersDataClientConfig": [[4, 2, 1, "", "dict"], [4, 2, 1, "", "fully_qualified_name"], [4, 2, 1, "", "json"], [4, 2, 1, "", "parse"], [4, 2, 1, "", "validate"]], "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersExecClientConfig": [[4, 2, 1, "", "dict"], [4, 2, 1, "", "fully_qualified_name"], [4, 2, 1, "", "json"], [4, 2, 1, "", "parse"], [4, 2, 1, "", "validate"]], "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersGatewayConfig": [[4, 2, 1, "", "dict"], [4, 2, 1, "", "fully_qualified_name"], [4, 2, 1, "", "json"], [4, 2, 1, "", "parse"], [4, 2, 1, "", "validate"]], "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersInstrumentProviderConfig": [[4, 2, 1, "", "dict"], [4, 2, 1, "", "fully_qualified_name"], [4, 2, 1, "", "json"], [4, 2, 1, "", "parse"], [4, 2, 1, "", "validate"]], "nautilus_trader.adapters.interactive_brokers.data": [[4, 1, 1, "", "InteractiveBrokersDataClient"]], "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient": [[4, 2, 1, "", "connect"], [4, 2, 1, "", "create_task"], [4, 2, 1, "", "degrade"], [4, 2, 1, "", "disconnect"], [4, 2, 1, "", "dispose"], [4, 2, 1, "", "fault"], [4, 2, 1, "", "fully_qualified_name"], [4, 3, 1, "", "id"], [4, 3, 1, "", "is_connected"], [4, 3, 1, "", "is_degraded"], [4, 3, 1, "", "is_disposed"], [4, 3, 1, "", "is_faulted"], [4, 3, 1, "", "is_initialized"], [4, 3, 1, "", "is_running"], [4, 3, 1, "", "is_stopped"], [4, 2, 1, "", "request"], [4, 2, 1, "", "request_bars"], [4, 2, 1, "", "request_instrument"], [4, 2, 1, "", "request_instruments"], [4, 2, 1, "", "request_quote_ticks"], [4, 2, 1, "", "request_trade_ticks"], [4, 2, 1, "", "reset"], [4, 2, 1, "", "resume"], [4, 2, 1, "", "run_after_delay"], [4, 2, 1, "", "start"], [4, 3, 1, "", "state"], [4, 2, 1, "", "stop"], [4, 2, 1, "", "subscribe"], [4, 2, 1, "", "subscribe_bars"], [4, 2, 1, "", "subscribe_instrument"], [4, 2, 1, "", "subscribe_instrument_close"], [4, 2, 1, "", "subscribe_instrument_status_updates"], [4, 2, 1, "", "subscribe_instruments"], [4, 2, 1, "", "subscribe_order_book_deltas"], [4, 2, 1, "", "subscribe_order_book_snapshots"], [4, 2, 1, "", "subscribe_quote_ticks"], [4, 2, 1, "", "subscribe_ticker"], [4, 2, 1, "", "subscribe_trade_ticks"], [4, 2, 1, "", "subscribe_venue_status_updates"], [4, 2, 1, "", "subscribed_bars"], [4, 2, 1, "", "subscribed_generic_data"], [4, 2, 1, "", "subscribed_instrument_close"], [4, 2, 1, "", "subscribed_instrument_status_updates"], [4, 2, 1, "", "subscribed_instruments"], [4, 2, 1, "", "subscribed_order_book_deltas"], [4, 2, 1, "", "subscribed_order_book_snapshots"], [4, 2, 1, "", "subscribed_quote_ticks"], [4, 2, 1, "", "subscribed_tickers"], [4, 2, 1, "", "subscribed_trade_ticks"], [4, 2, 1, "", "subscribed_venue_status_updates"], [4, 3, 1, "", "trader_id"], [4, 3, 1, "", "type"], [4, 2, 1, "", "unsubscribe"], [4, 2, 1, "", "unsubscribe_bars"], [4, 2, 1, "", "unsubscribe_instrument"], [4, 2, 1, "", "unsubscribe_instrument_close"], [4, 2, 1, "", "unsubscribe_instrument_status_updates"], [4, 2, 1, "", "unsubscribe_instruments"], [4, 2, 1, "", "unsubscribe_order_book_deltas"], [4, 2, 1, "", "unsubscribe_order_book_snapshots"], [4, 2, 1, "", "unsubscribe_quote_ticks"], [4, 2, 1, "", "unsubscribe_ticker"], [4, 2, 1, "", "unsubscribe_trade_ticks"], [4, 2, 1, "", "unsubscribe_venue_status_updates"], [4, 3, 1, "", "venue"]], "nautilus_trader.adapters.interactive_brokers.execution": [[4, 1, 1, "", "InteractiveBrokersExecutionClient"]], "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient": [[4, 3, 1, "", "account_id"], [4, 3, 1, "", "account_type"], [4, 3, 1, "", "base_currency"], [4, 2, 1, "", "cancel_all_orders"], [4, 2, 1, "", "cancel_order"], [4, 2, 1, "", "connect"], [4, 2, 1, "", "create_task"], [4, 2, 1, "", "degrade"], [4, 2, 1, "", "disconnect"], [4, 2, 1, "", "dispose"], [4, 2, 1, "", "fault"], [4, 2, 1, "", "fully_qualified_name"], [4, 2, 1, "", "generate_account_state"], [4, 2, 1, "", "generate_mass_status"], [4, 2, 1, "", "generate_order_accepted"], [4, 2, 1, "", "generate_order_cancel_rejected"], [4, 2, 1, "", "generate_order_canceled"], [4, 2, 1, "", "generate_order_expired"], [4, 2, 1, "", "generate_order_filled"], [4, 2, 1, "", "generate_order_modify_rejected"], [4, 2, 1, "", "generate_order_rejected"], [4, 2, 1, "", "generate_order_status_report"], [4, 2, 1, "", "generate_order_status_reports"], [4, 2, 1, "", "generate_order_submitted"], [4, 2, 1, "", "generate_order_triggered"], [4, 2, 1, "", "generate_order_updated"], [4, 2, 1, "", "generate_position_status_reports"], [4, 2, 1, "", "generate_trade_reports"], [4, 2, 1, "", "get_account"], [4, 3, 1, "", "id"], [4, 3, 1, "", "is_connected"], [4, 3, 1, "", "is_degraded"], [4, 3, 1, "", "is_disposed"], [4, 3, 1, "", "is_faulted"], [4, 3, 1, "", "is_initialized"], [4, 3, 1, "", "is_running"], [4, 3, 1, "", "is_stopped"], [4, 2, 1, "", "modify_order"], [4, 3, 1, "", "oms_type"], [4, 2, 1, "", "query_order"], [4, 2, 1, "", "reset"], [4, 2, 1, "", "resume"], [4, 2, 1, "", "run_after_delay"], [4, 2, 1, "", "start"], [4, 3, 1, "", "state"], [4, 2, 1, "", "stop"], [4, 2, 1, "", "submit_order"], [4, 2, 1, "", "submit_order_list"], [4, 3, 1, "", "trader_id"], [4, 3, 1, "", "type"], [4, 3, 1, "", "venue"]], "nautilus_trader.adapters.interactive_brokers.factories": [[4, 1, 1, "", "InteractiveBrokersLiveDataClientFactory"], [4, 1, 1, "", "InteractiveBrokersLiveExecClientFactory"], [4, 5, 1, "", "get_cached_ib_client"], [4, 5, 1, "", "get_cached_interactive_brokers_instrument_provider"]], "nautilus_trader.adapters.interactive_brokers.factories.InteractiveBrokersLiveDataClientFactory": [[4, 2, 1, "", "create"]], "nautilus_trader.adapters.interactive_brokers.factories.InteractiveBrokersLiveExecClientFactory": [[4, 2, 1, "", "create"]], "nautilus_trader.adapters.interactive_brokers.providers": [[4, 1, 1, "", "InteractiveBrokersInstrumentProvider"]], "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider": [[4, 2, 1, "", "add"], [4, 2, 1, "", "add_bulk"], [4, 2, 1, "", "add_currency"], [4, 4, 1, "", "count"], [4, 2, 1, "", "currencies"], [4, 2, 1, "", "currency"], [4, 2, 1, "", "find"], [4, 2, 1, "", "get_all"], [4, 2, 1, "", "initialize"], [4, 2, 1, "", "list_all"], [4, 2, 1, "", "load"], [4, 2, 1, "", "load_all"], [4, 2, 1, "", "load_all_async"], [4, 2, 1, "", "load_async"], [4, 2, 1, "", "load_ids"], [4, 2, 1, "", "load_ids_async"], [4, 4, 1, "", "venue"]], "nautilus_trader.analysis": [[5, 0, 0, "-", "analyzer"], [5, 0, 0, "-", "reporter"], [5, 0, 0, "-", "statistic"]], "nautilus_trader.analysis.analyzer": [[5, 1, 1, "", "PortfolioAnalyzer"]], "nautilus_trader.analysis.analyzer.PortfolioAnalyzer": [[5, 2, 1, "", "add_positions"], [5, 2, 1, "", "add_return"], [5, 2, 1, "", "add_trade"], [5, 2, 1, "", "calculate_statistics"], [5, 4, 1, "", "currencies"], [5, 2, 1, "", "deregister_statistic"], [5, 2, 1, "", "deregister_statistics"], [5, 2, 1, "", "get_performance_stats_general"], [5, 2, 1, "", "get_performance_stats_pnls"], [5, 2, 1, "", "get_performance_stats_returns"], [5, 2, 1, "", "get_stats_general_formatted"], [5, 2, 1, "", "get_stats_pnls_formatted"], [5, 2, 1, "", "get_stats_returns_formatted"], [5, 2, 1, "", "realized_pnls"], [5, 2, 1, "", "register_statistic"], [5, 2, 1, "", "reset"], [5, 2, 1, "", "returns"], [5, 2, 1, "", "statistic"], [5, 2, 1, "", "total_pnl"], [5, 2, 1, "", "total_pnl_percentage"]], "nautilus_trader.analysis.reporter": [[5, 1, 1, "", "ReportProvider"]], "nautilus_trader.analysis.reporter.ReportProvider": [[5, 2, 1, "", "generate_account_report"], [5, 2, 1, "", "generate_order_fills_report"], [5, 2, 1, "", "generate_orders_report"], [5, 2, 1, "", "generate_positions_report"]], "nautilus_trader.analysis.statistic": [[5, 1, 1, "", "PortfolioStatistic"]], "nautilus_trader.analysis.statistic.PortfolioStatistic": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics": [[5, 0, 0, "-", "expectancy"], [5, 0, 0, "-", "long_ratio"], [5, 0, 0, "-", "loser_avg"], [5, 0, 0, "-", "loser_max"], [5, 0, 0, "-", "loser_min"], [5, 0, 0, "-", "profit_factor"], [5, 0, 0, "-", "returns_avg"], [5, 0, 0, "-", "returns_avg_loss"], [5, 0, 0, "-", "returns_avg_win"], [5, 0, 0, "-", "returns_volatility"], [5, 0, 0, "-", "risk_return_ratio"], [5, 0, 0, "-", "sharpe_ratio"], [5, 0, 0, "-", "sortino_ratio"], [5, 0, 0, "-", "win_rate"], [5, 0, 0, "-", "winner_avg"], [5, 0, 0, "-", "winner_max"], [5, 0, 0, "-", "winner_min"]], "nautilus_trader.analysis.statistics.expectancy": [[5, 1, 1, "", "Expectancy"]], "nautilus_trader.analysis.statistics.expectancy.Expectancy": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.long_ratio": [[5, 1, 1, "", "LongRatio"]], "nautilus_trader.analysis.statistics.long_ratio.LongRatio": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.loser_avg": [[5, 1, 1, "", "AvgLoser"]], "nautilus_trader.analysis.statistics.loser_avg.AvgLoser": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.loser_max": [[5, 1, 1, "", "MaxLoser"]], "nautilus_trader.analysis.statistics.loser_max.MaxLoser": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.loser_min": [[5, 1, 1, "", "MinLoser"]], "nautilus_trader.analysis.statistics.loser_min.MinLoser": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.profit_factor": [[5, 1, 1, "", "ProfitFactor"]], "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.returns_avg": [[5, 1, 1, "", "ReturnsAverage"]], "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.returns_avg_loss": [[5, 1, 1, "", "ReturnsAverageLoss"]], "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.returns_avg_win": [[5, 1, 1, "", "ReturnsAverageWin"]], "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.returns_volatility": [[5, 1, 1, "", "ReturnsVolatility"]], "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.risk_return_ratio": [[5, 1, 1, "", "RiskReturnRatio"]], "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.sharpe_ratio": [[5, 1, 1, "", "SharpeRatio"]], "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.sortino_ratio": [[5, 1, 1, "", "SortinoRatio"]], "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.win_rate": [[5, 1, 1, "", "WinRate"]], "nautilus_trader.analysis.statistics.win_rate.WinRate": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.winner_avg": [[5, 1, 1, "", "AvgWinner"]], "nautilus_trader.analysis.statistics.winner_avg.AvgWinner": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.winner_max": [[5, 1, 1, "", "MaxWinner"]], "nautilus_trader.analysis.statistics.winner_max.MaxWinner": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.analysis.statistics.winner_min": [[5, 1, 1, "", "MinWinner"]], "nautilus_trader.analysis.statistics.winner_min.MinWinner": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 4, 1, "", "name"]], "nautilus_trader.backtest": [[6, 0, 0, "-", "auction"], [6, 0, 0, "-", "data_client"], [6, 0, 0, "-", "engine"], [6, 0, 0, "-", "exchange"], [6, 0, 0, "-", "execution_client"], [6, 0, 0, "-", "models"], [6, 0, 0, "-", "modules"], [6, 0, 0, "-", "node"], [6, 0, 0, "-", "results"]], "nautilus_trader.backtest.data_client": [[6, 1, 1, "", "BacktestDataClient"], [6, 1, 1, "", "BacktestMarketDataClient"]], "nautilus_trader.backtest.data_client.BacktestDataClient": [[6, 2, 1, "", "degrade"], [6, 2, 1, "", "dispose"], [6, 2, 1, "", "fault"], [6, 2, 1, "", "fully_qualified_name"], [6, 3, 1, "", "id"], [6, 3, 1, "", "is_connected"], [6, 3, 1, "", "is_degraded"], [6, 3, 1, "", "is_disposed"], [6, 3, 1, "", "is_faulted"], [6, 3, 1, "", "is_initialized"], [6, 3, 1, "", "is_running"], [6, 3, 1, "", "is_stopped"], [6, 2, 1, "", "request"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "resume"], [6, 2, 1, "", "start"], [6, 3, 1, "", "state"], [6, 2, 1, "", "stop"], [6, 2, 1, "", "subscribe"], [6, 2, 1, "", "subscribed_generic_data"], [6, 3, 1, "", "trader_id"], [6, 3, 1, "", "type"], [6, 2, 1, "", "unsubscribe"], [6, 3, 1, "", "venue"]], "nautilus_trader.backtest.data_client.BacktestMarketDataClient": [[6, 2, 1, "", "degrade"], [6, 2, 1, "", "dispose"], [6, 2, 1, "", "fault"], [6, 2, 1, "", "fully_qualified_name"], [6, 3, 1, "", "id"], [6, 3, 1, "", "is_connected"], [6, 3, 1, "", "is_degraded"], [6, 3, 1, "", "is_disposed"], [6, 3, 1, "", "is_faulted"], [6, 3, 1, "", "is_initialized"], [6, 3, 1, "", "is_running"], [6, 3, 1, "", "is_stopped"], [6, 2, 1, "", "request"], [6, 2, 1, "", "request_bars"], [6, 2, 1, "", "request_instrument"], [6, 2, 1, "", "request_instruments"], [6, 2, 1, "", "request_quote_ticks"], [6, 2, 1, "", "request_trade_ticks"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "resume"], [6, 2, 1, "", "start"], [6, 3, 1, "", "state"], [6, 2, 1, "", "stop"], [6, 2, 1, "", "subscribe"], [6, 2, 1, "", "subscribe_bars"], [6, 2, 1, "", "subscribe_instrument"], [6, 2, 1, "", "subscribe_instrument_close"], [6, 2, 1, "", "subscribe_instrument_status_updates"], [6, 2, 1, "", "subscribe_instruments"], [6, 2, 1, "", "subscribe_order_book_deltas"], [6, 2, 1, "", "subscribe_order_book_snapshots"], [6, 2, 1, "", "subscribe_quote_ticks"], [6, 2, 1, "", "subscribe_ticker"], [6, 2, 1, "", "subscribe_trade_ticks"], [6, 2, 1, "", "subscribe_venue_status_updates"], [6, 2, 1, "", "subscribed_bars"], [6, 2, 1, "", "subscribed_generic_data"], [6, 2, 1, "", "subscribed_instrument_close"], [6, 2, 1, "", "subscribed_instrument_status_updates"], [6, 2, 1, "", "subscribed_instruments"], [6, 2, 1, "", "subscribed_order_book_deltas"], [6, 2, 1, "", "subscribed_order_book_snapshots"], [6, 2, 1, "", "subscribed_quote_ticks"], [6, 2, 1, "", "subscribed_tickers"], [6, 2, 1, "", "subscribed_trade_ticks"], [6, 2, 1, "", "subscribed_venue_status_updates"], [6, 3, 1, "", "trader_id"], [6, 3, 1, "", "type"], [6, 2, 1, "", "unsubscribe"], [6, 2, 1, "", "unsubscribe_bars"], [6, 2, 1, "", "unsubscribe_instrument"], [6, 2, 1, "", "unsubscribe_instrument_close"], [6, 2, 1, "", "unsubscribe_instrument_status_updates"], [6, 2, 1, "", "unsubscribe_instruments"], [6, 2, 1, "", "unsubscribe_order_book_deltas"], [6, 2, 1, "", "unsubscribe_order_book_snapshots"], [6, 2, 1, "", "unsubscribe_quote_ticks"], [6, 2, 1, "", "unsubscribe_ticker"], [6, 2, 1, "", "unsubscribe_trade_ticks"], [6, 2, 1, "", "unsubscribe_venue_status_updates"], [6, 3, 1, "", "venue"]], "nautilus_trader.backtest.engine": [[6, 1, 1, "", "BacktestEngine"]], "nautilus_trader.backtest.engine.BacktestEngine": [[6, 2, 1, "", "add_actor"], [6, 2, 1, "", "add_actors"], [6, 2, 1, "", "add_data"], [6, 2, 1, "", "add_exec_algorithm"], [6, 2, 1, "", "add_exec_algorithms"], [6, 2, 1, "", "add_instrument"], [6, 2, 1, "", "add_strategies"], [6, 2, 1, "", "add_strategy"], [6, 2, 1, "", "add_venue"], [6, 3, 1, "", "backtest_end"], [6, 3, 1, "", "backtest_start"], [6, 3, 1, "", "cache"], [6, 2, 1, "", "change_fill_model"], [6, 2, 1, "", "clear_actors"], [6, 2, 1, "", "clear_data"], [6, 2, 1, "", "clear_exec_algorthms"], [6, 2, 1, "", "clear_strategies"], [6, 3, 1, "", "data"], [6, 2, 1, "", "dispose"], [6, 2, 1, "", "dump_pickled_data"], [6, 2, 1, "", "end"], [6, 2, 1, "", "get_result"], [6, 3, 1, "", "instance_id"], [6, 3, 1, "", "iteration"], [6, 3, 1, "", "kernel"], [6, 2, 1, "", "list_venues"], [6, 2, 1, "", "load_pickled_data"], [6, 3, 1, "", "machine_id"], [6, 3, 1, "", "portfolio"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "run"], [6, 3, 1, "", "run_config_id"], [6, 3, 1, "", "run_finished"], [6, 3, 1, "", "run_id"], [6, 3, 1, "", "run_started"], [6, 3, 1, "", "trader"], [6, 3, 1, "", "trader_id"]], "nautilus_trader.backtest.exchange": [[6, 1, 1, "", "SimulatedExchange"]], "nautilus_trader.backtest.exchange.SimulatedExchange": [[6, 3, 1, "", "account_type"], [6, 2, 1, "", "add_instrument"], [6, 2, 1, "", "adjust_account"], [6, 3, 1, "", "bar_execution"], [6, 3, 1, "", "base_currency"], [6, 2, 1, "", "best_ask_price"], [6, 2, 1, "", "best_bid_price"], [6, 3, 1, "", "book_type"], [6, 3, 1, "", "cache"], [6, 3, 1, "", "default_leverage"], [6, 3, 1, "", "exec_client"], [6, 3, 1, "", "fill_model"], [6, 2, 1, "", "get_account"], [6, 2, 1, "", "get_book"], [6, 2, 1, "", "get_books"], [6, 2, 1, "", "get_matching_engine"], [6, 2, 1, "", "get_matching_engines"], [6, 2, 1, "", "get_open_ask_orders"], [6, 2, 1, "", "get_open_bid_orders"], [6, 2, 1, "", "get_open_orders"], [6, 3, 1, "", "id"], [6, 2, 1, "", "initialize_account"], [6, 3, 1, "", "instruments"], [6, 3, 1, "", "is_frozen_account"], [6, 3, 1, "", "latency_model"], [6, 3, 1, "", "leverages"], [6, 3, 1, "", "modules"], [6, 3, 1, "", "msgbus"], [6, 3, 1, "", "oms_type"], [6, 2, 1, "", "process"], [6, 2, 1, "", "process_bar"], [6, 2, 1, "", "process_instrument_status"], [6, 2, 1, "", "process_order_book_delta"], [6, 2, 1, "", "process_order_book_deltas"], [6, 2, 1, "", "process_quote_tick"], [6, 2, 1, "", "process_trade_tick"], [6, 2, 1, "", "process_venue_status"], [6, 2, 1, "", "register_client"], [6, 3, 1, "", "reject_stop_orders"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "send"], [6, 2, 1, "", "set_fill_model"], [6, 2, 1, "", "set_latency_model"], [6, 3, 1, "", "starting_balances"], [6, 3, 1, "", "support_gtd_orders"], [6, 3, 1, "", "use_random_ids"]], "nautilus_trader.backtest.execution_client": [[6, 1, 1, "", "BacktestExecClient"]], "nautilus_trader.backtest.execution_client.BacktestExecClient": [[6, 3, 1, "", "account_id"], [6, 3, 1, "", "account_type"], [6, 3, 1, "", "base_currency"], [6, 2, 1, "", "cancel_all_orders"], [6, 2, 1, "", "cancel_order"], [6, 2, 1, "", "degrade"], [6, 2, 1, "", "dispose"], [6, 2, 1, "", "fault"], [6, 2, 1, "", "fully_qualified_name"], [6, 2, 1, "", "generate_account_state"], [6, 2, 1, "", "generate_order_accepted"], [6, 2, 1, "", "generate_order_cancel_rejected"], [6, 2, 1, "", "generate_order_canceled"], [6, 2, 1, "", "generate_order_expired"], [6, 2, 1, "", "generate_order_filled"], [6, 2, 1, "", "generate_order_modify_rejected"], [6, 2, 1, "", "generate_order_rejected"], [6, 2, 1, "", "generate_order_submitted"], [6, 2, 1, "", "generate_order_triggered"], [6, 2, 1, "", "generate_order_updated"], [6, 2, 1, "", "get_account"], [6, 3, 1, "", "id"], [6, 3, 1, "", "is_connected"], [6, 3, 1, "", "is_degraded"], [6, 3, 1, "", "is_disposed"], [6, 3, 1, "", "is_faulted"], [6, 3, 1, "", "is_initialized"], [6, 3, 1, "", "is_running"], [6, 3, 1, "", "is_stopped"], [6, 2, 1, "", "modify_order"], [6, 3, 1, "", "oms_type"], [6, 2, 1, "", "query_order"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "resume"], [6, 2, 1, "", "start"], [6, 3, 1, "", "state"], [6, 2, 1, "", "stop"], [6, 2, 1, "", "submit_order"], [6, 2, 1, "", "submit_order_list"], [6, 3, 1, "", "trader_id"], [6, 3, 1, "", "type"], [6, 3, 1, "", "venue"]], "nautilus_trader.backtest.models": [[6, 1, 1, "", "FillModel"], [6, 1, 1, "", "LatencyModel"]], "nautilus_trader.backtest.models.FillModel": [[6, 2, 1, "", "is_limit_filled"], [6, 2, 1, "", "is_slipped"], [6, 2, 1, "", "is_stop_filled"], [6, 3, 1, "", "prob_fill_on_limit"], [6, 3, 1, "", "prob_fill_on_stop"], [6, 3, 1, "", "prob_slippage"]], "nautilus_trader.backtest.models.LatencyModel": [[6, 3, 1, "", "base_latency_nanos"], [6, 3, 1, "", "cancel_latency_nanos"], [6, 3, 1, "", "insert_latency_nanos"], [6, 3, 1, "", "update_latency_nanos"]], "nautilus_trader.backtest.modules": [[6, 1, 1, "", "FXRolloverInterestConfig"], [6, 1, 1, "", "FXRolloverInterestModule"], [6, 1, 1, "", "SimulationModule"], [6, 1, 1, "", "SimulationModuleConfig"]], "nautilus_trader.backtest.modules.FXRolloverInterestConfig": [[6, 2, 1, "", "dict"], [6, 2, 1, "", "fully_qualified_name"], [6, 2, 1, "", "json"], [6, 2, 1, "", "parse"], [6, 2, 1, "", "validate"]], "nautilus_trader.backtest.modules.FXRolloverInterestModule": [[6, 2, 1, "", "add_synthetic"], [6, 3, 1, "", "cache"], [6, 3, 1, "", "clock"], [6, 3, 1, "", "config"], [6, 2, 1, "", "degrade"], [6, 2, 1, "", "deregister_warning_event"], [6, 2, 1, "", "dispose"], [6, 2, 1, "", "fault"], [6, 2, 1, "", "fully_qualified_name"], [6, 2, 1, "", "handle_bar"], [6, 2, 1, "", "handle_bars"], [6, 2, 1, "", "handle_data"], [6, 2, 1, "", "handle_event"], [6, 2, 1, "", "handle_historical_data"], [6, 2, 1, "", "handle_instrument"], [6, 2, 1, "", "handle_instrument_close"], [6, 2, 1, "", "handle_instrument_status_update"], [6, 2, 1, "", "handle_instruments"], [6, 2, 1, "", "handle_order_book"], [6, 2, 1, "", "handle_order_book_deltas"], [6, 2, 1, "", "handle_quote_tick"], [6, 2, 1, "", "handle_quote_ticks"], [6, 2, 1, "", "handle_ticker"], [6, 2, 1, "", "handle_trade_tick"], [6, 2, 1, "", "handle_trade_ticks"], [6, 2, 1, "", "handle_venue_status_update"], [6, 2, 1, "", "has_pending_requests"], [6, 3, 1, "", "id"], [6, 3, 1, "", "is_degraded"], [6, 3, 1, "", "is_disposed"], [6, 3, 1, "", "is_faulted"], [6, 3, 1, "", "is_initialized"], [6, 2, 1, "", "is_pending_request"], [6, 3, 1, "", "is_running"], [6, 3, 1, "", "is_stopped"], [6, 2, 1, "", "load"], [6, 3, 1, "", "log"], [6, 2, 1, "", "log_diagnostics"], [6, 3, 1, "", "msgbus"], [6, 2, 1, "", "on_bar"], [6, 2, 1, "", "on_data"], [6, 2, 1, "", "on_degrade"], [6, 2, 1, "", "on_dispose"], [6, 2, 1, "", "on_event"], [6, 2, 1, "", "on_fault"], [6, 2, 1, "", "on_historical_data"], [6, 2, 1, "", "on_instrument"], [6, 2, 1, "", "on_instrument_close"], [6, 2, 1, "", "on_instrument_status_update"], [6, 2, 1, "", "on_load"], [6, 2, 1, "", "on_order_book"], [6, 2, 1, "", "on_order_book_deltas"], [6, 2, 1, "", "on_quote_tick"], [6, 2, 1, "", "on_reset"], [6, 2, 1, "", "on_resume"], [6, 2, 1, "", "on_save"], [6, 2, 1, "", "on_start"], [6, 2, 1, "", "on_stop"], [6, 2, 1, "", "on_ticker"], [6, 2, 1, "", "on_trade_tick"], [6, 2, 1, "", "on_venue_status_update"], [6, 2, 1, "", "pending_requests"], [6, 2, 1, "", "process"], [6, 2, 1, "", "publish_data"], [6, 2, 1, "", "publish_signal"], [6, 2, 1, "", "register_base"], [6, 2, 1, "", "register_venue"], [6, 2, 1, "", "register_warning_event"], [6, 2, 1, "", "request_bars"], [6, 2, 1, "", "request_data"], [6, 2, 1, "", "request_instrument"], [6, 2, 1, "", "request_instruments"], [6, 2, 1, "", "request_quote_ticks"], [6, 2, 1, "", "request_trade_ticks"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "resume"], [6, 2, 1, "", "save"], [6, 2, 1, "", "start"], [6, 3, 1, "", "state"], [6, 2, 1, "", "stop"], [6, 2, 1, "", "subscribe_bars"], [6, 2, 1, "", "subscribe_data"], [6, 2, 1, "", "subscribe_instrument"], [6, 2, 1, "", "subscribe_instrument_close"], [6, 2, 1, "", "subscribe_instrument_status_updates"], [6, 2, 1, "", "subscribe_instruments"], [6, 2, 1, "", "subscribe_order_book_deltas"], [6, 2, 1, "", "subscribe_order_book_snapshots"], [6, 2, 1, "", "subscribe_quote_ticks"], [6, 2, 1, "", "subscribe_ticker"], [6, 2, 1, "", "subscribe_trade_ticks"], [6, 2, 1, "", "subscribe_venue_status_updates"], [6, 2, 1, "", "to_importable_config"], [6, 3, 1, "", "trader_id"], [6, 3, 1, "", "type"], [6, 2, 1, "", "unsubscribe_bars"], [6, 2, 1, "", "unsubscribe_data"], [6, 2, 1, "", "unsubscribe_instrument"], [6, 2, 1, "", "unsubscribe_instrument_status_updates"], [6, 2, 1, "", "unsubscribe_instruments"], [6, 2, 1, "", "unsubscribe_order_book_deltas"], [6, 2, 1, "", "unsubscribe_order_book_snapshots"], [6, 2, 1, "", "unsubscribe_quote_ticks"], [6, 2, 1, "", "unsubscribe_ticker"], [6, 2, 1, "", "unsubscribe_trade_ticks"], [6, 2, 1, "", "unsubscribe_venue_status_updates"], [6, 2, 1, "", "update_synthetic"]], "nautilus_trader.backtest.modules.SimulationModule": [[6, 2, 1, "", "add_synthetic"], [6, 3, 1, "", "cache"], [6, 3, 1, "", "clock"], [6, 3, 1, "", "config"], [6, 2, 1, "", "degrade"], [6, 2, 1, "", "deregister_warning_event"], [6, 2, 1, "", "dispose"], [6, 2, 1, "", "fault"], [6, 2, 1, "", "fully_qualified_name"], [6, 2, 1, "", "handle_bar"], [6, 2, 1, "", "handle_bars"], [6, 2, 1, "", "handle_data"], [6, 2, 1, "", "handle_event"], [6, 2, 1, "", "handle_historical_data"], [6, 2, 1, "", "handle_instrument"], [6, 2, 1, "", "handle_instrument_close"], [6, 2, 1, "", "handle_instrument_status_update"], [6, 2, 1, "", "handle_instruments"], [6, 2, 1, "", "handle_order_book"], [6, 2, 1, "", "handle_order_book_deltas"], [6, 2, 1, "", "handle_quote_tick"], [6, 2, 1, "", "handle_quote_ticks"], [6, 2, 1, "", "handle_ticker"], [6, 2, 1, "", "handle_trade_tick"], [6, 2, 1, "", "handle_trade_ticks"], [6, 2, 1, "", "handle_venue_status_update"], [6, 2, 1, "", "has_pending_requests"], [6, 3, 1, "", "id"], [6, 3, 1, "", "is_degraded"], [6, 3, 1, "", "is_disposed"], [6, 3, 1, "", "is_faulted"], [6, 3, 1, "", "is_initialized"], [6, 2, 1, "", "is_pending_request"], [6, 3, 1, "", "is_running"], [6, 3, 1, "", "is_stopped"], [6, 2, 1, "", "load"], [6, 3, 1, "", "log"], [6, 2, 1, "", "log_diagnostics"], [6, 3, 1, "", "msgbus"], [6, 2, 1, "", "on_bar"], [6, 2, 1, "", "on_data"], [6, 2, 1, "", "on_degrade"], [6, 2, 1, "", "on_dispose"], [6, 2, 1, "", "on_event"], [6, 2, 1, "", "on_fault"], [6, 2, 1, "", "on_historical_data"], [6, 2, 1, "", "on_instrument"], [6, 2, 1, "", "on_instrument_close"], [6, 2, 1, "", "on_instrument_status_update"], [6, 2, 1, "", "on_load"], [6, 2, 1, "", "on_order_book"], [6, 2, 1, "", "on_order_book_deltas"], [6, 2, 1, "", "on_quote_tick"], [6, 2, 1, "", "on_reset"], [6, 2, 1, "", "on_resume"], [6, 2, 1, "", "on_save"], [6, 2, 1, "", "on_start"], [6, 2, 1, "", "on_stop"], [6, 2, 1, "", "on_ticker"], [6, 2, 1, "", "on_trade_tick"], [6, 2, 1, "", "on_venue_status_update"], [6, 2, 1, "", "pending_requests"], [6, 2, 1, "", "process"], [6, 2, 1, "", "publish_data"], [6, 2, 1, "", "publish_signal"], [6, 2, 1, "", "register_base"], [6, 2, 1, "", "register_venue"], [6, 2, 1, "", "register_warning_event"], [6, 2, 1, "", "request_bars"], [6, 2, 1, "", "request_data"], [6, 2, 1, "", "request_instrument"], [6, 2, 1, "", "request_instruments"], [6, 2, 1, "", "request_quote_ticks"], [6, 2, 1, "", "request_trade_ticks"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "resume"], [6, 2, 1, "", "save"], [6, 2, 1, "", "start"], [6, 3, 1, "", "state"], [6, 2, 1, "", "stop"], [6, 2, 1, "", "subscribe_bars"], [6, 2, 1, "", "subscribe_data"], [6, 2, 1, "", "subscribe_instrument"], [6, 2, 1, "", "subscribe_instrument_close"], [6, 2, 1, "", "subscribe_instrument_status_updates"], [6, 2, 1, "", "subscribe_instruments"], [6, 2, 1, "", "subscribe_order_book_deltas"], [6, 2, 1, "", "subscribe_order_book_snapshots"], [6, 2, 1, "", "subscribe_quote_ticks"], [6, 2, 1, "", "subscribe_ticker"], [6, 2, 1, "", "subscribe_trade_ticks"], [6, 2, 1, "", "subscribe_venue_status_updates"], [6, 2, 1, "", "to_importable_config"], [6, 3, 1, "", "trader_id"], [6, 3, 1, "", "type"], [6, 2, 1, "", "unsubscribe_bars"], [6, 2, 1, "", "unsubscribe_data"], [6, 2, 1, "", "unsubscribe_instrument"], [6, 2, 1, "", "unsubscribe_instrument_status_updates"], [6, 2, 1, "", "unsubscribe_instruments"], [6, 2, 1, "", "unsubscribe_order_book_deltas"], [6, 2, 1, "", "unsubscribe_order_book_snapshots"], [6, 2, 1, "", "unsubscribe_quote_ticks"], [6, 2, 1, "", "unsubscribe_ticker"], [6, 2, 1, "", "unsubscribe_trade_ticks"], [6, 2, 1, "", "unsubscribe_venue_status_updates"], [6, 2, 1, "", "update_synthetic"]], "nautilus_trader.backtest.modules.SimulationModuleConfig": [[6, 2, 1, "", "dict"], [6, 2, 1, "", "fully_qualified_name"], [6, 2, 1, "", "json"], [6, 2, 1, "", "parse"], [6, 2, 1, "", "validate"]], "nautilus_trader.backtest.node": [[6, 1, 1, "", "BacktestNode"]], "nautilus_trader.backtest.node.BacktestNode": [[6, 4, 1, "", "configs"], [6, 2, 1, "", "get_engine"], [6, 2, 1, "", "get_engines"], [6, 2, 1, "", "run"]], "nautilus_trader.backtest.results": [[6, 1, 1, "", "BacktestResult"], [6, 5, 1, "", "ensure_plotting"]], "nautilus_trader.cache": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "cache"], [7, 0, 0, "-", "database"]], "nautilus_trader.cache.base": [[7, 1, 1, "", "CacheFacade"]], "nautilus_trader.cache.base.CacheFacade": [[7, 2, 1, "", "account"], [7, 2, 1, "", "account_for_venue"], [7, 2, 1, "", "account_id"], [7, 2, 1, "", "accounts"], [7, 2, 1, "", "actor_ids"], [7, 2, 1, "", "add"], [7, 2, 1, "", "bar"], [7, 2, 1, "", "bar_count"], [7, 2, 1, "", "bars"], [7, 2, 1, "", "book_update_count"], [7, 2, 1, "", "client_order_id"], [7, 2, 1, "", "client_order_ids"], [7, 2, 1, "", "client_order_ids_closed"], [7, 2, 1, "", "client_order_ids_emulated"], [7, 2, 1, "", "client_order_ids_inflight"], [7, 2, 1, "", "client_order_ids_open"], [7, 2, 1, "", "exec_algorithm_ids"], [7, 2, 1, "", "get"], [7, 2, 1, "", "get_xrate"], [7, 2, 1, "", "has_bars"], [7, 2, 1, "", "has_order_book"], [7, 2, 1, "", "has_quote_ticks"], [7, 2, 1, "", "has_tickers"], [7, 2, 1, "", "has_trade_ticks"], [7, 2, 1, "", "instrument"], [7, 2, 1, "", "instrument_ids"], [7, 2, 1, "", "instruments"], [7, 2, 1, "", "is_order_closed"], [7, 2, 1, "", "is_order_emulated"], [7, 2, 1, "", "is_order_inflight"], [7, 2, 1, "", "is_order_open"], [7, 2, 1, "", "is_position_closed"], [7, 2, 1, "", "is_position_open"], [7, 2, 1, "", "order"], [7, 2, 1, "", "order_book"], [7, 2, 1, "", "order_exists"], [7, 2, 1, "", "order_list"], [7, 2, 1, "", "order_list_exists"], [7, 2, 1, "", "order_list_ids"], [7, 2, 1, "", "order_lists"], [7, 2, 1, "", "orders"], [7, 2, 1, "", "orders_closed"], [7, 2, 1, "", "orders_closed_count"], [7, 2, 1, "", "orders_emulated"], [7, 2, 1, "", "orders_emulated_count"], [7, 2, 1, "", "orders_for_exec_algorithm"], [7, 2, 1, "", "orders_for_exec_spawn"], [7, 2, 1, "", "orders_for_position"], [7, 2, 1, "", "orders_inflight"], [7, 2, 1, "", "orders_inflight_count"], [7, 2, 1, "", "orders_open"], [7, 2, 1, "", "orders_open_count"], [7, 2, 1, "", "orders_total_count"], [7, 2, 1, "", "position"], [7, 2, 1, "", "position_closed_ids"], [7, 2, 1, "", "position_exists"], [7, 2, 1, "", "position_for_order"], [7, 2, 1, "", "position_id"], [7, 2, 1, "", "position_ids"], [7, 2, 1, "", "position_open_ids"], [7, 2, 1, "", "position_snapshots"], [7, 2, 1, "", "positions"], [7, 2, 1, "", "positions_closed"], [7, 2, 1, "", "positions_closed_count"], [7, 2, 1, "", "positions_open"], [7, 2, 1, "", "positions_open_count"], [7, 2, 1, "", "positions_total_count"], [7, 2, 1, "", "price"], [7, 2, 1, "", "quote_tick"], [7, 2, 1, "", "quote_tick_count"], [7, 2, 1, "", "quote_ticks"], [7, 2, 1, "", "strategy_id_for_order"], [7, 2, 1, "", "strategy_id_for_position"], [7, 2, 1, "", "strategy_ids"], [7, 2, 1, "", "synthetic"], [7, 2, 1, "", "synthetic_ids"], [7, 2, 1, "", "synthetics"], [7, 2, 1, "", "ticker"], [7, 2, 1, "", "ticker_count"], [7, 2, 1, "", "tickers"], [7, 2, 1, "", "trade_tick"], [7, 2, 1, "", "trade_tick_count"], [7, 2, 1, "", "trade_ticks"], [7, 2, 1, "", "venue_order_id"]], "nautilus_trader.cache.cache": [[7, 1, 1, "", "Cache"]], "nautilus_trader.cache.cache.Cache": [[7, 2, 1, "", "account"], [7, 2, 1, "", "account_for_venue"], [7, 2, 1, "", "account_id"], [7, 2, 1, "", "accounts"], [7, 2, 1, "", "actor_ids"], [7, 2, 1, "", "add"], [7, 2, 1, "", "add_account"], [7, 2, 1, "", "add_bar"], [7, 2, 1, "", "add_bars"], [7, 2, 1, "", "add_currency"], [7, 2, 1, "", "add_instrument"], [7, 2, 1, "", "add_order"], [7, 2, 1, "", "add_order_book"], [7, 2, 1, "", "add_order_list"], [7, 2, 1, "", "add_position"], [7, 2, 1, "", "add_position_id"], [7, 2, 1, "", "add_quote_tick"], [7, 2, 1, "", "add_quote_ticks"], [7, 2, 1, "", "add_submit_order_command"], [7, 2, 1, "", "add_submit_order_list_command"], [7, 2, 1, "", "add_synthetic"], [7, 2, 1, "", "add_ticker"], [7, 2, 1, "", "add_trade_tick"], [7, 2, 1, "", "add_trade_ticks"], [7, 2, 1, "", "bar"], [7, 3, 1, "", "bar_capacity"], [7, 2, 1, "", "bar_count"], [7, 2, 1, "", "bars"], [7, 2, 1, "", "book_update_count"], [7, 2, 1, "", "build_index"], [7, 2, 1, "", "cache_accounts"], [7, 2, 1, "", "cache_commands"], [7, 2, 1, "", "cache_currencies"], [7, 2, 1, "", "cache_general"], [7, 2, 1, "", "cache_instruments"], [7, 2, 1, "", "cache_order_lists"], [7, 2, 1, "", "cache_orders"], [7, 2, 1, "", "cache_positions"], [7, 2, 1, "", "cache_synthetics"], [7, 2, 1, "", "check_integrity"], [7, 2, 1, "", "check_residuals"], [7, 2, 1, "", "clear_index"], [7, 2, 1, "", "client_order_id"], [7, 2, 1, "", "client_order_ids"], [7, 2, 1, "", "client_order_ids_closed"], [7, 2, 1, "", "client_order_ids_emulated"], [7, 2, 1, "", "client_order_ids_inflight"], [7, 2, 1, "", "client_order_ids_open"], [7, 2, 1, "", "delete_actor"], [7, 2, 1, "", "delete_strategy"], [7, 2, 1, "", "exec_algorithm_ids"], [7, 2, 1, "", "flush_db"], [7, 2, 1, "", "get"], [7, 2, 1, "", "get_xrate"], [7, 2, 1, "", "has_bars"], [7, 2, 1, "", "has_order_book"], [7, 2, 1, "", "has_quote_ticks"], [7, 2, 1, "", "has_tickers"], [7, 2, 1, "", "has_trade_ticks"], [7, 2, 1, "", "instrument"], [7, 2, 1, "", "instrument_ids"], [7, 2, 1, "", "instruments"], [7, 2, 1, "", "is_order_closed"], [7, 2, 1, "", "is_order_emulated"], [7, 2, 1, "", "is_order_inflight"], [7, 2, 1, "", "is_order_open"], [7, 2, 1, "", "is_position_closed"], [7, 2, 1, "", "is_position_open"], [7, 2, 1, "", "load_account"], [7, 2, 1, "", "load_actor"], [7, 2, 1, "", "load_instrument"], [7, 2, 1, "", "load_order"], [7, 2, 1, "", "load_position"], [7, 2, 1, "", "load_strategy"], [7, 2, 1, "", "load_submit_order_command"], [7, 2, 1, "", "load_submit_order_list_command"], [7, 2, 1, "", "load_synthetic"], [7, 2, 1, "", "order"], [7, 2, 1, "", "order_book"], [7, 2, 1, "", "order_exists"], [7, 2, 1, "", "order_list"], [7, 2, 1, "", "order_list_exists"], [7, 2, 1, "", "order_list_ids"], [7, 2, 1, "", "order_lists"], [7, 2, 1, "", "orders"], [7, 2, 1, "", "orders_closed"], [7, 2, 1, "", "orders_closed_count"], [7, 2, 1, "", "orders_emulated"], [7, 2, 1, "", "orders_emulated_count"], [7, 2, 1, "", "orders_for_exec_algorithm"], [7, 2, 1, "", "orders_for_exec_spawn"], [7, 2, 1, "", "orders_for_position"], [7, 2, 1, "", "orders_inflight"], [7, 2, 1, "", "orders_inflight_count"], [7, 2, 1, "", "orders_open"], [7, 2, 1, "", "orders_open_count"], [7, 2, 1, "", "orders_total_count"], [7, 2, 1, "", "position"], [7, 2, 1, "", "position_closed_ids"], [7, 2, 1, "", "position_exists"], [7, 2, 1, "", "position_for_order"], [7, 2, 1, "", "position_id"], [7, 2, 1, "", "position_ids"], [7, 2, 1, "", "position_open_ids"], [7, 2, 1, "", "position_snapshots"], [7, 2, 1, "", "positions"], [7, 2, 1, "", "positions_closed"], [7, 2, 1, "", "positions_closed_count"], [7, 2, 1, "", "positions_open"], [7, 2, 1, "", "positions_open_count"], [7, 2, 1, "", "positions_total_count"], [7, 2, 1, "", "price"], [7, 2, 1, "", "quote_tick"], [7, 2, 1, "", "quote_tick_count"], [7, 2, 1, "", "quote_ticks"], [7, 2, 1, "", "reset"], [7, 2, 1, "", "snapshot_position"], [7, 2, 1, "", "strategy_id_for_order"], [7, 2, 1, "", "strategy_id_for_position"], [7, 2, 1, "", "strategy_ids"], [7, 2, 1, "", "synthetic"], [7, 2, 1, "", "synthetic_ids"], [7, 2, 1, "", "synthetics"], [7, 3, 1, "", "tick_capacity"], [7, 2, 1, "", "ticker"], [7, 2, 1, "", "ticker_count"], [7, 2, 1, "", "tickers"], [7, 2, 1, "", "trade_tick"], [7, 2, 1, "", "trade_tick_count"], [7, 2, 1, "", "trade_ticks"], [7, 2, 1, "", "update_account"], [7, 2, 1, "", "update_actor"], [7, 2, 1, "", "update_order"], [7, 2, 1, "", "update_position"], [7, 2, 1, "", "update_strategy"], [7, 2, 1, "", "venue_order_id"]], "nautilus_trader.cache.database": [[7, 1, 1, "", "CacheDatabase"]], "nautilus_trader.cache.database.CacheDatabase": [[7, 2, 1, "", "add"], [7, 2, 1, "", "add_account"], [7, 2, 1, "", "add_currency"], [7, 2, 1, "", "add_instrument"], [7, 2, 1, "", "add_order"], [7, 2, 1, "", "add_position"], [7, 2, 1, "", "add_submit_order_command"], [7, 2, 1, "", "add_submit_order_list_command"], [7, 2, 1, "", "add_synthetic"], [7, 2, 1, "", "delete_actor"], [7, 2, 1, "", "delete_strategy"], [7, 2, 1, "", "flush"], [7, 2, 1, "", "load"], [7, 2, 1, "", "load_account"], [7, 2, 1, "", "load_accounts"], [7, 2, 1, "", "load_actor"], [7, 2, 1, "", "load_currencies"], [7, 2, 1, "", "load_currency"], [7, 2, 1, "", "load_instrument"], [7, 2, 1, "", "load_instruments"], [7, 2, 1, "", "load_order"], [7, 2, 1, "", "load_orders"], [7, 2, 1, "", "load_position"], [7, 2, 1, "", "load_positions"], [7, 2, 1, "", "load_strategy"], [7, 2, 1, "", "load_submit_order_command"], [7, 2, 1, "", "load_submit_order_commands"], [7, 2, 1, "", "load_submit_order_list_command"], [7, 2, 1, "", "load_submit_order_list_commands"], [7, 2, 1, "", "load_synthetic"], [7, 2, 1, "", "load_synthetics"], [7, 2, 1, "", "update_account"], [7, 2, 1, "", "update_actor"], [7, 2, 1, "", "update_order"], [7, 2, 1, "", "update_position"], [7, 2, 1, "", "update_strategy"]], "nautilus_trader.common": [[8, 0, 0, "-", "actor"], [8, 0, 0, "-", "clock"], [8, 0, 0, "-", "component"], [8, 0, 0, "-", "factories"], [8, 0, 0, "-", "generators"], [8, 0, 0, "-", "logging"], [8, 0, 0, "-", "providers"], [8, 0, 0, "-", "queue"], [8, 0, 0, "-", "throttler"], [8, 0, 0, "-", "timer"]], "nautilus_trader.common.actor": [[8, 1, 1, "", "Actor"]], "nautilus_trader.common.actor.Actor": [[8, 2, 1, "", "add_synthetic"], [8, 3, 1, "", "cache"], [8, 3, 1, "", "clock"], [8, 3, 1, "", "config"], [8, 2, 1, "", "degrade"], [8, 2, 1, "", "deregister_warning_event"], [8, 2, 1, "", "dispose"], [8, 2, 1, "", "fault"], [8, 2, 1, "", "fully_qualified_name"], [8, 2, 1, "", "handle_bar"], [8, 2, 1, "", "handle_bars"], [8, 2, 1, "", "handle_data"], [8, 2, 1, "", "handle_event"], [8, 2, 1, "", "handle_historical_data"], [8, 2, 1, "", "handle_instrument"], [8, 2, 1, "", "handle_instrument_close"], [8, 2, 1, "", "handle_instrument_status_update"], [8, 2, 1, "", "handle_instruments"], [8, 2, 1, "", "handle_order_book"], [8, 2, 1, "", "handle_order_book_deltas"], [8, 2, 1, "", "handle_quote_tick"], [8, 2, 1, "", "handle_quote_ticks"], [8, 2, 1, "", "handle_ticker"], [8, 2, 1, "", "handle_trade_tick"], [8, 2, 1, "", "handle_trade_ticks"], [8, 2, 1, "", "handle_venue_status_update"], [8, 2, 1, "", "has_pending_requests"], [8, 3, 1, "", "id"], [8, 3, 1, "", "is_degraded"], [8, 3, 1, "", "is_disposed"], [8, 3, 1, "", "is_faulted"], [8, 3, 1, "", "is_initialized"], [8, 2, 1, "", "is_pending_request"], [8, 3, 1, "", "is_running"], [8, 3, 1, "", "is_stopped"], [8, 2, 1, "", "load"], [8, 3, 1, "", "log"], [8, 3, 1, "", "msgbus"], [8, 2, 1, "", "on_bar"], [8, 2, 1, "", "on_data"], [8, 2, 1, "", "on_degrade"], [8, 2, 1, "", "on_dispose"], [8, 2, 1, "", "on_event"], [8, 2, 1, "", "on_fault"], [8, 2, 1, "", "on_historical_data"], [8, 2, 1, "", "on_instrument"], [8, 2, 1, "", "on_instrument_close"], [8, 2, 1, "", "on_instrument_status_update"], [8, 2, 1, "", "on_load"], [8, 2, 1, "", "on_order_book"], [8, 2, 1, "", "on_order_book_deltas"], [8, 2, 1, "", "on_quote_tick"], [8, 2, 1, "", "on_reset"], [8, 2, 1, "", "on_resume"], [8, 2, 1, "", "on_save"], [8, 2, 1, "", "on_start"], [8, 2, 1, "", "on_stop"], [8, 2, 1, "", "on_ticker"], [8, 2, 1, "", "on_trade_tick"], [8, 2, 1, "", "on_venue_status_update"], [8, 2, 1, "", "pending_requests"], [8, 2, 1, "", "publish_data"], [8, 2, 1, "", "publish_signal"], [8, 2, 1, "", "register_base"], [8, 2, 1, "", "register_warning_event"], [8, 2, 1, "", "request_bars"], [8, 2, 1, "", "request_data"], [8, 2, 1, "", "request_instrument"], [8, 2, 1, "", "request_instruments"], [8, 2, 1, "", "request_quote_ticks"], [8, 2, 1, "", "request_trade_ticks"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "resume"], [8, 2, 1, "", "save"], [8, 2, 1, "", "start"], [8, 3, 1, "", "state"], [8, 2, 1, "", "stop"], [8, 2, 1, "", "subscribe_bars"], [8, 2, 1, "", "subscribe_data"], [8, 2, 1, "", "subscribe_instrument"], [8, 2, 1, "", "subscribe_instrument_close"], [8, 2, 1, "", "subscribe_instrument_status_updates"], [8, 2, 1, "", "subscribe_instruments"], [8, 2, 1, "", "subscribe_order_book_deltas"], [8, 2, 1, "", "subscribe_order_book_snapshots"], [8, 2, 1, "", "subscribe_quote_ticks"], [8, 2, 1, "", "subscribe_ticker"], [8, 2, 1, "", "subscribe_trade_ticks"], [8, 2, 1, "", "subscribe_venue_status_updates"], [8, 2, 1, "", "to_importable_config"], [8, 3, 1, "", "trader_id"], [8, 3, 1, "", "type"], [8, 2, 1, "", "unsubscribe_bars"], [8, 2, 1, "", "unsubscribe_data"], [8, 2, 1, "", "unsubscribe_instrument"], [8, 2, 1, "", "unsubscribe_instrument_status_updates"], [8, 2, 1, "", "unsubscribe_instruments"], [8, 2, 1, "", "unsubscribe_order_book_deltas"], [8, 2, 1, "", "unsubscribe_order_book_snapshots"], [8, 2, 1, "", "unsubscribe_quote_ticks"], [8, 2, 1, "", "unsubscribe_ticker"], [8, 2, 1, "", "unsubscribe_trade_ticks"], [8, 2, 1, "", "unsubscribe_venue_status_updates"], [8, 2, 1, "", "update_synthetic"]], "nautilus_trader.common.clock": [[8, 1, 1, "", "Clock"], [8, 1, 1, "", "LiveClock"], [8, 1, 1, "", "TestClock"]], "nautilus_trader.common.clock.Clock": [[8, 2, 1, "", "cancel_timer"], [8, 2, 1, "", "cancel_timers"], [8, 2, 1, "", "local_now"], [8, 2, 1, "", "next_time_ns"], [8, 2, 1, "", "register_default_handler"], [8, 2, 1, "", "set_time_alert"], [8, 2, 1, "", "set_time_alert_ns"], [8, 2, 1, "", "set_timer"], [8, 2, 1, "", "set_timer_ns"], [8, 3, 1, "", "timer_count"], [8, 3, 1, "", "timer_names"], [8, 2, 1, "", "timestamp"], [8, 2, 1, "", "timestamp_ms"], [8, 2, 1, "", "timestamp_ns"], [8, 2, 1, "", "utc_now"]], "nautilus_trader.common.clock.LiveClock": [[8, 2, 1, "", "cancel_timer"], [8, 2, 1, "", "cancel_timers"], [8, 2, 1, "", "local_now"], [8, 2, 1, "", "next_time_ns"], [8, 2, 1, "", "register_default_handler"], [8, 2, 1, "", "set_time_alert"], [8, 2, 1, "", "set_time_alert_ns"], [8, 2, 1, "", "set_timer"], [8, 2, 1, "", "set_timer_ns"], [8, 3, 1, "", "timer_count"], [8, 3, 1, "", "timer_names"], [8, 2, 1, "", "timestamp"], [8, 2, 1, "", "timestamp_ms"], [8, 2, 1, "", "timestamp_ns"], [8, 2, 1, "", "utc_now"]], "nautilus_trader.common.clock.TestClock": [[8, 2, 1, "", "advance_time"], [8, 2, 1, "", "cancel_timer"], [8, 2, 1, "", "cancel_timers"], [8, 2, 1, "", "local_now"], [8, 2, 1, "", "next_time_ns"], [8, 2, 1, "", "register_default_handler"], [8, 2, 1, "", "set_time"], [8, 2, 1, "", "set_time_alert"], [8, 2, 1, "", "set_time_alert_ns"], [8, 2, 1, "", "set_timer"], [8, 2, 1, "", "set_timer_ns"], [8, 3, 1, "", "timer_count"], [8, 3, 1, "", "timer_names"], [8, 2, 1, "", "timestamp"], [8, 2, 1, "", "timestamp_ms"], [8, 2, 1, "", "timestamp_ns"], [8, 2, 1, "", "utc_now"]], "nautilus_trader.common.component": [[8, 1, 1, "", "Component"], [8, 1, 1, "", "ComponentFSMFactory"]], "nautilus_trader.common.component.Component": [[8, 2, 1, "", "degrade"], [8, 2, 1, "", "dispose"], [8, 2, 1, "", "fault"], [8, 2, 1, "", "fully_qualified_name"], [8, 3, 1, "", "id"], [8, 3, 1, "", "is_degraded"], [8, 3, 1, "", "is_disposed"], [8, 3, 1, "", "is_faulted"], [8, 3, 1, "", "is_initialized"], [8, 3, 1, "", "is_running"], [8, 3, 1, "", "is_stopped"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "resume"], [8, 2, 1, "", "start"], [8, 3, 1, "", "state"], [8, 2, 1, "", "stop"], [8, 3, 1, "", "trader_id"], [8, 3, 1, "", "type"]], "nautilus_trader.common.component.ComponentFSMFactory": [[8, 2, 1, "", "get_state_transition_table"]], "nautilus_trader.common.factories": [[8, 1, 1, "", "OrderFactory"]], "nautilus_trader.common.factories.OrderFactory": [[8, 2, 1, "", "bracket"], [8, 2, 1, "", "create_list"], [8, 2, 1, "", "generate_client_order_id"], [8, 2, 1, "", "generate_order_list_id"], [8, 2, 1, "", "limit"], [8, 2, 1, "", "limit_if_touched"], [8, 2, 1, "", "market"], [8, 2, 1, "", "market_if_touched"], [8, 2, 1, "", "market_to_limit"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "set_client_order_id_count"], [8, 2, 1, "", "set_order_list_id_count"], [8, 2, 1, "", "stop_limit"], [8, 2, 1, "", "stop_market"], [8, 3, 1, "", "strategy_id"], [8, 3, 1, "", "trader_id"], [8, 2, 1, "", "trailing_stop_limit"], [8, 2, 1, "", "trailing_stop_market"]], "nautilus_trader.common.generators": [[8, 1, 1, "", "ClientOrderIdGenerator"], [8, 1, 1, "", "IdentifierGenerator"], [8, 1, 1, "", "OrderListIdGenerator"], [8, 1, 1, "", "PositionIdGenerator"]], "nautilus_trader.common.generators.ClientOrderIdGenerator": [[8, 3, 1, "", "count"], [8, 2, 1, "", "generate"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "set_count"]], "nautilus_trader.common.generators.OrderListIdGenerator": [[8, 3, 1, "", "count"], [8, 2, 1, "", "generate"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "set_count"]], "nautilus_trader.common.generators.PositionIdGenerator": [[8, 2, 1, "", "generate"], [8, 2, 1, "", "get_count"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "set_count"]], "nautilus_trader.common.logging": [[8, 1, 1, "", "Logger"], [8, 1, 1, "", "LoggerAdapter"], [8, 5, 1, "", "log_memory"], [8, 5, 1, "", "nautilus_header"]], "nautilus_trader.common.logging.Logger": [[8, 2, 1, "", "change_clock"], [8, 3, 1, "", "instance_id"], [8, 3, 1, "", "is_bypassed"], [8, 3, 1, "", "machine_id"], [8, 3, 1, "", "trader_id"]], "nautilus_trader.common.logging.LoggerAdapter": [[8, 3, 1, "", "component"], [8, 2, 1, "", "critical"], [8, 2, 1, "", "debug"], [8, 2, 1, "", "error"], [8, 2, 1, "", "exception"], [8, 2, 1, "", "get_logger"], [8, 2, 1, "", "info"], [8, 3, 1, "", "instance_id"], [8, 3, 1, "", "is_bypassed"], [8, 3, 1, "", "machine_id"], [8, 3, 1, "", "trader_id"], [8, 2, 1, "", "warning"]], "nautilus_trader.common.providers": [[8, 1, 1, "", "InstrumentProvider"]], "nautilus_trader.common.providers.InstrumentProvider": [[8, 2, 1, "", "add"], [8, 2, 1, "", "add_bulk"], [8, 2, 1, "", "add_currency"], [8, 4, 1, "", "count"], [8, 2, 1, "", "currencies"], [8, 2, 1, "", "currency"], [8, 2, 1, "", "find"], [8, 2, 1, "", "get_all"], [8, 2, 1, "", "initialize"], [8, 2, 1, "", "list_all"], [8, 2, 1, "", "load"], [8, 2, 1, "", "load_all"], [8, 2, 1, "", "load_all_async"], [8, 2, 1, "", "load_async"], [8, 2, 1, "", "load_ids"], [8, 2, 1, "", "load_ids_async"], [8, 4, 1, "", "venue"]], "nautilus_trader.common.queue": [[8, 1, 1, "", "Queue"]], "nautilus_trader.common.queue.Queue": [[8, 3, 1, "", "count"], [8, 2, 1, "", "empty"], [8, 2, 1, "", "full"], [8, 2, 1, "", "get"], [8, 2, 1, "", "get_nowait"], [8, 3, 1, "", "maxsize"], [8, 2, 1, "", "peek_back"], [8, 2, 1, "", "peek_front"], [8, 2, 1, "", "peek_index"], [8, 2, 1, "", "put"], [8, 2, 1, "", "put_nowait"], [8, 2, 1, "", "qsize"], [8, 2, 1, "", "to_list"]], "nautilus_trader.common.throttler": [[8, 1, 1, "", "Throttler"]], "nautilus_trader.common.throttler.Throttler": [[8, 3, 1, "", "interval"], [8, 3, 1, "", "is_limiting"], [8, 3, 1, "", "limit"], [8, 3, 1, "", "name"], [8, 3, 1, "", "qsize"], [8, 3, 1, "", "recv_count"], [8, 2, 1, "", "send"], [8, 3, 1, "", "sent_count"], [8, 2, 1, "", "used"]], "nautilus_trader.common.timer": [[8, 1, 1, "", "LiveTimer"], [8, 1, 1, "", "LoopTimer"], [8, 1, 1, "", "ThreadTimer"], [8, 1, 1, "", "TimeEvent"], [8, 1, 1, "", "TimeEventHandler"]], "nautilus_trader.common.timer.LiveTimer": [[8, 3, 1, "", "callback"], [8, 2, 1, "", "cancel"], [8, 3, 1, "", "interval_ns"], [8, 3, 1, "", "is_expired"], [8, 2, 1, "", "iterate_next_time"], [8, 3, 1, "", "name"], [8, 3, 1, "", "next_time_ns"], [8, 2, 1, "", "pop_event"], [8, 2, 1, "", "repeat"], [8, 3, 1, "", "start_time_ns"], [8, 3, 1, "", "stop_time_ns"]], "nautilus_trader.common.timer.LoopTimer": [[8, 3, 1, "", "callback"], [8, 2, 1, "", "cancel"], [8, 3, 1, "", "interval_ns"], [8, 3, 1, "", "is_expired"], [8, 2, 1, "", "iterate_next_time"], [8, 3, 1, "", "name"], [8, 3, 1, "", "next_time_ns"], [8, 2, 1, "", "pop_event"], [8, 2, 1, "", "repeat"], [8, 3, 1, "", "start_time_ns"], [8, 3, 1, "", "stop_time_ns"]], "nautilus_trader.common.timer.ThreadTimer": [[8, 3, 1, "", "callback"], [8, 2, 1, "", "cancel"], [8, 3, 1, "", "interval_ns"], [8, 3, 1, "", "is_expired"], [8, 2, 1, "", "iterate_next_time"], [8, 3, 1, "", "name"], [8, 3, 1, "", "next_time_ns"], [8, 2, 1, "", "pop_event"], [8, 2, 1, "", "repeat"], [8, 3, 1, "", "start_time_ns"], [8, 3, 1, "", "stop_time_ns"]], "nautilus_trader.common.timer.TimeEvent": [[8, 3, 1, "", "id"], [8, 3, 1, "", "name"], [8, 3, 1, "", "ts_event"], [8, 3, 1, "", "ts_init"]], "nautilus_trader.common.timer.TimeEventHandler": [[8, 3, 1, "", "event"], [8, 2, 1, "", "handle"]], "nautilus_trader.config": [[9, 0, 0, "-", "backtest"], [9, 0, 0, "-", "common"], [9, 0, 0, "-", "live"]], "nautilus_trader.config.backtest": [[9, 1, 1, "", "BacktestDataConfig"], [9, 1, 1, "", "BacktestEngineConfig"], [9, 1, 1, "", "BacktestRunConfig"], [9, 1, 1, "", "BacktestVenueConfig"], [9, 5, 1, "", "parse_filters_expr"]], "nautilus_trader.config.backtest.BacktestDataConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.backtest.BacktestEngineConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.backtest.BacktestRunConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.backtest.BacktestVenueConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common": [[9, 1, 1, "", "ActorConfig"], [9, 1, 1, "", "ActorFactory"], [9, 1, 1, "", "CacheConfig"], [9, 1, 1, "", "CacheDatabaseConfig"], [9, 1, 1, "", "DataCatalogConfig"], [9, 1, 1, "", "DataEngineConfig"], [9, 1, 1, "", "ExecAlgorithmConfig"], [9, 1, 1, "", "ExecAlgorithmFactory"], [9, 1, 1, "", "ExecEngineConfig"], [9, 1, 1, "", "ImportableActorConfig"], [9, 1, 1, "", "ImportableConfig"], [9, 1, 1, "", "ImportableExecAlgorithmConfig"], [9, 1, 1, "", "ImportableFactoryConfig"], [9, 1, 1, "", "ImportableStrategyConfig"], [9, 1, 1, "", "InstrumentProviderConfig"], [9, 1, 1, "", "LoggingConfig"], [9, 1, 1, "", "NautilusConfig"], [9, 1, 1, "", "NautilusKernelConfig"], [9, 1, 1, "", "OrderEmulatorConfig"], [9, 1, 1, "", "RiskEngineConfig"], [9, 1, 1, "", "StrategyConfig"], [9, 1, 1, "", "StrategyFactory"], [9, 1, 1, "", "StreamingConfig"]], "nautilus_trader.config.common.ActorConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.ActorFactory": [[9, 2, 1, "", "create"]], "nautilus_trader.config.common.CacheConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.CacheDatabaseConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.DataCatalogConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.DataEngineConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.ExecAlgorithmConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.ExecAlgorithmFactory": [[9, 2, 1, "", "create"]], "nautilus_trader.config.common.ExecEngineConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.ImportableActorConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.ImportableConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.ImportableExecAlgorithmConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.ImportableFactoryConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.ImportableStrategyConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.InstrumentProviderConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.LoggingConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.NautilusConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.NautilusKernelConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.OrderEmulatorConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.RiskEngineConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.StrategyConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.common.StrategyFactory": [[9, 2, 1, "", "create"]], "nautilus_trader.config.common.StreamingConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.live": [[9, 1, 1, "", "LiveDataClientConfig"], [9, 1, 1, "", "LiveDataEngineConfig"], [9, 1, 1, "", "LiveExecClientConfig"], [9, 1, 1, "", "LiveExecEngineConfig"], [9, 1, 1, "", "LiveRiskEngineConfig"], [9, 1, 1, "", "RoutingConfig"], [9, 1, 1, "", "TradingNodeConfig"]], "nautilus_trader.config.live.LiveDataClientConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.live.LiveDataEngineConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.live.LiveExecClientConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.live.LiveExecEngineConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.live.LiveRiskEngineConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.live.RoutingConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.config.live.TradingNodeConfig": [[9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "parse"], [9, 2, 1, "", "validate"]], "nautilus_trader.core": [[10, 0, 0, "-", "datetime"], [10, 0, 0, "-", "fsm"], [10, 0, 0, "-", "message"], [10, 0, 0, "-", "stats"], [10, 0, 0, "-", "uuid"]], "nautilus_trader.core.datetime": [[10, 5, 1, "", "as_utc_index"], [10, 5, 1, "", "as_utc_timestamp"], [10, 5, 1, "", "dt_to_unix_nanos"], [10, 5, 1, "", "format_iso8601"], [10, 5, 1, "", "is_datetime_utc"], [10, 5, 1, "", "is_tz_aware"], [10, 5, 1, "", "is_tz_naive"], [10, 5, 1, "", "maybe_dt_to_unix_nanos"], [10, 5, 1, "", "maybe_unix_nanos_to_dt"], [10, 5, 1, "", "micros_to_nanos"], [10, 5, 1, "", "millis_to_nanos"], [10, 5, 1, "", "nanos_to_micros"], [10, 5, 1, "", "nanos_to_millis"], [10, 5, 1, "", "nanos_to_secs"], [10, 5, 1, "", "secs_to_millis"], [10, 5, 1, "", "secs_to_nanos"], [10, 5, 1, "", "unix_nanos_to_dt"]], "nautilus_trader.core.fsm": [[10, 1, 1, "", "FiniteStateMachine"], [10, 6, 1, "", "InvalidStateTrigger"]], "nautilus_trader.core.fsm.FiniteStateMachine": [[10, 3, 1, "", "state"], [10, 3, 1, "", "state_string"], [10, 2, 1, "", "trigger"]], "nautilus_trader.core.fsm.InvalidStateTrigger": [[10, 2, 1, "", "add_note"], [10, 2, 1, "", "with_traceback"]], "nautilus_trader.core.message": [[10, 1, 1, "", "Command"], [10, 1, 1, "", "Document"], [10, 1, 1, "", "Event"], [10, 1, 1, "", "Request"], [10, 1, 1, "", "Response"]], "nautilus_trader.core.message.Command": [[10, 3, 1, "", "id"], [10, 3, 1, "", "ts_init"]], "nautilus_trader.core.message.Document": [[10, 3, 1, "", "id"], [10, 3, 1, "", "ts_init"]], "nautilus_trader.core.message.Event": [[10, 3, 1, "", "id"], [10, 3, 1, "", "ts_event"], [10, 3, 1, "", "ts_init"]], "nautilus_trader.core.message.Request": [[10, 3, 1, "", "callback"], [10, 3, 1, "", "id"], [10, 3, 1, "", "ts_init"]], "nautilus_trader.core.message.Response": [[10, 3, 1, "", "correlation_id"], [10, 3, 1, "", "id"], [10, 3, 1, "", "ts_init"]], "nautilus_trader.core.stats": [[10, 5, 1, "", "basis_points_as_percentage"], [10, 5, 1, "", "fast_mad"], [10, 5, 1, "", "fast_mad_with_mean"], [10, 5, 1, "", "fast_mean"], [10, 5, 1, "", "fast_mean_iterated"], [10, 5, 1, "", "fast_std"], [10, 5, 1, "", "fast_std_with_mean"]], "nautilus_trader.core.uuid": [[10, 1, 1, "", "UUID4"]], "nautilus_trader.core.uuid.UUID4": [[10, 3, 1, "", "value"]], "nautilus_trader.data": [[11, 0, 0, "-", "aggregation"], [11, 0, 0, "-", "client"], [11, 0, 0, "-", "engine"], [11, 0, 0, "-", "messages"]], "nautilus_trader.data.aggregation": [[11, 1, 1, "", "BarAggregator"], [11, 1, 1, "", "BarBuilder"], [11, 1, 1, "", "TickBarAggregator"], [11, 1, 1, "", "TimeBarAggregator"], [11, 1, 1, "", "ValueBarAggregator"], [11, 1, 1, "", "VolumeBarAggregator"]], "nautilus_trader.data.aggregation.BarAggregator": [[11, 3, 1, "", "bar_type"], [11, 2, 1, "", "handle_quote_tick"], [11, 2, 1, "", "handle_trade_tick"]], "nautilus_trader.data.aggregation.BarBuilder": [[11, 2, 1, "", "build"], [11, 2, 1, "", "build_now"], [11, 3, 1, "", "count"], [11, 3, 1, "", "initialized"], [11, 3, 1, "", "price_precision"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "set_partial"], [11, 3, 1, "", "size_precision"], [11, 3, 1, "", "ts_last"], [11, 2, 1, "", "update"]], "nautilus_trader.data.aggregation.TickBarAggregator": [[11, 3, 1, "", "bar_type"], [11, 2, 1, "", "handle_quote_tick"], [11, 2, 1, "", "handle_trade_tick"]], "nautilus_trader.data.aggregation.TimeBarAggregator": [[11, 3, 1, "", "bar_type"], [11, 2, 1, "", "get_start_time"], [11, 2, 1, "", "handle_quote_tick"], [11, 2, 1, "", "handle_trade_tick"], [11, 3, 1, "", "interval"], [11, 3, 1, "", "interval_ns"], [11, 3, 1, "", "next_close_ns"], [11, 2, 1, "", "set_partial"], [11, 2, 1, "", "stop"]], "nautilus_trader.data.aggregation.ValueBarAggregator": [[11, 3, 1, "", "bar_type"], [11, 2, 1, "", "get_cumulative_value"], [11, 2, 1, "", "handle_quote_tick"], [11, 2, 1, "", "handle_trade_tick"]], "nautilus_trader.data.aggregation.VolumeBarAggregator": [[11, 3, 1, "", "bar_type"], [11, 2, 1, "", "handle_quote_tick"], [11, 2, 1, "", "handle_trade_tick"]], "nautilus_trader.data.client": [[11, 1, 1, "", "DataClient"], [11, 1, 1, "", "MarketDataClient"]], "nautilus_trader.data.client.DataClient": [[11, 2, 1, "", "degrade"], [11, 2, 1, "", "dispose"], [11, 2, 1, "", "fault"], [11, 2, 1, "", "fully_qualified_name"], [11, 3, 1, "", "id"], [11, 3, 1, "", "is_connected"], [11, 3, 1, "", "is_degraded"], [11, 3, 1, "", "is_disposed"], [11, 3, 1, "", "is_faulted"], [11, 3, 1, "", "is_initialized"], [11, 3, 1, "", "is_running"], [11, 3, 1, "", "is_stopped"], [11, 2, 1, "", "request"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "resume"], [11, 2, 1, "", "start"], [11, 3, 1, "", "state"], [11, 2, 1, "", "stop"], [11, 2, 1, "", "subscribe"], [11, 2, 1, "", "subscribed_generic_data"], [11, 3, 1, "", "trader_id"], [11, 3, 1, "", "type"], [11, 2, 1, "", "unsubscribe"], [11, 3, 1, "", "venue"]], "nautilus_trader.data.client.MarketDataClient": [[11, 2, 1, "", "degrade"], [11, 2, 1, "", "dispose"], [11, 2, 1, "", "fault"], [11, 2, 1, "", "fully_qualified_name"], [11, 3, 1, "", "id"], [11, 3, 1, "", "is_connected"], [11, 3, 1, "", "is_degraded"], [11, 3, 1, "", "is_disposed"], [11, 3, 1, "", "is_faulted"], [11, 3, 1, "", "is_initialized"], [11, 3, 1, "", "is_running"], [11, 3, 1, "", "is_stopped"], [11, 2, 1, "", "request"], [11, 2, 1, "", "request_bars"], [11, 2, 1, "", "request_instrument"], [11, 2, 1, "", "request_instruments"], [11, 2, 1, "", "request_quote_ticks"], [11, 2, 1, "", "request_trade_ticks"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "resume"], [11, 2, 1, "", "start"], [11, 3, 1, "", "state"], [11, 2, 1, "", "stop"], [11, 2, 1, "", "subscribe"], [11, 2, 1, "", "subscribe_bars"], [11, 2, 1, "", "subscribe_instrument"], [11, 2, 1, "", "subscribe_instrument_close"], [11, 2, 1, "", "subscribe_instrument_status_updates"], [11, 2, 1, "", "subscribe_instruments"], [11, 2, 1, "", "subscribe_order_book_deltas"], [11, 2, 1, "", "subscribe_order_book_snapshots"], [11, 2, 1, "", "subscribe_quote_ticks"], [11, 2, 1, "", "subscribe_ticker"], [11, 2, 1, "", "subscribe_trade_ticks"], [11, 2, 1, "", "subscribe_venue_status_updates"], [11, 2, 1, "", "subscribed_bars"], [11, 2, 1, "", "subscribed_generic_data"], [11, 2, 1, "", "subscribed_instrument_close"], [11, 2, 1, "", "subscribed_instrument_status_updates"], [11, 2, 1, "", "subscribed_instruments"], [11, 2, 1, "", "subscribed_order_book_deltas"], [11, 2, 1, "", "subscribed_order_book_snapshots"], [11, 2, 1, "", "subscribed_quote_ticks"], [11, 2, 1, "", "subscribed_tickers"], [11, 2, 1, "", "subscribed_trade_ticks"], [11, 2, 1, "", "subscribed_venue_status_updates"], [11, 3, 1, "", "trader_id"], [11, 3, 1, "", "type"], [11, 2, 1, "", "unsubscribe"], [11, 2, 1, "", "unsubscribe_bars"], [11, 2, 1, "", "unsubscribe_instrument"], [11, 2, 1, "", "unsubscribe_instrument_close"], [11, 2, 1, "", "unsubscribe_instrument_status_updates"], [11, 2, 1, "", "unsubscribe_instruments"], [11, 2, 1, "", "unsubscribe_order_book_deltas"], [11, 2, 1, "", "unsubscribe_order_book_snapshots"], [11, 2, 1, "", "unsubscribe_quote_ticks"], [11, 2, 1, "", "unsubscribe_ticker"], [11, 2, 1, "", "unsubscribe_trade_ticks"], [11, 2, 1, "", "unsubscribe_venue_status_updates"], [11, 3, 1, "", "venue"]], "nautilus_trader.data.engine": [[11, 1, 1, "", "DataEngine"]], "nautilus_trader.data.engine.DataEngine": [[11, 2, 1, "", "check_connected"], [11, 2, 1, "", "check_disconnected"], [11, 3, 1, "", "command_count"], [11, 2, 1, "", "connect"], [11, 3, 1, "", "data_count"], [11, 3, 1, "", "debug"], [11, 3, 1, "", "default_client"], [11, 2, 1, "", "degrade"], [11, 2, 1, "", "deregister_client"], [11, 2, 1, "", "disconnect"], [11, 2, 1, "", "dispose"], [11, 2, 1, "", "execute"], [11, 2, 1, "", "fault"], [11, 2, 1, "", "fully_qualified_name"], [11, 3, 1, "", "id"], [11, 3, 1, "", "is_degraded"], [11, 3, 1, "", "is_disposed"], [11, 3, 1, "", "is_faulted"], [11, 3, 1, "", "is_initialized"], [11, 3, 1, "", "is_running"], [11, 3, 1, "", "is_stopped"], [11, 2, 1, "", "process"], [11, 2, 1, "", "register_catalog"], [11, 2, 1, "", "register_client"], [11, 2, 1, "", "register_default_client"], [11, 2, 1, "", "register_venue_routing"], [11, 3, 1, "", "registered_clients"], [11, 2, 1, "", "request"], [11, 3, 1, "", "request_count"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "response"], [11, 3, 1, "", "response_count"], [11, 2, 1, "", "resume"], [11, 2, 1, "", "start"], [11, 3, 1, "", "state"], [11, 2, 1, "", "stop"], [11, 2, 1, "", "subscribed_bars"], [11, 2, 1, "", "subscribed_generic_data"], [11, 2, 1, "", "subscribed_instrument_close"], [11, 2, 1, "", "subscribed_instrument_status_updates"], [11, 2, 1, "", "subscribed_instruments"], [11, 2, 1, "", "subscribed_order_book_deltas"], [11, 2, 1, "", "subscribed_order_book_snapshots"], [11, 2, 1, "", "subscribed_quote_ticks"], [11, 2, 1, "", "subscribed_synthetic_quotes"], [11, 2, 1, "", "subscribed_synthetic_trades"], [11, 2, 1, "", "subscribed_tickers"], [11, 2, 1, "", "subscribed_trade_ticks"], [11, 3, 1, "", "trader_id"], [11, 3, 1, "", "type"]], "nautilus_trader.data.messages": [[11, 1, 1, "", "DataCommand"], [11, 1, 1, "", "DataRequest"], [11, 1, 1, "", "DataResponse"], [11, 1, 1, "", "Subscribe"], [11, 1, 1, "", "Unsubscribe"]], "nautilus_trader.data.messages.DataCommand": [[11, 3, 1, "", "client_id"], [11, 3, 1, "", "data_type"], [11, 3, 1, "", "id"], [11, 3, 1, "", "ts_init"], [11, 3, 1, "", "venue"]], "nautilus_trader.data.messages.DataRequest": [[11, 3, 1, "", "callback"], [11, 3, 1, "", "client_id"], [11, 3, 1, "", "data_type"], [11, 3, 1, "", "id"], [11, 3, 1, "", "ts_init"], [11, 3, 1, "", "venue"]], "nautilus_trader.data.messages.DataResponse": [[11, 3, 1, "", "client_id"], [11, 3, 1, "", "correlation_id"], [11, 3, 1, "", "data"], [11, 3, 1, "", "data_type"], [11, 3, 1, "", "id"], [11, 3, 1, "", "ts_init"], [11, 3, 1, "", "venue"]], "nautilus_trader.data.messages.Subscribe": [[11, 3, 1, "", "client_id"], [11, 3, 1, "", "data_type"], [11, 3, 1, "", "id"], [11, 3, 1, "", "ts_init"], [11, 3, 1, "", "venue"]], "nautilus_trader.data.messages.Unsubscribe": [[11, 3, 1, "", "client_id"], [11, 3, 1, "", "data_type"], [11, 3, 1, "", "id"], [11, 3, 1, "", "ts_init"], [11, 3, 1, "", "venue"]], "nautilus_trader.execution": [[12, 0, 0, "-", "algorithm"], [12, 0, 0, "-", "client"], [12, 0, 0, "-", "emulator"], [12, 0, 0, "-", "engine"], [12, 0, 0, "-", "matching_core"], [12, 0, 0, "-", "messages"], [12, 0, 0, "-", "reports"]], "nautilus_trader.execution.algorithm": [[12, 1, 1, "", "ExecAlgorithm"]], "nautilus_trader.execution.algorithm.ExecAlgorithm": [[12, 2, 1, "", "add_synthetic"], [12, 3, 1, "", "cache"], [12, 2, 1, "", "cancel_order"], [12, 3, 1, "", "clock"], [12, 3, 1, "", "config"], [12, 2, 1, "", "degrade"], [12, 2, 1, "", "deregister_warning_event"], [12, 2, 1, "", "dispose"], [12, 2, 1, "", "execute"], [12, 2, 1, "", "fault"], [12, 2, 1, "", "fully_qualified_name"], [12, 2, 1, "", "handle_bar"], [12, 2, 1, "", "handle_bars"], [12, 2, 1, "", "handle_data"], [12, 2, 1, "", "handle_event"], [12, 2, 1, "", "handle_historical_data"], [12, 2, 1, "", "handle_instrument"], [12, 2, 1, "", "handle_instrument_close"], [12, 2, 1, "", "handle_instrument_status_update"], [12, 2, 1, "", "handle_instruments"], [12, 2, 1, "", "handle_order_book"], [12, 2, 1, "", "handle_order_book_deltas"], [12, 2, 1, "", "handle_quote_tick"], [12, 2, 1, "", "handle_quote_ticks"], [12, 2, 1, "", "handle_ticker"], [12, 2, 1, "", "handle_trade_tick"], [12, 2, 1, "", "handle_trade_ticks"], [12, 2, 1, "", "handle_venue_status_update"], [12, 2, 1, "", "has_pending_requests"], [12, 3, 1, "", "id"], [12, 3, 1, "", "is_degraded"], [12, 3, 1, "", "is_disposed"], [12, 3, 1, "", "is_faulted"], [12, 3, 1, "", "is_initialized"], [12, 2, 1, "", "is_pending_request"], [12, 3, 1, "", "is_running"], [12, 3, 1, "", "is_stopped"], [12, 2, 1, "", "load"], [12, 3, 1, "", "log"], [12, 2, 1, "", "modify_order"], [12, 2, 1, "", "modify_order_in_place"], [12, 3, 1, "", "msgbus"], [12, 2, 1, "", "on_bar"], [12, 2, 1, "", "on_data"], [12, 2, 1, "", "on_degrade"], [12, 2, 1, "", "on_dispose"], [12, 2, 1, "", "on_event"], [12, 2, 1, "", "on_fault"], [12, 2, 1, "", "on_historical_data"], [12, 2, 1, "", "on_instrument"], [12, 2, 1, "", "on_instrument_close"], [12, 2, 1, "", "on_instrument_status_update"], [12, 2, 1, "", "on_load"], [12, 2, 1, "", "on_order"], [12, 2, 1, "", "on_order_book"], [12, 2, 1, "", "on_order_book_deltas"], [12, 2, 1, "", "on_order_event"], [12, 2, 1, "", "on_order_list"], [12, 2, 1, "", "on_quote_tick"], [12, 2, 1, "", "on_reset"], [12, 2, 1, "", "on_resume"], [12, 2, 1, "", "on_save"], [12, 2, 1, "", "on_start"], [12, 2, 1, "", "on_stop"], [12, 2, 1, "", "on_ticker"], [12, 2, 1, "", "on_trade_tick"], [12, 2, 1, "", "on_venue_status_update"], [12, 2, 1, "", "pending_requests"], [12, 3, 1, "", "portfolio"], [12, 2, 1, "", "publish_data"], [12, 2, 1, "", "publish_signal"], [12, 2, 1, "", "register"], [12, 2, 1, "", "register_base"], [12, 2, 1, "", "register_warning_event"], [12, 2, 1, "", "request_bars"], [12, 2, 1, "", "request_data"], [12, 2, 1, "", "request_instrument"], [12, 2, 1, "", "request_instruments"], [12, 2, 1, "", "request_quote_ticks"], [12, 2, 1, "", "request_trade_ticks"], [12, 2, 1, "", "reset"], [12, 2, 1, "", "resume"], [12, 2, 1, "", "save"], [12, 2, 1, "", "spawn_limit"], [12, 2, 1, "", "spawn_market"], [12, 2, 1, "", "spawn_market_to_limit"], [12, 2, 1, "", "start"], [12, 3, 1, "", "state"], [12, 2, 1, "", "stop"], [12, 2, 1, "", "submit_order"], [12, 2, 1, "", "subscribe_bars"], [12, 2, 1, "", "subscribe_data"], [12, 2, 1, "", "subscribe_instrument"], [12, 2, 1, "", "subscribe_instrument_close"], [12, 2, 1, "", "subscribe_instrument_status_updates"], [12, 2, 1, "", "subscribe_instruments"], [12, 2, 1, "", "subscribe_order_book_deltas"], [12, 2, 1, "", "subscribe_order_book_snapshots"], [12, 2, 1, "", "subscribe_quote_ticks"], [12, 2, 1, "", "subscribe_ticker"], [12, 2, 1, "", "subscribe_trade_ticks"], [12, 2, 1, "", "subscribe_venue_status_updates"], [12, 2, 1, "", "to_importable_config"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "type"], [12, 2, 1, "", "unsubscribe_bars"], [12, 2, 1, "", "unsubscribe_data"], [12, 2, 1, "", "unsubscribe_instrument"], [12, 2, 1, "", "unsubscribe_instrument_status_updates"], [12, 2, 1, "", "unsubscribe_instruments"], [12, 2, 1, "", "unsubscribe_order_book_deltas"], [12, 2, 1, "", "unsubscribe_order_book_snapshots"], [12, 2, 1, "", "unsubscribe_quote_ticks"], [12, 2, 1, "", "unsubscribe_ticker"], [12, 2, 1, "", "unsubscribe_trade_ticks"], [12, 2, 1, "", "unsubscribe_venue_status_updates"], [12, 2, 1, "", "update_synthetic"]], "nautilus_trader.execution.client": [[12, 1, 1, "", "ExecutionClient"]], "nautilus_trader.execution.client.ExecutionClient": [[12, 3, 1, "", "account_id"], [12, 3, 1, "", "account_type"], [12, 3, 1, "", "base_currency"], [12, 2, 1, "", "cancel_all_orders"], [12, 2, 1, "", "cancel_order"], [12, 2, 1, "", "degrade"], [12, 2, 1, "", "dispose"], [12, 2, 1, "", "fault"], [12, 2, 1, "", "fully_qualified_name"], [12, 2, 1, "", "generate_account_state"], [12, 2, 1, "", "generate_order_accepted"], [12, 2, 1, "", "generate_order_cancel_rejected"], [12, 2, 1, "", "generate_order_canceled"], [12, 2, 1, "", "generate_order_expired"], [12, 2, 1, "", "generate_order_filled"], [12, 2, 1, "", "generate_order_modify_rejected"], [12, 2, 1, "", "generate_order_rejected"], [12, 2, 1, "", "generate_order_submitted"], [12, 2, 1, "", "generate_order_triggered"], [12, 2, 1, "", "generate_order_updated"], [12, 2, 1, "", "get_account"], [12, 3, 1, "", "id"], [12, 3, 1, "", "is_connected"], [12, 3, 1, "", "is_degraded"], [12, 3, 1, "", "is_disposed"], [12, 3, 1, "", "is_faulted"], [12, 3, 1, "", "is_initialized"], [12, 3, 1, "", "is_running"], [12, 3, 1, "", "is_stopped"], [12, 2, 1, "", "modify_order"], [12, 3, 1, "", "oms_type"], [12, 2, 1, "", "query_order"], [12, 2, 1, "", "reset"], [12, 2, 1, "", "resume"], [12, 2, 1, "", "start"], [12, 3, 1, "", "state"], [12, 2, 1, "", "stop"], [12, 2, 1, "", "submit_order"], [12, 2, 1, "", "submit_order_list"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "type"], [12, 3, 1, "", "venue"]], "nautilus_trader.execution.emulator": [[12, 1, 1, "", "OrderEmulator"]], "nautilus_trader.execution.emulator.OrderEmulator": [[12, 2, 1, "", "add_synthetic"], [12, 3, 1, "", "cache"], [12, 3, 1, "", "clock"], [12, 3, 1, "", "config"], [12, 2, 1, "", "create_matching_core"], [12, 2, 1, "", "degrade"], [12, 2, 1, "", "deregister_warning_event"], [12, 2, 1, "", "dispose"], [12, 2, 1, "", "execute"], [12, 2, 1, "", "fault"], [12, 2, 1, "", "fully_qualified_name"], [12, 2, 1, "", "get_matching_core"], [12, 2, 1, "", "get_submit_order_commands"], [12, 2, 1, "", "get_submit_order_list_commands"], [12, 2, 1, "", "handle_bar"], [12, 2, 1, "", "handle_bars"], [12, 2, 1, "", "handle_data"], [12, 2, 1, "", "handle_event"], [12, 2, 1, "", "handle_historical_data"], [12, 2, 1, "", "handle_instrument"], [12, 2, 1, "", "handle_instrument_close"], [12, 2, 1, "", "handle_instrument_status_update"], [12, 2, 1, "", "handle_instruments"], [12, 2, 1, "", "handle_order_book"], [12, 2, 1, "", "handle_order_book_deltas"], [12, 2, 1, "", "handle_quote_tick"], [12, 2, 1, "", "handle_quote_ticks"], [12, 2, 1, "", "handle_ticker"], [12, 2, 1, "", "handle_trade_tick"], [12, 2, 1, "", "handle_trade_ticks"], [12, 2, 1, "", "handle_venue_status_update"], [12, 2, 1, "", "has_pending_requests"], [12, 3, 1, "", "id"], [12, 3, 1, "", "is_degraded"], [12, 3, 1, "", "is_disposed"], [12, 3, 1, "", "is_faulted"], [12, 3, 1, "", "is_initialized"], [12, 2, 1, "", "is_pending_request"], [12, 3, 1, "", "is_running"], [12, 3, 1, "", "is_stopped"], [12, 2, 1, "", "load"], [12, 3, 1, "", "log"], [12, 3, 1, "", "msgbus"], [12, 2, 1, "", "on_bar"], [12, 2, 1, "", "on_data"], [12, 2, 1, "", "on_degrade"], [12, 2, 1, "", "on_dispose"], [12, 2, 1, "", "on_event"], [12, 2, 1, "", "on_fault"], [12, 2, 1, "", "on_historical_data"], [12, 2, 1, "", "on_instrument"], [12, 2, 1, "", "on_instrument_close"], [12, 2, 1, "", "on_instrument_status_update"], [12, 2, 1, "", "on_load"], [12, 2, 1, "", "on_order_book"], [12, 2, 1, "", "on_order_book_deltas"], [12, 2, 1, "", "on_quote_tick"], [12, 2, 1, "", "on_reset"], [12, 2, 1, "", "on_resume"], [12, 2, 1, "", "on_save"], [12, 2, 1, "", "on_start"], [12, 2, 1, "", "on_stop"], [12, 2, 1, "", "on_ticker"], [12, 2, 1, "", "on_trade_tick"], [12, 2, 1, "", "on_venue_status_update"], [12, 2, 1, "", "pending_requests"], [12, 2, 1, "", "publish_data"], [12, 2, 1, "", "publish_signal"], [12, 2, 1, "", "register_base"], [12, 2, 1, "", "register_warning_event"], [12, 2, 1, "", "request_bars"], [12, 2, 1, "", "request_data"], [12, 2, 1, "", "request_instrument"], [12, 2, 1, "", "request_instruments"], [12, 2, 1, "", "request_quote_ticks"], [12, 2, 1, "", "request_trade_ticks"], [12, 2, 1, "", "reset"], [12, 2, 1, "", "resume"], [12, 2, 1, "", "save"], [12, 2, 1, "", "start"], [12, 3, 1, "", "state"], [12, 2, 1, "", "stop"], [12, 2, 1, "", "subscribe_bars"], [12, 2, 1, "", "subscribe_data"], [12, 2, 1, "", "subscribe_instrument"], [12, 2, 1, "", "subscribe_instrument_close"], [12, 2, 1, "", "subscribe_instrument_status_updates"], [12, 2, 1, "", "subscribe_instruments"], [12, 2, 1, "", "subscribe_order_book_deltas"], [12, 2, 1, "", "subscribe_order_book_snapshots"], [12, 2, 1, "", "subscribe_quote_ticks"], [12, 2, 1, "", "subscribe_ticker"], [12, 2, 1, "", "subscribe_trade_ticks"], [12, 2, 1, "", "subscribe_venue_status_updates"], [12, 3, 1, "", "subscribed_quotes"], [12, 3, 1, "", "subscribed_trades"], [12, 2, 1, "", "to_importable_config"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "type"], [12, 2, 1, "", "unsubscribe_bars"], [12, 2, 1, "", "unsubscribe_data"], [12, 2, 1, "", "unsubscribe_instrument"], [12, 2, 1, "", "unsubscribe_instrument_status_updates"], [12, 2, 1, "", "unsubscribe_instruments"], [12, 2, 1, "", "unsubscribe_order_book_deltas"], [12, 2, 1, "", "unsubscribe_order_book_snapshots"], [12, 2, 1, "", "unsubscribe_quote_ticks"], [12, 2, 1, "", "unsubscribe_ticker"], [12, 2, 1, "", "unsubscribe_trade_ticks"], [12, 2, 1, "", "unsubscribe_venue_status_updates"], [12, 2, 1, "", "update_synthetic"]], "nautilus_trader.execution.engine": [[12, 1, 1, "", "ExecutionEngine"]], "nautilus_trader.execution.engine.ExecutionEngine": [[12, 3, 1, "", "allow_cash_positions"], [12, 2, 1, "", "check_connected"], [12, 2, 1, "", "check_disconnected"], [12, 2, 1, "", "check_integrity"], [12, 2, 1, "", "check_residuals"], [12, 3, 1, "", "command_count"], [12, 2, 1, "", "connect"], [12, 3, 1, "", "debug"], [12, 3, 1, "", "default_client"], [12, 2, 1, "", "degrade"], [12, 2, 1, "", "deregister_client"], [12, 2, 1, "", "disconnect"], [12, 2, 1, "", "dispose"], [12, 3, 1, "", "event_count"], [12, 2, 1, "", "execute"], [12, 2, 1, "", "fault"], [12, 2, 1, "", "flush_db"], [12, 2, 1, "", "fully_qualified_name"], [12, 2, 1, "", "get_external_order_claim"], [12, 3, 1, "", "id"], [12, 3, 1, "", "is_degraded"], [12, 3, 1, "", "is_disposed"], [12, 3, 1, "", "is_faulted"], [12, 3, 1, "", "is_initialized"], [12, 3, 1, "", "is_running"], [12, 3, 1, "", "is_stopped"], [12, 2, 1, "", "load_cache"], [12, 2, 1, "", "position_id_count"], [12, 2, 1, "", "process"], [12, 2, 1, "", "reconcile_mass_status"], [12, 2, 1, "", "reconcile_report"], [12, 2, 1, "", "reconcile_state"], [12, 3, 1, "", "reconciliation"], [12, 2, 1, "", "register_client"], [12, 2, 1, "", "register_default_client"], [12, 2, 1, "", "register_external_order_claims"], [12, 2, 1, "", "register_oms_type"], [12, 2, 1, "", "register_venue_routing"], [12, 3, 1, "", "registered_clients"], [12, 3, 1, "", "report_count"], [12, 2, 1, "", "reset"], [12, 2, 1, "", "resume"], [12, 2, 1, "", "start"], [12, 3, 1, "", "state"], [12, 2, 1, "", "stop"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "type"]], "nautilus_trader.execution.matching_core": [[12, 1, 1, "", "MatchingCore"]], "nautilus_trader.execution.matching_core.MatchingCore": [[12, 2, 1, "", "add_order"], [12, 3, 1, "", "ask"], [12, 3, 1, "", "bid"], [12, 2, 1, "", "delete_order"], [12, 2, 1, "", "get_order"], [12, 2, 1, "", "get_orders"], [12, 2, 1, "", "get_orders_ask"], [12, 2, 1, "", "get_orders_bid"], [12, 3, 1, "", "instrument_id"], [12, 2, 1, "", "is_limit_matched"], [12, 2, 1, "", "is_stop_triggered"], [12, 2, 1, "", "is_touch_triggered"], [12, 2, 1, "", "iterate"], [12, 3, 1, "", "last"], [12, 2, 1, "", "match_limit_if_touched_order"], [12, 2, 1, "", "match_limit_order"], [12, 2, 1, "", "match_market_if_touched_order"], [12, 2, 1, "", "match_order"], [12, 2, 1, "", "match_stop_limit_order"], [12, 2, 1, "", "match_stop_market_order"], [12, 2, 1, "", "order_exists"], [12, 3, 1, "", "price_increment"], [12, 3, 1, "", "price_precision"], [12, 2, 1, "", "reset"]], "nautilus_trader.execution.messages": [[12, 1, 1, "", "CancelAllOrders"], [12, 1, 1, "", "CancelOrder"], [12, 1, 1, "", "ModifyOrder"], [12, 1, 1, "", "QueryOrder"], [12, 1, 1, "", "SubmitOrder"], [12, 1, 1, "", "SubmitOrderList"], [12, 1, 1, "", "TradingCommand"]], "nautilus_trader.execution.messages.CancelAllOrders": [[12, 3, 1, "", "client_id"], [12, 2, 1, "", "from_dict"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "order_side"], [12, 3, 1, "", "strategy_id"], [12, 2, 1, "", "to_dict"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "ts_init"]], "nautilus_trader.execution.messages.CancelOrder": [[12, 3, 1, "", "client_id"], [12, 3, 1, "", "client_order_id"], [12, 2, 1, "", "from_dict"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "strategy_id"], [12, 2, 1, "", "to_dict"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "ts_init"], [12, 3, 1, "", "venue_order_id"]], "nautilus_trader.execution.messages.ModifyOrder": [[12, 3, 1, "", "client_id"], [12, 3, 1, "", "client_order_id"], [12, 2, 1, "", "from_dict"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "price"], [12, 3, 1, "", "quantity"], [12, 3, 1, "", "strategy_id"], [12, 2, 1, "", "to_dict"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "trigger_price"], [12, 3, 1, "", "ts_init"], [12, 3, 1, "", "venue_order_id"]], "nautilus_trader.execution.messages.QueryOrder": [[12, 3, 1, "", "client_id"], [12, 3, 1, "", "client_order_id"], [12, 2, 1, "", "from_dict"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "strategy_id"], [12, 2, 1, "", "to_dict"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "ts_init"], [12, 3, 1, "", "venue_order_id"]], "nautilus_trader.execution.messages.SubmitOrder": [[12, 3, 1, "", "client_id"], [12, 3, 1, "", "exec_algorithm_id"], [12, 2, 1, "", "from_dict"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "order"], [12, 3, 1, "", "position_id"], [12, 3, 1, "", "strategy_id"], [12, 2, 1, "", "to_dict"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "ts_init"]], "nautilus_trader.execution.messages.SubmitOrderList": [[12, 3, 1, "", "client_id"], [12, 3, 1, "", "exec_algorithm_id"], [12, 2, 1, "", "from_dict"], [12, 3, 1, "", "has_emulated_order"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "order_list"], [12, 3, 1, "", "position_id"], [12, 3, 1, "", "strategy_id"], [12, 2, 1, "", "to_dict"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "ts_init"]], "nautilus_trader.execution.messages.TradingCommand": [[12, 3, 1, "", "client_id"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "strategy_id"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "ts_init"]], "nautilus_trader.execution.reports": [[12, 1, 1, "", "ExecutionMassStatus"], [12, 1, 1, "", "ExecutionReport"], [12, 1, 1, "", "OrderStatusReport"], [12, 1, 1, "", "PositionStatusReport"], [12, 1, 1, "", "TradeReport"]], "nautilus_trader.execution.reports.ExecutionMassStatus": [[12, 2, 1, "", "add_order_reports"], [12, 2, 1, "", "add_position_reports"], [12, 2, 1, "", "add_trade_reports"], [12, 3, 1, "", "id"], [12, 2, 1, "", "order_reports"], [12, 2, 1, "", "position_reports"], [12, 2, 1, "", "trade_reports"], [12, 3, 1, "", "ts_init"]], "nautilus_trader.execution.reports.ExecutionReport": [[12, 3, 1, "", "id"], [12, 3, 1, "", "ts_init"]], "nautilus_trader.execution.reports.OrderStatusReport": [[12, 3, 1, "", "id"], [12, 3, 1, "", "ts_init"]], "nautilus_trader.execution.reports.PositionStatusReport": [[12, 3, 1, "", "id"], [12, 3, 1, "", "ts_init"]], "nautilus_trader.execution.reports.TradeReport": [[12, 3, 1, "", "id"], [12, 3, 1, "", "ts_init"]], "nautilus_trader.indicators": [[14, 0, 0, "-", "atr"], [14, 0, 0, "-", "bollinger_bands"], [14, 0, 0, "-", "donchian_channel"], [14, 0, 0, "-", "efficiency_ratio"], [14, 0, 0, "-", "fuzzy_candlesticks"], [14, 0, 0, "-", "keltner_channel"], [14, 0, 0, "-", "keltner_position"], [14, 0, 0, "-", "macd"], [14, 0, 0, "-", "obv"], [14, 0, 0, "-", "pressure"], [14, 0, 0, "-", "roc"], [14, 0, 0, "-", "rsi"], [14, 0, 0, "-", "spread_analyzer"], [14, 0, 0, "-", "stochastics"], [14, 0, 0, "-", "swings"], [14, 0, 0, "-", "volatility_ratio"], [14, 0, 0, "-", "vwap"]], "nautilus_trader.indicators.atr": [[14, 1, 1, "", "AverageTrueRange"]], "nautilus_trader.indicators.atr.AverageTrueRange": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.average": [[14, 0, 0, "-", "ama"], [14, 0, 0, "-", "ema"], [14, 0, 0, "-", "hma"], [14, 0, 0, "-", "ma_factory"], [14, 0, 0, "-", "moving_average"], [14, 0, 0, "-", "sma"], [14, 0, 0, "-", "wma"]], "nautilus_trader.indicators.average.ama": [[14, 1, 1, "", "AdaptiveMovingAverage"]], "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage": [[14, 3, 1, "", "alpha_diff"], [14, 3, 1, "", "alpha_fast"], [14, 3, 1, "", "alpha_slow"], [14, 3, 1, "", "count"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 3, 1, "", "period_alpha_fast"], [14, 3, 1, "", "period_alpha_slow"], [14, 3, 1, "", "period_er"], [14, 3, 1, "", "price_type"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.average.ema": [[14, 1, 1, "", "ExponentialMovingAverage"]], "nautilus_trader.indicators.average.ema.ExponentialMovingAverage": [[14, 3, 1, "", "alpha"], [14, 3, 1, "", "count"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 3, 1, "", "price_type"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.average.hma": [[14, 1, 1, "", "HullMovingAverage"]], "nautilus_trader.indicators.average.hma.HullMovingAverage": [[14, 3, 1, "", "count"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 3, 1, "", "price_type"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.average.ma_factory": [[14, 1, 1, "", "MovingAverageFactory"]], "nautilus_trader.indicators.average.ma_factory.MovingAverageFactory": [[14, 2, 1, "", "create"]], "nautilus_trader.indicators.average.moving_average": [[14, 1, 1, "", "MovingAverage"], [14, 1, 1, "", "MovingAverageType"]], "nautilus_trader.indicators.average.moving_average.MovingAverage": [[14, 3, 1, "", "count"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 3, 1, "", "price_type"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.average.sma": [[14, 1, 1, "", "SimpleMovingAverage"]], "nautilus_trader.indicators.average.sma.SimpleMovingAverage": [[14, 3, 1, "", "count"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 3, 1, "", "price_type"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.average.wma": [[14, 1, 1, "", "WeightedMovingAverage"]], "nautilus_trader.indicators.average.wma.WeightedMovingAverage": [[14, 3, 1, "", "count"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 3, 1, "", "price_type"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"], [14, 3, 1, "", "weights"]], "nautilus_trader.indicators.base": [[14, 0, 0, "-", "indicator"]], "nautilus_trader.indicators.base.indicator": [[14, 1, 1, "", "Indicator"]], "nautilus_trader.indicators.base.indicator.Indicator": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 2, 1, "", "reset"]], "nautilus_trader.indicators.bollinger_bands": [[14, 1, 1, "", "BollingerBands"]], "nautilus_trader.indicators.bollinger_bands.BollingerBands": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "k"], [14, 3, 1, "", "lower"], [14, 3, 1, "", "middle"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "upper"]], "nautilus_trader.indicators.donchian_channel": [[14, 1, 1, "", "DonchianChannel"]], "nautilus_trader.indicators.donchian_channel.DonchianChannel": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "lower"], [14, 3, 1, "", "middle"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "upper"]], "nautilus_trader.indicators.efficiency_ratio": [[14, 1, 1, "", "EfficiencyRatio"]], "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.fuzzy_candlesticks": [[14, 1, 1, "", "FuzzyCandle"], [14, 1, 1, "", "FuzzyCandlesticks"]], "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandle": [[14, 3, 1, "", "body_size"], [14, 3, 1, "", "direction"], [14, 3, 1, "", "lower_wick_size"], [14, 3, 1, "", "size"], [14, 3, 1, "", "upper_wick_size"]], "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"], [14, 3, 1, "", "vector"]], "nautilus_trader.indicators.keltner_channel": [[14, 1, 1, "", "KeltnerChannel"]], "nautilus_trader.indicators.keltner_channel.KeltnerChannel": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "k_multiplier"], [14, 3, 1, "", "lower"], [14, 3, 1, "", "middle"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "upper"]], "nautilus_trader.indicators.keltner_position": [[14, 1, 1, "", "KeltnerPosition"]], "nautilus_trader.indicators.keltner_position.KeltnerPosition": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "k_multiplier"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.macd": [[14, 1, 1, "", "MovingAverageConvergenceDivergence"]], "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence": [[14, 3, 1, "", "fast_period"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "price_type"], [14, 2, 1, "", "reset"], [14, 3, 1, "", "slow_period"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.obv": [[14, 1, 1, "", "OnBalanceVolume"]], "nautilus_trader.indicators.obv.OnBalanceVolume": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.pressure": [[14, 1, 1, "", "Pressure"]], "nautilus_trader.indicators.pressure.Pressure": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"], [14, 3, 1, "", "value_cumulative"]], "nautilus_trader.indicators.roc": [[14, 1, 1, "", "RateOfChange"]], "nautilus_trader.indicators.roc.RateOfChange": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.rsi": [[14, 1, 1, "", "RelativeStrengthIndex"]], "nautilus_trader.indicators.rsi.RelativeStrengthIndex": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.spread_analyzer": [[14, 1, 1, "", "SpreadAnalyzer"]], "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer": [[14, 3, 1, "", "average"], [14, 3, 1, "", "capacity"], [14, 3, 1, "", "current"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "instrument_id"], [14, 3, 1, "", "name"], [14, 2, 1, "", "reset"]], "nautilus_trader.indicators.stochastics": [[14, 1, 1, "", "Stochastics"]], "nautilus_trader.indicators.stochastics.Stochastics": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period_d"], [14, 3, 1, "", "period_k"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value_d"], [14, 3, 1, "", "value_k"]], "nautilus_trader.indicators.swings": [[14, 1, 1, "", "Swings"]], "nautilus_trader.indicators.swings.Swings": [[14, 3, 1, "", "changed"], [14, 3, 1, "", "direction"], [14, 3, 1, "", "duration"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "high_datetime"], [14, 3, 1, "", "high_price"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "length"], [14, 3, 1, "", "low_datetime"], [14, 3, 1, "", "low_price"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 3, 1, "", "since_high"], [14, 3, 1, "", "since_low"], [14, 2, 1, "", "update_raw"]], "nautilus_trader.indicators.volatility_ratio": [[14, 1, 1, "", "VolatilityRatio"]], "nautilus_trader.indicators.volatility_ratio.VolatilityRatio": [[14, 3, 1, "", "fast_period"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 2, 1, "", "reset"], [14, 3, 1, "", "slow_period"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.vwap": [[14, 1, 1, "", "VolumeWeightedAveragePrice"]], "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.infrastructure": [[15, 0, 0, "-", "cache"]], "nautilus_trader.infrastructure.cache": [[15, 1, 1, "", "RedisCacheDatabase"]], "nautilus_trader.infrastructure.cache.RedisCacheDatabase": [[15, 2, 1, "", "add"], [15, 2, 1, "", "add_account"], [15, 2, 1, "", "add_currency"], [15, 2, 1, "", "add_instrument"], [15, 2, 1, "", "add_order"], [15, 2, 1, "", "add_position"], [15, 2, 1, "", "add_submit_order_command"], [15, 2, 1, "", "add_submit_order_list_command"], [15, 2, 1, "", "add_synthetic"], [15, 2, 1, "", "delete_actor"], [15, 2, 1, "", "delete_strategy"], [15, 2, 1, "", "flush"], [15, 2, 1, "", "load"], [15, 2, 1, "", "load_account"], [15, 2, 1, "", "load_accounts"], [15, 2, 1, "", "load_actor"], [15, 2, 1, "", "load_currencies"], [15, 2, 1, "", "load_currency"], [15, 2, 1, "", "load_instrument"], [15, 2, 1, "", "load_instruments"], [15, 2, 1, "", "load_order"], [15, 2, 1, "", "load_orders"], [15, 2, 1, "", "load_position"], [15, 2, 1, "", "load_positions"], [15, 2, 1, "", "load_strategy"], [15, 2, 1, "", "load_submit_order_command"], [15, 2, 1, "", "load_submit_order_commands"], [15, 2, 1, "", "load_submit_order_list_command"], [15, 2, 1, "", "load_submit_order_list_commands"], [15, 2, 1, "", "load_synthetic"], [15, 2, 1, "", "load_synthetics"], [15, 2, 1, "", "update_account"], [15, 2, 1, "", "update_actor"], [15, 2, 1, "", "update_order"], [15, 2, 1, "", "update_position"], [15, 2, 1, "", "update_strategy"]], "nautilus_trader.live": [[16, 0, 0, "-", "data_client"], [16, 0, 0, "-", "data_engine"], [16, 0, 0, "-", "execution_client"], [16, 0, 0, "-", "execution_engine"], [16, 0, 0, "-", "node"], [16, 0, 0, "-", "node_builder"], [16, 0, 0, "-", "risk_engine"]], "nautilus_trader.live.data_client": [[16, 1, 1, "", "LiveDataClient"], [16, 1, 1, "", "LiveMarketDataClient"]], "nautilus_trader.live.data_client.LiveDataClient": [[16, 2, 1, "", "connect"], [16, 2, 1, "", "create_task"], [16, 2, 1, "", "degrade"], [16, 2, 1, "", "disconnect"], [16, 2, 1, "", "dispose"], [16, 2, 1, "", "fault"], [16, 2, 1, "", "fully_qualified_name"], [16, 3, 1, "", "id"], [16, 3, 1, "", "is_connected"], [16, 3, 1, "", "is_degraded"], [16, 3, 1, "", "is_disposed"], [16, 3, 1, "", "is_faulted"], [16, 3, 1, "", "is_initialized"], [16, 3, 1, "", "is_running"], [16, 3, 1, "", "is_stopped"], [16, 2, 1, "", "request"], [16, 2, 1, "", "reset"], [16, 2, 1, "", "resume"], [16, 2, 1, "", "run_after_delay"], [16, 2, 1, "", "start"], [16, 3, 1, "", "state"], [16, 2, 1, "", "stop"], [16, 2, 1, "", "subscribe"], [16, 2, 1, "", "subscribed_generic_data"], [16, 3, 1, "", "trader_id"], [16, 3, 1, "", "type"], [16, 2, 1, "", "unsubscribe"], [16, 3, 1, "", "venue"]], "nautilus_trader.live.data_client.LiveMarketDataClient": [[16, 2, 1, "", "connect"], [16, 2, 1, "", "create_task"], [16, 2, 1, "", "degrade"], [16, 2, 1, "", "disconnect"], [16, 2, 1, "", "dispose"], [16, 2, 1, "", "fault"], [16, 2, 1, "", "fully_qualified_name"], [16, 3, 1, "", "id"], [16, 3, 1, "", "is_connected"], [16, 3, 1, "", "is_degraded"], [16, 3, 1, "", "is_disposed"], [16, 3, 1, "", "is_faulted"], [16, 3, 1, "", "is_initialized"], [16, 3, 1, "", "is_running"], [16, 3, 1, "", "is_stopped"], [16, 2, 1, "", "request"], [16, 2, 1, "", "request_bars"], [16, 2, 1, "", "request_instrument"], [16, 2, 1, "", "request_instruments"], [16, 2, 1, "", "request_quote_ticks"], [16, 2, 1, "", "request_trade_ticks"], [16, 2, 1, "", "reset"], [16, 2, 1, "", "resume"], [16, 2, 1, "", "run_after_delay"], [16, 2, 1, "", "start"], [16, 3, 1, "", "state"], [16, 2, 1, "", "stop"], [16, 2, 1, "", "subscribe"], [16, 2, 1, "", "subscribe_bars"], [16, 2, 1, "", "subscribe_instrument"], [16, 2, 1, "", "subscribe_instrument_close"], [16, 2, 1, "", "subscribe_instrument_status_updates"], [16, 2, 1, "", "subscribe_instruments"], [16, 2, 1, "", "subscribe_order_book_deltas"], [16, 2, 1, "", "subscribe_order_book_snapshots"], [16, 2, 1, "", "subscribe_quote_ticks"], [16, 2, 1, "", "subscribe_ticker"], [16, 2, 1, "", "subscribe_trade_ticks"], [16, 2, 1, "", "subscribe_venue_status_updates"], [16, 2, 1, "", "subscribed_bars"], [16, 2, 1, "", "subscribed_generic_data"], [16, 2, 1, "", "subscribed_instrument_close"], [16, 2, 1, "", "subscribed_instrument_status_updates"], [16, 2, 1, "", "subscribed_instruments"], [16, 2, 1, "", "subscribed_order_book_deltas"], [16, 2, 1, "", "subscribed_order_book_snapshots"], [16, 2, 1, "", "subscribed_quote_ticks"], [16, 2, 1, "", "subscribed_tickers"], [16, 2, 1, "", "subscribed_trade_ticks"], [16, 2, 1, "", "subscribed_venue_status_updates"], [16, 3, 1, "", "trader_id"], [16, 3, 1, "", "type"], [16, 2, 1, "", "unsubscribe"], [16, 2, 1, "", "unsubscribe_bars"], [16, 2, 1, "", "unsubscribe_instrument"], [16, 2, 1, "", "unsubscribe_instrument_close"], [16, 2, 1, "", "unsubscribe_instrument_status_updates"], [16, 2, 1, "", "unsubscribe_instruments"], [16, 2, 1, "", "unsubscribe_order_book_deltas"], [16, 2, 1, "", "unsubscribe_order_book_snapshots"], [16, 2, 1, "", "unsubscribe_quote_ticks"], [16, 2, 1, "", "unsubscribe_ticker"], [16, 2, 1, "", "unsubscribe_trade_ticks"], [16, 2, 1, "", "unsubscribe_venue_status_updates"], [16, 3, 1, "", "venue"]], "nautilus_trader.live.data_engine": [[16, 1, 1, "", "LiveDataEngine"]], "nautilus_trader.live.data_engine.LiveDataEngine": [[16, 2, 1, "", "check_connected"], [16, 2, 1, "", "check_disconnected"], [16, 2, 1, "", "cmd_qsize"], [16, 3, 1, "", "command_count"], [16, 2, 1, "", "connect"], [16, 3, 1, "", "data_count"], [16, 2, 1, "", "data_qsize"], [16, 3, 1, "", "debug"], [16, 3, 1, "", "default_client"], [16, 2, 1, "", "degrade"], [16, 2, 1, "", "deregister_client"], [16, 2, 1, "", "disconnect"], [16, 2, 1, "", "dispose"], [16, 2, 1, "", "execute"], [16, 2, 1, "", "fault"], [16, 2, 1, "", "fully_qualified_name"], [16, 2, 1, "", "get_cmd_queue_task"], [16, 2, 1, "", "get_data_queue_task"], [16, 2, 1, "", "get_req_queue_task"], [16, 2, 1, "", "get_res_queue_task"], [16, 3, 1, "", "id"], [16, 3, 1, "", "is_degraded"], [16, 3, 1, "", "is_disposed"], [16, 3, 1, "", "is_faulted"], [16, 3, 1, "", "is_initialized"], [16, 3, 1, "", "is_running"], [16, 3, 1, "", "is_stopped"], [16, 2, 1, "", "kill"], [16, 2, 1, "", "process"], [16, 2, 1, "", "register_catalog"], [16, 2, 1, "", "register_client"], [16, 2, 1, "", "register_default_client"], [16, 2, 1, "", "register_venue_routing"], [16, 3, 1, "", "registered_clients"], [16, 2, 1, "", "req_qsize"], [16, 2, 1, "", "request"], [16, 3, 1, "", "request_count"], [16, 2, 1, "", "res_qsize"], [16, 2, 1, "", "reset"], [16, 2, 1, "", "response"], [16, 3, 1, "", "response_count"], [16, 2, 1, "", "resume"], [16, 2, 1, "", "start"], [16, 3, 1, "", "state"], [16, 2, 1, "", "stop"], [16, 2, 1, "", "subscribed_bars"], [16, 2, 1, "", "subscribed_generic_data"], [16, 2, 1, "", "subscribed_instrument_close"], [16, 2, 1, "", "subscribed_instrument_status_updates"], [16, 2, 1, "", "subscribed_instruments"], [16, 2, 1, "", "subscribed_order_book_deltas"], [16, 2, 1, "", "subscribed_order_book_snapshots"], [16, 2, 1, "", "subscribed_quote_ticks"], [16, 2, 1, "", "subscribed_synthetic_quotes"], [16, 2, 1, "", "subscribed_synthetic_trades"], [16, 2, 1, "", "subscribed_tickers"], [16, 2, 1, "", "subscribed_trade_ticks"], [16, 3, 1, "", "trader_id"], [16, 3, 1, "", "type"]], "nautilus_trader.live.execution_client": [[16, 1, 1, "", "LiveExecutionClient"]], "nautilus_trader.live.execution_client.LiveExecutionClient": [[16, 3, 1, "", "account_id"], [16, 3, 1, "", "account_type"], [16, 3, 1, "", "base_currency"], [16, 2, 1, "", "cancel_all_orders"], [16, 2, 1, "", "cancel_order"], [16, 2, 1, "", "connect"], [16, 2, 1, "", "create_task"], [16, 2, 1, "", "degrade"], [16, 2, 1, "", "disconnect"], [16, 2, 1, "", "dispose"], [16, 2, 1, "", "fault"], [16, 2, 1, "", "fully_qualified_name"], [16, 2, 1, "", "generate_account_state"], [16, 2, 1, "", "generate_mass_status"], [16, 2, 1, "", "generate_order_accepted"], [16, 2, 1, "", "generate_order_cancel_rejected"], [16, 2, 1, "", "generate_order_canceled"], [16, 2, 1, "", "generate_order_expired"], [16, 2, 1, "", "generate_order_filled"], [16, 2, 1, "", "generate_order_modify_rejected"], [16, 2, 1, "", "generate_order_rejected"], [16, 2, 1, "", "generate_order_status_report"], [16, 2, 1, "", "generate_order_status_reports"], [16, 2, 1, "", "generate_order_submitted"], [16, 2, 1, "", "generate_order_triggered"], [16, 2, 1, "", "generate_order_updated"], [16, 2, 1, "", "generate_position_status_reports"], [16, 2, 1, "", "generate_trade_reports"], [16, 2, 1, "", "get_account"], [16, 3, 1, "", "id"], [16, 3, 1, "", "is_connected"], [16, 3, 1, "", "is_degraded"], [16, 3, 1, "", "is_disposed"], [16, 3, 1, "", "is_faulted"], [16, 3, 1, "", "is_initialized"], [16, 3, 1, "", "is_running"], [16, 3, 1, "", "is_stopped"], [16, 2, 1, "", "modify_order"], [16, 3, 1, "", "oms_type"], [16, 2, 1, "", "query_order"], [16, 2, 1, "", "reset"], [16, 2, 1, "", "resume"], [16, 2, 1, "", "run_after_delay"], [16, 2, 1, "", "start"], [16, 3, 1, "", "state"], [16, 2, 1, "", "stop"], [16, 2, 1, "", "submit_order"], [16, 2, 1, "", "submit_order_list"], [16, 3, 1, "", "trader_id"], [16, 3, 1, "", "type"], [16, 3, 1, "", "venue"]], "nautilus_trader.live.execution_engine": [[16, 1, 1, "", "LiveExecutionEngine"]], "nautilus_trader.live.execution_engine.LiveExecutionEngine": [[16, 3, 1, "", "allow_cash_positions"], [16, 2, 1, "", "check_connected"], [16, 2, 1, "", "check_disconnected"], [16, 2, 1, "", "check_integrity"], [16, 2, 1, "", "check_residuals"], [16, 2, 1, "", "cmd_qsize"], [16, 3, 1, "", "command_count"], [16, 2, 1, "", "connect"], [16, 3, 1, "", "debug"], [16, 3, 1, "", "default_client"], [16, 2, 1, "", "degrade"], [16, 2, 1, "", "deregister_client"], [16, 2, 1, "", "disconnect"], [16, 2, 1, "", "dispose"], [16, 3, 1, "", "event_count"], [16, 2, 1, "", "evt_qsize"], [16, 2, 1, "", "execute"], [16, 2, 1, "", "fault"], [16, 2, 1, "", "flush_db"], [16, 2, 1, "", "fully_qualified_name"], [16, 2, 1, "", "get_cmd_queue_task"], [16, 2, 1, "", "get_evt_queue_task"], [16, 2, 1, "", "get_external_order_claim"], [16, 2, 1, "", "get_inflight_check_task"], [16, 3, 1, "", "id"], [16, 3, 1, "", "is_degraded"], [16, 3, 1, "", "is_disposed"], [16, 3, 1, "", "is_faulted"], [16, 3, 1, "", "is_initialized"], [16, 3, 1, "", "is_running"], [16, 3, 1, "", "is_stopped"], [16, 2, 1, "", "kill"], [16, 2, 1, "", "load_cache"], [16, 2, 1, "", "position_id_count"], [16, 2, 1, "", "process"], [16, 2, 1, "", "reconcile_mass_status"], [16, 2, 1, "", "reconcile_report"], [16, 2, 1, "", "reconcile_state"], [16, 4, 1, "", "reconciliation"], [16, 2, 1, "", "register_client"], [16, 2, 1, "", "register_default_client"], [16, 2, 1, "", "register_external_order_claims"], [16, 2, 1, "", "register_oms_type"], [16, 2, 1, "", "register_venue_routing"], [16, 3, 1, "", "registered_clients"], [16, 3, 1, "", "report_count"], [16, 2, 1, "", "reset"], [16, 2, 1, "", "resume"], [16, 2, 1, "", "start"], [16, 3, 1, "", "state"], [16, 2, 1, "", "stop"], [16, 3, 1, "", "trader_id"], [16, 3, 1, "", "type"]], "nautilus_trader.live.node": [[16, 1, 1, "", "TradingNode"]], "nautilus_trader.live.node.TradingNode": [[16, 2, 1, "", "add_data_client_factory"], [16, 2, 1, "", "add_exec_client_factory"], [16, 2, 1, "", "build"], [16, 4, 1, "", "cache"], [16, 2, 1, "", "dispose"], [16, 2, 1, "", "get_event_loop"], [16, 2, 1, "", "get_logger"], [16, 4, 1, "", "instance_id"], [16, 4, 1, "", "is_built"], [16, 4, 1, "", "is_running"], [16, 4, 1, "", "machine_id"], [16, 4, 1, "", "portfolio"], [16, 2, 1, "", "run"], [16, 2, 1, "", "run_async"], [16, 2, 1, "", "stop"], [16, 2, 1, "", "stop_async"], [16, 4, 1, "", "trader"], [16, 4, 1, "", "trader_id"]], "nautilus_trader.live.node_builder": [[16, 1, 1, "", "TradingNodeBuilder"]], "nautilus_trader.live.node_builder.TradingNodeBuilder": [[16, 2, 1, "", "add_data_client_factory"], [16, 2, 1, "", "add_exec_client_factory"], [16, 2, 1, "", "build_data_clients"], [16, 2, 1, "", "build_exec_clients"]], "nautilus_trader.live.risk_engine": [[16, 1, 1, "", "LiveRiskEngine"]], "nautilus_trader.live.risk_engine.LiveRiskEngine": [[16, 2, 1, "", "cmd_qsize"], [16, 3, 1, "", "command_count"], [16, 3, 1, "", "debug"], [16, 2, 1, "", "degrade"], [16, 2, 1, "", "dispose"], [16, 3, 1, "", "event_count"], [16, 2, 1, "", "evt_qsize"], [16, 2, 1, "", "execute"], [16, 2, 1, "", "fault"], [16, 2, 1, "", "fully_qualified_name"], [16, 2, 1, "", "get_cmd_queue_task"], [16, 2, 1, "", "get_evt_queue_task"], [16, 3, 1, "", "id"], [16, 3, 1, "", "is_bypassed"], [16, 3, 1, "", "is_degraded"], [16, 3, 1, "", "is_disposed"], [16, 3, 1, "", "is_faulted"], [16, 3, 1, "", "is_initialized"], [16, 3, 1, "", "is_running"], [16, 3, 1, "", "is_stopped"], [16, 2, 1, "", "kill"], [16, 2, 1, "", "max_notional_per_order"], [16, 2, 1, "", "max_notionals_per_order"], [16, 2, 1, "", "max_order_modify_rate"], [16, 2, 1, "", "max_order_submit_rate"], [16, 2, 1, "", "process"], [16, 2, 1, "", "reset"], [16, 2, 1, "", "resume"], [16, 2, 1, "", "set_max_notional_per_order"], [16, 2, 1, "", "set_trading_state"], [16, 2, 1, "", "start"], [16, 3, 1, "", "state"], [16, 2, 1, "", "stop"], [16, 3, 1, "", "trader_id"], [16, 3, 1, "", "trading_state"], [16, 3, 1, "", "type"]], "nautilus_trader.model": [[17, 0, 0, "-", "currency"], [18, 0, 0, "-", "data"], [19, 0, 0, "-", "events"], [20, 0, 0, "-", "identifiers"], [22, 0, 0, "-", "instruments"], [23, 0, 0, "-", "objects"], [24, 0, 0, "-", "orderbook"], [25, 0, 0, "-", "orders"], [26, 0, 0, "-", "position"], [27, 0, 0, "-", "tick_scheme"]], "nautilus_trader.model.currency": [[17, 1, 1, "", "Currency"]], "nautilus_trader.model.currency.Currency": [[17, 3, 1, "", "code"], [17, 3, 1, "", "currency_type"], [17, 2, 1, "", "from_internal_map"], [17, 2, 1, "", "from_str"], [17, 2, 1, "", "is_crypto"], [17, 2, 1, "", "is_fiat"], [17, 3, 1, "", "iso4217"], [17, 3, 1, "", "name"], [17, 3, 1, "", "precision"], [17, 2, 1, "", "register"]], "nautilus_trader.model.data": [[18, 0, 0, "-", "bar"], [18, 0, 0, "-", "base"], [18, 0, 0, "-", "book"], [18, 0, 0, "-", "tick"], [18, 0, 0, "-", "ticker"], [18, 0, 0, "-", "venue"]], "nautilus_trader.model.data.bar": [[18, 1, 1, "", "Bar"], [18, 1, 1, "", "BarSpecification"], [18, 1, 1, "", "BarType"]], "nautilus_trader.model.data.bar.Bar": [[18, 3, 1, "", "bar_type"], [18, 3, 1, "", "close"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "high"], [18, 3, 1, "", "is_revision"], [18, 2, 1, "", "is_single_price"], [18, 3, 1, "", "low"], [18, 3, 1, "", "open"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"], [18, 3, 1, "", "volume"]], "nautilus_trader.model.data.bar.BarSpecification": [[18, 3, 1, "", "aggregation"], [18, 2, 1, "", "check_information_aggregated"], [18, 2, 1, "", "check_threshold_aggregated"], [18, 2, 1, "", "check_time_aggregated"], [18, 2, 1, "", "from_str"], [18, 2, 1, "", "from_timedelta"], [18, 2, 1, "", "is_information_aggregated"], [18, 2, 1, "", "is_threshold_aggregated"], [18, 2, 1, "", "is_time_aggregated"], [18, 3, 1, "", "price_type"], [18, 3, 1, "", "step"], [18, 3, 1, "", "timedelta"]], "nautilus_trader.model.data.bar.BarType": [[18, 3, 1, "", "aggregation_source"], [18, 2, 1, "", "from_str"], [18, 3, 1, "", "instrument_id"], [18, 2, 1, "", "is_externally_aggregated"], [18, 2, 1, "", "is_internally_aggregated"], [18, 3, 1, "", "spec"]], "nautilus_trader.model.data.base": [[18, 1, 1, "", "DataType"], [18, 1, 1, "", "GenericData"]], "nautilus_trader.model.data.base.DataType": [[18, 3, 1, "", "metadata"], [18, 3, 1, "", "topic"], [18, 3, 1, "", "type"]], "nautilus_trader.model.data.base.GenericData": [[18, 3, 1, "", "data"], [18, 3, 1, "", "data_type"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.book": [[18, 1, 1, "", "BookOrder"], [18, 1, 1, "", "OrderBookDelta"], [18, 1, 1, "", "OrderBookDeltas"]], "nautilus_trader.model.data.book.BookOrder": [[18, 2, 1, "", "exposure"], [18, 2, 1, "", "from_dict"], [18, 3, 1, "", "order_id"], [18, 3, 1, "", "price"], [18, 3, 1, "", "side"], [18, 2, 1, "", "signed_size"], [18, 3, 1, "", "size"], [18, 2, 1, "", "to_dict"]], "nautilus_trader.model.data.book.OrderBookDelta": [[18, 3, 1, "", "action"], [18, 2, 1, "", "clear"], [18, 3, 1, "", "flags"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "instrument_id"], [18, 3, 1, "", "is_add"], [18, 3, 1, "", "is_clear"], [18, 3, 1, "", "is_delete"], [18, 3, 1, "", "is_update"], [18, 3, 1, "", "order"], [18, 3, 1, "", "sequence"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.book.OrderBookDeltas": [[18, 3, 1, "", "deltas"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "instrument_id"], [18, 3, 1, "", "is_snapshot"], [18, 3, 1, "", "sequence"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.tick": [[18, 1, 1, "", "QuoteTick"], [18, 1, 1, "", "TradeTick"]], "nautilus_trader.model.data.tick.QuoteTick": [[18, 3, 1, "", "ask"], [18, 3, 1, "", "ask_size"], [18, 3, 1, "", "bid"], [18, 3, 1, "", "bid_size"], [18, 2, 1, "", "capsule_from_list"], [18, 2, 1, "", "extract_price"], [18, 2, 1, "", "extract_volume"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_raw"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "instrument_id"], [18, 2, 1, "", "list_from_capsule"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.tick.TradeTick": [[18, 3, 1, "", "aggressor_side"], [18, 2, 1, "", "capsule_from_list"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_raw"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "instrument_id"], [18, 2, 1, "", "list_from_capsule"], [18, 3, 1, "", "price"], [18, 3, 1, "", "size"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "trade_id"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.ticker": [[18, 1, 1, "", "Ticker"]], "nautilus_trader.model.data.ticker.Ticker": [[18, 2, 1, "", "from_dict"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "instrument_id"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.venue": [[18, 1, 1, "", "InstrumentClose"], [18, 1, 1, "", "InstrumentStatusUpdate"], [18, 1, 1, "", "StatusUpdate"], [18, 1, 1, "", "VenueStatusUpdate"]], "nautilus_trader.model.data.venue.InstrumentClose": [[18, 3, 1, "", "close_price"], [18, 3, 1, "", "close_type"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "instrument_id"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.venue.InstrumentStatusUpdate": [[18, 2, 1, "", "from_dict"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "instrument_id"], [18, 3, 1, "", "status"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.venue.StatusUpdate": [[18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.venue.VenueStatusUpdate": [[18, 2, 1, "", "from_dict"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "status"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"], [18, 3, 1, "", "venue"]], "nautilus_trader.model.events": [[19, 0, 0, "-", "account"], [19, 0, 0, "-", "order"], [19, 0, 0, "-", "position"]], "nautilus_trader.model.events.account": [[19, 1, 1, "", "AccountState"]], "nautilus_trader.model.events.account.AccountState": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "account_type"], [19, 3, 1, "", "balances"], [19, 3, 1, "", "base_currency"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "info"], [19, 3, 1, "", "is_reported"], [19, 3, 1, "", "margins"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"]], "nautilus_trader.model.events.order": [[19, 1, 1, "", "OrderAccepted"], [19, 1, 1, "", "OrderCancelRejected"], [19, 1, 1, "", "OrderCanceled"], [19, 1, 1, "", "OrderDenied"], [19, 1, 1, "", "OrderEvent"], [19, 1, 1, "", "OrderExpired"], [19, 1, 1, "", "OrderFilled"], [19, 1, 1, "", "OrderInitialized"], [19, 1, 1, "", "OrderModifyRejected"], [19, 1, 1, "", "OrderPendingCancel"], [19, 1, 1, "", "OrderPendingUpdate"], [19, 1, 1, "", "OrderRejected"], [19, 1, 1, "", "OrderSubmitted"], [19, 1, 1, "", "OrderTriggered"], [19, 1, 1, "", "OrderUpdated"]], "nautilus_trader.model.events.order.OrderAccepted": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "client_order_id"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "reconciliation"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderCancelRejected": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "client_order_id"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "reason"], [19, 3, 1, "", "reconciliation"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderCanceled": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "client_order_id"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "reconciliation"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderDenied": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "client_order_id"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "reason"], [19, 3, 1, "", "reconciliation"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderEvent": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "client_order_id"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "reconciliation"], [19, 3, 1, "", "strategy_id"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderExpired": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "client_order_id"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "reconciliation"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderFilled": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "client_order_id"], [19, 3, 1, "", "commission"], [19, 3, 1, "", "currency"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "info"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "is_buy"], [19, 3, 1, "", "is_sell"], [19, 3, 1, "", "last_px"], [19, 3, 1, "", "last_qty"], [19, 3, 1, "", "liquidity_side"], [19, 3, 1, "", "order_side"], [19, 3, 1, "", "order_type"], [19, 3, 1, "", "position_id"], [19, 3, 1, "", "reconciliation"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trade_id"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderInitialized": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "client_order_id"], [19, 3, 1, "", "contingency_type"], [19, 3, 1, "", "emulation_trigger"], [19, 3, 1, "", "exec_algorithm_id"], [19, 3, 1, "", "exec_algorithm_params"], [19, 3, 1, "", "exec_spawn_id"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "linked_order_ids"], [19, 3, 1, "", "options"], [19, 3, 1, "", "order_list_id"], [19, 3, 1, "", "order_type"], [19, 3, 1, "", "parent_order_id"], [19, 3, 1, "", "post_only"], [19, 3, 1, "", "quantity"], [19, 3, 1, "", "quote_quantity"], [19, 3, 1, "", "reconciliation"], [19, 3, 1, "", "reduce_only"], [19, 3, 1, "", "side"], [19, 3, 1, "", "strategy_id"], [19, 3, 1, "", "tags"], [19, 3, 1, "", "time_in_force"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "trigger_instrument_id"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderModifyRejected": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "client_order_id"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "reason"], [19, 3, 1, "", "reconciliation"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderPendingCancel": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "client_order_id"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "reconciliation"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderPendingUpdate": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "client_order_id"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "reconciliation"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderRejected": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "client_order_id"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "reason"], [19, 3, 1, "", "reconciliation"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderSubmitted": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "client_order_id"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "reconciliation"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderTriggered": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "client_order_id"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "reconciliation"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderUpdated": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "client_order_id"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "price"], [19, 3, 1, "", "quantity"], [19, 3, 1, "", "reconciliation"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "trigger_price"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.position": [[19, 1, 1, "", "PositionChanged"], [19, 1, 1, "", "PositionClosed"], [19, 1, 1, "", "PositionEvent"], [19, 1, 1, "", "PositionOpened"]], "nautilus_trader.model.events.position.PositionChanged": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "avg_px_close"], [19, 3, 1, "", "avg_px_open"], [19, 3, 1, "", "closing_order_id"], [19, 2, 1, "", "create"], [19, 3, 1, "", "currency"], [19, 3, 1, "", "duration_ns"], [19, 3, 1, "", "entry"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "last_px"], [19, 3, 1, "", "last_qty"], [19, 3, 1, "", "opening_order_id"], [19, 3, 1, "", "peak_qty"], [19, 3, 1, "", "position_id"], [19, 3, 1, "", "quantity"], [19, 3, 1, "", "realized_pnl"], [19, 3, 1, "", "realized_return"], [19, 3, 1, "", "side"], [19, 3, 1, "", "signed_qty"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_closed"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "ts_opened"], [19, 3, 1, "", "unrealized_pnl"]], "nautilus_trader.model.events.position.PositionClosed": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "avg_px_close"], [19, 3, 1, "", "avg_px_open"], [19, 3, 1, "", "closing_order_id"], [19, 2, 1, "", "create"], [19, 3, 1, "", "currency"], [19, 3, 1, "", "duration_ns"], [19, 3, 1, "", "entry"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "last_px"], [19, 3, 1, "", "last_qty"], [19, 3, 1, "", "opening_order_id"], [19, 3, 1, "", "peak_qty"], [19, 3, 1, "", "position_id"], [19, 3, 1, "", "quantity"], [19, 3, 1, "", "realized_pnl"], [19, 3, 1, "", "realized_return"], [19, 3, 1, "", "side"], [19, 3, 1, "", "signed_qty"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_closed"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "ts_opened"], [19, 3, 1, "", "unrealized_pnl"]], "nautilus_trader.model.events.position.PositionEvent": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "avg_px_close"], [19, 3, 1, "", "avg_px_open"], [19, 3, 1, "", "closing_order_id"], [19, 3, 1, "", "currency"], [19, 3, 1, "", "duration_ns"], [19, 3, 1, "", "entry"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "last_px"], [19, 3, 1, "", "last_qty"], [19, 3, 1, "", "opening_order_id"], [19, 3, 1, "", "peak_qty"], [19, 3, 1, "", "position_id"], [19, 3, 1, "", "quantity"], [19, 3, 1, "", "realized_pnl"], [19, 3, 1, "", "realized_return"], [19, 3, 1, "", "side"], [19, 3, 1, "", "signed_qty"], [19, 3, 1, "", "strategy_id"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_closed"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "ts_opened"], [19, 3, 1, "", "unrealized_pnl"]], "nautilus_trader.model.events.position.PositionOpened": [[19, 3, 1, "", "account_id"], [19, 3, 1, "", "avg_px_close"], [19, 3, 1, "", "avg_px_open"], [19, 3, 1, "", "closing_order_id"], [19, 2, 1, "", "create"], [19, 3, 1, "", "currency"], [19, 3, 1, "", "duration_ns"], [19, 3, 1, "", "entry"], [19, 2, 1, "", "from_dict"], [19, 3, 1, "", "id"], [19, 3, 1, "", "instrument_id"], [19, 3, 1, "", "last_px"], [19, 3, 1, "", "last_qty"], [19, 3, 1, "", "opening_order_id"], [19, 3, 1, "", "peak_qty"], [19, 3, 1, "", "position_id"], [19, 3, 1, "", "quantity"], [19, 3, 1, "", "realized_pnl"], [19, 3, 1, "", "realized_return"], [19, 3, 1, "", "side"], [19, 3, 1, "", "signed_qty"], [19, 3, 1, "", "strategy_id"], [19, 2, 1, "", "to_dict"], [19, 3, 1, "", "trader_id"], [19, 3, 1, "", "ts_closed"], [19, 3, 1, "", "ts_event"], [19, 3, 1, "", "ts_init"], [19, 3, 1, "", "ts_opened"], [19, 3, 1, "", "unrealized_pnl"]], "nautilus_trader.model.identifiers": [[20, 1, 1, "", "AccountId"], [20, 1, 1, "", "ClientId"], [20, 1, 1, "", "ClientOrderId"], [20, 1, 1, "", "ComponentId"], [20, 1, 1, "", "ExecAlgorithmId"], [20, 1, 1, "", "Identifier"], [20, 1, 1, "", "InstrumentId"], [20, 1, 1, "", "OrderListId"], [20, 1, 1, "", "PositionId"], [20, 1, 1, "", "StrategyId"], [20, 1, 1, "", "Symbol"], [20, 1, 1, "", "TradeId"], [20, 1, 1, "", "TraderId"], [20, 1, 1, "", "Venue"], [20, 1, 1, "", "VenueOrderId"]], "nautilus_trader.model.identifiers.AccountId": [[20, 2, 1, "", "get_id"], [20, 2, 1, "", "get_issuer"], [20, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.ClientId": [[20, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.ClientOrderId": [[20, 2, 1, "", "is_this_trader"], [20, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.ComponentId": [[20, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.ExecAlgorithmId": [[20, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.Identifier": [[20, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.InstrumentId": [[20, 2, 1, "", "from_str"], [20, 2, 1, "", "is_synthetic"], [20, 3, 1, "", "symbol"], [20, 3, 1, "", "value"], [20, 3, 1, "", "venue"]], "nautilus_trader.model.identifiers.OrderListId": [[20, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.PositionId": [[20, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.StrategyId": [[20, 2, 1, "", "get_tag"], [20, 2, 1, "", "is_external"], [20, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.Symbol": [[20, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.TradeId": [[20, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.TraderId": [[20, 2, 1, "", "get_tag"], [20, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.Venue": [[20, 2, 1, "", "is_synthetic"], [20, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.VenueOrderId": [[20, 3, 1, "", "value"]], "nautilus_trader.model.instruments": [[22, 0, 0, "-", "base"], [22, 0, 0, "-", "betting"], [22, 0, 0, "-", "crypto_future"], [22, 0, 0, "-", "crypto_perpetual"], [22, 0, 0, "-", "currency_pair"], [22, 0, 0, "-", "equity"], [22, 0, 0, "-", "futures_contract"], [22, 0, 0, "-", "options_contract"], [22, 0, 0, "-", "synthetic"]], "nautilus_trader.model.instruments.base": [[22, 1, 1, "", "Instrument"]], "nautilus_trader.model.instruments.base.Instrument": [[22, 3, 1, "", "asset_class"], [22, 3, 1, "", "asset_type"], [22, 2, 1, "", "base_from_dict"], [22, 2, 1, "", "base_to_dict"], [22, 2, 1, "", "calculate_base_quantity"], [22, 2, 1, "", "fully_qualified_name"], [22, 2, 1, "", "get_base_currency"], [22, 2, 1, "", "get_settlement_currency"], [22, 3, 1, "", "id"], [22, 3, 1, "", "info"], [22, 3, 1, "", "is_inverse"], [22, 3, 1, "", "lot_size"], [22, 2, 1, "", "make_price"], [22, 2, 1, "", "make_qty"], [22, 3, 1, "", "maker_fee"], [22, 3, 1, "", "margin_init"], [22, 3, 1, "", "margin_maint"], [22, 3, 1, "", "max_notional"], [22, 3, 1, "", "max_price"], [22, 3, 1, "", "max_quantity"], [22, 3, 1, "", "min_notional"], [22, 3, 1, "", "min_price"], [22, 3, 1, "", "min_quantity"], [22, 3, 1, "", "multiplier"], [22, 3, 1, "", "native_symbol"], [22, 2, 1, "", "next_ask_price"], [22, 2, 1, "", "next_bid_price"], [22, 2, 1, "", "notional_value"], [22, 3, 1, "", "price_increment"], [22, 3, 1, "", "price_precision"], [22, 3, 1, "", "quote_currency"], [22, 3, 1, "", "size_increment"], [22, 3, 1, "", "size_precision"], [22, 3, 1, "", "symbol"], [22, 3, 1, "", "taker_fee"], [22, 3, 1, "", "tick_scheme_name"], [22, 3, 1, "", "ts_event"], [22, 3, 1, "", "ts_init"], [22, 3, 1, "", "venue"]], "nautilus_trader.model.instruments.betting": [[22, 1, 1, "", "BettingInstrument"], [22, 5, 1, "", "make_symbol"]], "nautilus_trader.model.instruments.betting.BettingInstrument": [[22, 3, 1, "", "asset_class"], [22, 3, 1, "", "asset_type"], [22, 2, 1, "", "base_from_dict"], [22, 2, 1, "", "base_to_dict"], [22, 2, 1, "", "calculate_base_quantity"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "fully_qualified_name"], [22, 2, 1, "", "get_base_currency"], [22, 2, 1, "", "get_settlement_currency"], [22, 3, 1, "", "id"], [22, 3, 1, "", "info"], [22, 3, 1, "", "is_inverse"], [22, 3, 1, "", "lot_size"], [22, 2, 1, "", "make_price"], [22, 2, 1, "", "make_qty"], [22, 3, 1, "", "maker_fee"], [22, 3, 1, "", "margin_init"], [22, 3, 1, "", "margin_maint"], [22, 3, 1, "", "max_notional"], [22, 3, 1, "", "max_price"], [22, 3, 1, "", "max_quantity"], [22, 3, 1, "", "min_notional"], [22, 3, 1, "", "min_price"], [22, 3, 1, "", "min_quantity"], [22, 3, 1, "", "multiplier"], [22, 3, 1, "", "native_symbol"], [22, 2, 1, "", "next_ask_price"], [22, 2, 1, "", "next_bid_price"], [22, 2, 1, "", "notional_value"], [22, 3, 1, "", "price_increment"], [22, 3, 1, "", "price_precision"], [22, 3, 1, "", "quote_currency"], [22, 3, 1, "", "size_increment"], [22, 3, 1, "", "size_precision"], [22, 3, 1, "", "symbol"], [22, 3, 1, "", "taker_fee"], [22, 3, 1, "", "tick_scheme_name"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "ts_event"], [22, 3, 1, "", "ts_init"], [22, 3, 1, "", "venue"]], "nautilus_trader.model.instruments.crypto_future": [[22, 1, 1, "", "CryptoFuture"]], "nautilus_trader.model.instruments.crypto_future.CryptoFuture": [[22, 3, 1, "", "asset_class"], [22, 3, 1, "", "asset_type"], [22, 2, 1, "", "base_from_dict"], [22, 2, 1, "", "base_to_dict"], [22, 2, 1, "", "calculate_base_quantity"], [22, 3, 1, "", "expiry_date"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "fully_qualified_name"], [22, 2, 1, "", "get_base_currency"], [22, 2, 1, "", "get_settlement_currency"], [22, 3, 1, "", "id"], [22, 3, 1, "", "info"], [22, 3, 1, "", "is_inverse"], [22, 3, 1, "", "lot_size"], [22, 2, 1, "", "make_price"], [22, 2, 1, "", "make_qty"], [22, 3, 1, "", "maker_fee"], [22, 3, 1, "", "margin_init"], [22, 3, 1, "", "margin_maint"], [22, 3, 1, "", "max_notional"], [22, 3, 1, "", "max_price"], [22, 3, 1, "", "max_quantity"], [22, 3, 1, "", "min_notional"], [22, 3, 1, "", "min_price"], [22, 3, 1, "", "min_quantity"], [22, 3, 1, "", "multiplier"], [22, 3, 1, "", "native_symbol"], [22, 2, 1, "", "next_ask_price"], [22, 2, 1, "", "next_bid_price"], [22, 2, 1, "", "notional_value"], [22, 3, 1, "", "price_increment"], [22, 3, 1, "", "price_precision"], [22, 3, 1, "", "quote_currency"], [22, 3, 1, "", "settlement_currency"], [22, 3, 1, "", "size_increment"], [22, 3, 1, "", "size_precision"], [22, 3, 1, "", "symbol"], [22, 3, 1, "", "taker_fee"], [22, 3, 1, "", "tick_scheme_name"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "ts_event"], [22, 3, 1, "", "ts_init"], [22, 3, 1, "", "underlying"], [22, 3, 1, "", "venue"]], "nautilus_trader.model.instruments.crypto_perpetual": [[22, 1, 1, "", "CryptoPerpetual"]], "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual": [[22, 3, 1, "", "asset_class"], [22, 3, 1, "", "asset_type"], [22, 3, 1, "", "base_currency"], [22, 2, 1, "", "base_from_dict"], [22, 2, 1, "", "base_to_dict"], [22, 2, 1, "", "calculate_base_quantity"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "fully_qualified_name"], [22, 2, 1, "", "get_base_currency"], [22, 2, 1, "", "get_settlement_currency"], [22, 3, 1, "", "id"], [22, 3, 1, "", "info"], [22, 3, 1, "", "is_inverse"], [22, 3, 1, "", "is_quanto"], [22, 3, 1, "", "lot_size"], [22, 2, 1, "", "make_price"], [22, 2, 1, "", "make_qty"], [22, 3, 1, "", "maker_fee"], [22, 3, 1, "", "margin_init"], [22, 3, 1, "", "margin_maint"], [22, 3, 1, "", "max_notional"], [22, 3, 1, "", "max_price"], [22, 3, 1, "", "max_quantity"], [22, 3, 1, "", "min_notional"], [22, 3, 1, "", "min_price"], [22, 3, 1, "", "min_quantity"], [22, 3, 1, "", "multiplier"], [22, 3, 1, "", "native_symbol"], [22, 2, 1, "", "next_ask_price"], [22, 2, 1, "", "next_bid_price"], [22, 2, 1, "", "notional_value"], [22, 3, 1, "", "price_increment"], [22, 3, 1, "", "price_precision"], [22, 3, 1, "", "quote_currency"], [22, 3, 1, "", "settlement_currency"], [22, 3, 1, "", "size_increment"], [22, 3, 1, "", "size_precision"], [22, 3, 1, "", "symbol"], [22, 3, 1, "", "taker_fee"], [22, 3, 1, "", "tick_scheme_name"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "ts_event"], [22, 3, 1, "", "ts_init"], [22, 3, 1, "", "venue"]], "nautilus_trader.model.instruments.currency_pair": [[22, 1, 1, "", "CurrencyPair"]], "nautilus_trader.model.instruments.currency_pair.CurrencyPair": [[22, 3, 1, "", "asset_class"], [22, 3, 1, "", "asset_type"], [22, 3, 1, "", "base_currency"], [22, 2, 1, "", "base_from_dict"], [22, 2, 1, "", "base_to_dict"], [22, 2, 1, "", "calculate_base_quantity"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "fully_qualified_name"], [22, 2, 1, "", "get_base_currency"], [22, 2, 1, "", "get_settlement_currency"], [22, 3, 1, "", "id"], [22, 3, 1, "", "info"], [22, 3, 1, "", "is_inverse"], [22, 3, 1, "", "lot_size"], [22, 2, 1, "", "make_price"], [22, 2, 1, "", "make_qty"], [22, 3, 1, "", "maker_fee"], [22, 3, 1, "", "margin_init"], [22, 3, 1, "", "margin_maint"], [22, 3, 1, "", "max_notional"], [22, 3, 1, "", "max_price"], [22, 3, 1, "", "max_quantity"], [22, 3, 1, "", "min_notional"], [22, 3, 1, "", "min_price"], [22, 3, 1, "", "min_quantity"], [22, 3, 1, "", "multiplier"], [22, 3, 1, "", "native_symbol"], [22, 2, 1, "", "next_ask_price"], [22, 2, 1, "", "next_bid_price"], [22, 2, 1, "", "notional_value"], [22, 3, 1, "", "price_increment"], [22, 3, 1, "", "price_precision"], [22, 3, 1, "", "quote_currency"], [22, 3, 1, "", "size_increment"], [22, 3, 1, "", "size_precision"], [22, 3, 1, "", "symbol"], [22, 3, 1, "", "taker_fee"], [22, 3, 1, "", "tick_scheme_name"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "ts_event"], [22, 3, 1, "", "ts_init"], [22, 3, 1, "", "venue"]], "nautilus_trader.model.instruments.equity": [[22, 1, 1, "", "Equity"]], "nautilus_trader.model.instruments.equity.Equity": [[22, 3, 1, "", "asset_class"], [22, 3, 1, "", "asset_type"], [22, 2, 1, "", "base_from_dict"], [22, 2, 1, "", "base_to_dict"], [22, 2, 1, "", "calculate_base_quantity"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "fully_qualified_name"], [22, 2, 1, "", "get_base_currency"], [22, 2, 1, "", "get_settlement_currency"], [22, 3, 1, "", "id"], [22, 3, 1, "", "info"], [22, 3, 1, "", "is_inverse"], [22, 3, 1, "", "lot_size"], [22, 2, 1, "", "make_price"], [22, 2, 1, "", "make_qty"], [22, 3, 1, "", "maker_fee"], [22, 3, 1, "", "margin_init"], [22, 3, 1, "", "margin_maint"], [22, 3, 1, "", "max_notional"], [22, 3, 1, "", "max_price"], [22, 3, 1, "", "max_quantity"], [22, 3, 1, "", "min_notional"], [22, 3, 1, "", "min_price"], [22, 3, 1, "", "min_quantity"], [22, 3, 1, "", "multiplier"], [22, 3, 1, "", "native_symbol"], [22, 2, 1, "", "next_ask_price"], [22, 2, 1, "", "next_bid_price"], [22, 2, 1, "", "notional_value"], [22, 3, 1, "", "price_increment"], [22, 3, 1, "", "price_precision"], [22, 3, 1, "", "quote_currency"], [22, 3, 1, "", "size_increment"], [22, 3, 1, "", "size_precision"], [22, 3, 1, "", "symbol"], [22, 3, 1, "", "taker_fee"], [22, 3, 1, "", "tick_scheme_name"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "ts_event"], [22, 3, 1, "", "ts_init"], [22, 3, 1, "", "venue"]], "nautilus_trader.model.instruments.futures_contract": [[22, 1, 1, "", "FuturesContract"]], "nautilus_trader.model.instruments.futures_contract.FuturesContract": [[22, 3, 1, "", "asset_class"], [22, 3, 1, "", "asset_type"], [22, 2, 1, "", "base_from_dict"], [22, 2, 1, "", "base_to_dict"], [22, 2, 1, "", "calculate_base_quantity"], [22, 3, 1, "", "expiry_date"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "fully_qualified_name"], [22, 2, 1, "", "get_base_currency"], [22, 2, 1, "", "get_settlement_currency"], [22, 3, 1, "", "id"], [22, 3, 1, "", "info"], [22, 3, 1, "", "is_inverse"], [22, 3, 1, "", "lot_size"], [22, 2, 1, "", "make_price"], [22, 2, 1, "", "make_qty"], [22, 3, 1, "", "maker_fee"], [22, 3, 1, "", "margin_init"], [22, 3, 1, "", "margin_maint"], [22, 3, 1, "", "max_notional"], [22, 3, 1, "", "max_price"], [22, 3, 1, "", "max_quantity"], [22, 3, 1, "", "min_notional"], [22, 3, 1, "", "min_price"], [22, 3, 1, "", "min_quantity"], [22, 3, 1, "", "multiplier"], [22, 3, 1, "", "native_symbol"], [22, 2, 1, "", "next_ask_price"], [22, 2, 1, "", "next_bid_price"], [22, 2, 1, "", "notional_value"], [22, 3, 1, "", "price_increment"], [22, 3, 1, "", "price_precision"], [22, 3, 1, "", "quote_currency"], [22, 3, 1, "", "size_increment"], [22, 3, 1, "", "size_precision"], [22, 3, 1, "", "symbol"], [22, 3, 1, "", "taker_fee"], [22, 3, 1, "", "tick_scheme_name"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "ts_event"], [22, 3, 1, "", "ts_init"], [22, 3, 1, "", "underlying"], [22, 3, 1, "", "venue"]], "nautilus_trader.model.instruments.options_contract": [[22, 1, 1, "", "OptionsContract"]], "nautilus_trader.model.instruments.options_contract.OptionsContract": [[22, 3, 1, "", "asset_class"], [22, 3, 1, "", "asset_type"], [22, 2, 1, "", "base_from_dict"], [22, 2, 1, "", "base_to_dict"], [22, 2, 1, "", "calculate_base_quantity"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "fully_qualified_name"], [22, 2, 1, "", "get_base_currency"], [22, 2, 1, "", "get_settlement_currency"], [22, 3, 1, "", "id"], [22, 3, 1, "", "info"], [22, 3, 1, "", "is_inverse"], [22, 3, 1, "", "lot_size"], [22, 2, 1, "", "make_price"], [22, 2, 1, "", "make_qty"], [22, 3, 1, "", "maker_fee"], [22, 3, 1, "", "margin_init"], [22, 3, 1, "", "margin_maint"], [22, 3, 1, "", "max_notional"], [22, 3, 1, "", "max_price"], [22, 3, 1, "", "max_quantity"], [22, 3, 1, "", "min_notional"], [22, 3, 1, "", "min_price"], [22, 3, 1, "", "min_quantity"], [22, 3, 1, "", "multiplier"], [22, 3, 1, "", "native_symbol"], [22, 2, 1, "", "next_ask_price"], [22, 2, 1, "", "next_bid_price"], [22, 2, 1, "", "notional_value"], [22, 3, 1, "", "price_increment"], [22, 3, 1, "", "price_precision"], [22, 3, 1, "", "quote_currency"], [22, 3, 1, "", "size_increment"], [22, 3, 1, "", "size_precision"], [22, 3, 1, "", "symbol"], [22, 3, 1, "", "taker_fee"], [22, 3, 1, "", "tick_scheme_name"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "ts_event"], [22, 3, 1, "", "ts_init"], [22, 3, 1, "", "venue"]], "nautilus_trader.model.instruments.synthetic": [[22, 1, 1, "", "SyntheticInstrument"]], "nautilus_trader.model.instruments.synthetic.SyntheticInstrument": [[22, 2, 1, "", "calculate"], [22, 2, 1, "", "change_formula"], [22, 3, 1, "", "components"], [22, 3, 1, "", "formula"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "fully_qualified_name"], [22, 3, 1, "", "id"], [22, 3, 1, "", "price_increment"], [22, 3, 1, "", "price_precision"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "ts_event"], [22, 3, 1, "", "ts_init"]], "nautilus_trader.model.objects": [[23, 1, 1, "", "AccountBalance"], [23, 1, 1, "", "MarginBalance"], [23, 1, 1, "", "Money"], [23, 1, 1, "", "Price"], [23, 1, 1, "", "Quantity"]], "nautilus_trader.model.objects.AccountBalance": [[23, 3, 1, "", "currency"], [23, 3, 1, "", "free"], [23, 2, 1, "", "from_dict"], [23, 3, 1, "", "locked"], [23, 2, 1, "", "to_dict"], [23, 3, 1, "", "total"]], "nautilus_trader.model.objects.MarginBalance": [[23, 3, 1, "", "currency"], [23, 2, 1, "", "from_dict"], [23, 3, 1, "", "initial"], [23, 3, 1, "", "instrument_id"], [23, 3, 1, "", "maintenance"], [23, 2, 1, "", "to_dict"]], "nautilus_trader.model.objects.Money": [[23, 2, 1, "", "as_decimal"], [23, 2, 1, "", "as_double"], [23, 3, 1, "", "currency"], [23, 2, 1, "", "from_raw"], [23, 2, 1, "", "from_str"], [23, 2, 1, "", "to_str"]], "nautilus_trader.model.objects.Price": [[23, 2, 1, "", "as_decimal"], [23, 2, 1, "", "as_double"], [23, 2, 1, "", "from_int"], [23, 2, 1, "", "from_raw"], [23, 2, 1, "", "from_str"], [23, 3, 1, "", "precision"], [23, 2, 1, "", "raw_to_f64"]], "nautilus_trader.model.objects.Quantity": [[23, 2, 1, "", "as_decimal"], [23, 2, 1, "", "as_double"], [23, 2, 1, "", "from_int"], [23, 2, 1, "", "from_raw"], [23, 2, 1, "", "from_str"], [23, 3, 1, "", "precision"], [23, 2, 1, "", "raw_to_f64"], [23, 2, 1, "", "to_str"], [23, 2, 1, "", "zero"]], "nautilus_trader.model.orderbook": [[24, 0, 0, "-", "book"]], "nautilus_trader.model.orderbook.book": [[24, 1, 1, "", "OrderBook"]], "nautilus_trader.model.orderbook.book.OrderBook": [[24, 2, 1, "", "add"], [24, 2, 1, "", "apply"], [24, 2, 1, "", "apply_delta"], [24, 2, 1, "", "apply_deltas"], [24, 2, 1, "", "best_ask_price"], [24, 2, 1, "", "best_ask_size"], [24, 2, 1, "", "best_bid_price"], [24, 2, 1, "", "best_bid_size"], [24, 3, 1, "", "book_type"], [24, 2, 1, "", "check_integrity"], [24, 2, 1, "", "clear"], [24, 2, 1, "", "clear_asks"], [24, 2, 1, "", "clear_bids"], [24, 3, 1, "", "count"], [24, 2, 1, "", "delete"], [24, 2, 1, "", "fully_qualified_name"], [24, 3, 1, "", "instrument_id"], [24, 2, 1, "", "midpoint"], [24, 2, 1, "", "pprint"], [24, 2, 1, "", "reset"], [24, 3, 1, "", "sequence"], [24, 2, 1, "", "simulate_fills"], [24, 2, 1, "", "spread"], [24, 3, 1, "", "ts_event"], [24, 3, 1, "", "ts_init"], [24, 3, 1, "", "ts_last"], [24, 2, 1, "", "update"], [24, 2, 1, "", "update_quote_tick"], [24, 2, 1, "", "update_trade_tick"]], "nautilus_trader.model.orders": [[25, 0, 0, "-", "base"], [25, 0, 0, "-", "limit"], [25, 0, 0, "-", "limit_if_touched"], [25, 0, 0, "-", "list"], [25, 0, 0, "-", "market"], [25, 0, 0, "-", "market_if_touched"], [25, 0, 0, "-", "market_to_limit"], [25, 0, 0, "-", "stop_limit"], [25, 0, 0, "-", "stop_market"], [25, 0, 0, "-", "trailing_stop_limit"], [25, 0, 0, "-", "trailing_stop_market"]], "nautilus_trader.model.orders.base": [[25, 1, 1, "", "Order"]], "nautilus_trader.model.orders.base.Order": [[25, 3, 1, "", "account_id"], [25, 2, 1, "", "apply"], [25, 3, 1, "", "avg_px"], [25, 3, 1, "", "client_order_id"], [25, 2, 1, "", "closing_side"], [25, 3, 1, "", "contingency_type"], [25, 3, 1, "", "emulation_trigger"], [25, 3, 1, "", "event_count"], [25, 3, 1, "", "events"], [25, 3, 1, "", "exec_algorithm_id"], [25, 3, 1, "", "exec_algorithm_params"], [25, 3, 1, "", "exec_spawn_id"], [25, 3, 1, "", "filled_qty"], [25, 3, 1, "", "has_price"], [25, 3, 1, "", "has_trigger_price"], [25, 2, 1, "", "info"], [25, 3, 1, "", "init_event"], [25, 3, 1, "", "init_id"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "is_aggressive"], [25, 3, 1, "", "is_buy"], [25, 3, 1, "", "is_canceled"], [25, 3, 1, "", "is_child_order"], [25, 3, 1, "", "is_closed"], [25, 3, 1, "", "is_contingency"], [25, 3, 1, "", "is_emulated"], [25, 3, 1, "", "is_inflight"], [25, 3, 1, "", "is_open"], [25, 3, 1, "", "is_parent_order"], [25, 3, 1, "", "is_passive"], [25, 3, 1, "", "is_pending_cancel"], [25, 3, 1, "", "is_pending_update"], [25, 3, 1, "", "is_post_only"], [25, 3, 1, "", "is_primary"], [25, 3, 1, "", "is_quote_quantity"], [25, 3, 1, "", "is_reduce_only"], [25, 3, 1, "", "is_sell"], [25, 3, 1, "", "is_spawned"], [25, 3, 1, "", "last_event"], [25, 3, 1, "", "last_trade_id"], [25, 3, 1, "", "leaves_qty"], [25, 3, 1, "", "linked_order_ids"], [25, 3, 1, "", "liquidity_side"], [25, 2, 1, "", "opposite_side"], [25, 3, 1, "", "order_list_id"], [25, 3, 1, "", "order_type"], [25, 3, 1, "", "parent_order_id"], [25, 3, 1, "", "position_id"], [25, 3, 1, "", "quantity"], [25, 3, 1, "", "side"], [25, 3, 1, "", "side_string"], [25, 2, 1, "", "signed_decimal_qty"], [25, 3, 1, "", "slippage"], [25, 3, 1, "", "status"], [25, 3, 1, "", "strategy_id"], [25, 3, 1, "", "symbol"], [25, 3, 1, "", "tags"], [25, 3, 1, "", "time_in_force"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "trade_ids"], [25, 3, 1, "", "trader_id"], [25, 3, 1, "", "trigger_instrument_id"], [25, 3, 1, "", "ts_init"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "venue"], [25, 3, 1, "", "venue_order_id"], [25, 3, 1, "", "venue_order_ids"], [25, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.limit": [[25, 1, 1, "", "LimitOrder"]], "nautilus_trader.model.orders.limit.LimitOrder": [[25, 3, 1, "", "account_id"], [25, 2, 1, "", "apply"], [25, 3, 1, "", "avg_px"], [25, 3, 1, "", "client_order_id"], [25, 2, 1, "", "closing_side"], [25, 3, 1, "", "contingency_type"], [25, 3, 1, "", "display_qty"], [25, 3, 1, "", "emulation_trigger"], [25, 3, 1, "", "event_count"], [25, 3, 1, "", "events"], [25, 3, 1, "", "exec_algorithm_id"], [25, 3, 1, "", "exec_algorithm_params"], [25, 3, 1, "", "exec_spawn_id"], [25, 3, 1, "", "expire_time"], [25, 3, 1, "", "expire_time_ns"], [25, 3, 1, "", "filled_qty"], [25, 3, 1, "", "has_price"], [25, 3, 1, "", "has_trigger_price"], [25, 2, 1, "", "info"], [25, 3, 1, "", "init_event"], [25, 3, 1, "", "init_id"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "is_aggressive"], [25, 3, 1, "", "is_buy"], [25, 3, 1, "", "is_canceled"], [25, 3, 1, "", "is_child_order"], [25, 3, 1, "", "is_closed"], [25, 3, 1, "", "is_contingency"], [25, 3, 1, "", "is_emulated"], [25, 3, 1, "", "is_inflight"], [25, 3, 1, "", "is_open"], [25, 3, 1, "", "is_parent_order"], [25, 3, 1, "", "is_passive"], [25, 3, 1, "", "is_pending_cancel"], [25, 3, 1, "", "is_pending_update"], [25, 3, 1, "", "is_post_only"], [25, 3, 1, "", "is_primary"], [25, 3, 1, "", "is_quote_quantity"], [25, 3, 1, "", "is_reduce_only"], [25, 3, 1, "", "is_sell"], [25, 3, 1, "", "is_spawned"], [25, 3, 1, "", "last_event"], [25, 3, 1, "", "last_trade_id"], [25, 3, 1, "", "leaves_qty"], [25, 3, 1, "", "linked_order_ids"], [25, 3, 1, "", "liquidity_side"], [25, 2, 1, "", "opposite_side"], [25, 3, 1, "", "order_list_id"], [25, 3, 1, "", "order_type"], [25, 3, 1, "", "parent_order_id"], [25, 3, 1, "", "position_id"], [25, 3, 1, "", "price"], [25, 3, 1, "", "quantity"], [25, 3, 1, "", "side"], [25, 3, 1, "", "side_string"], [25, 2, 1, "", "signed_decimal_qty"], [25, 3, 1, "", "slippage"], [25, 3, 1, "", "status"], [25, 3, 1, "", "strategy_id"], [25, 3, 1, "", "symbol"], [25, 3, 1, "", "tags"], [25, 3, 1, "", "time_in_force"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "trade_ids"], [25, 3, 1, "", "trader_id"], [25, 2, 1, "", "transform_py"], [25, 3, 1, "", "trigger_instrument_id"], [25, 3, 1, "", "ts_init"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "venue"], [25, 3, 1, "", "venue_order_id"], [25, 3, 1, "", "venue_order_ids"], [25, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.limit_if_touched": [[25, 1, 1, "", "LimitIfTouchedOrder"]], "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder": [[25, 3, 1, "", "account_id"], [25, 2, 1, "", "apply"], [25, 3, 1, "", "avg_px"], [25, 3, 1, "", "client_order_id"], [25, 2, 1, "", "closing_side"], [25, 3, 1, "", "contingency_type"], [25, 3, 1, "", "display_qty"], [25, 3, 1, "", "emulation_trigger"], [25, 3, 1, "", "event_count"], [25, 3, 1, "", "events"], [25, 3, 1, "", "exec_algorithm_id"], [25, 3, 1, "", "exec_algorithm_params"], [25, 3, 1, "", "exec_spawn_id"], [25, 3, 1, "", "expire_time"], [25, 3, 1, "", "expire_time_ns"], [25, 3, 1, "", "filled_qty"], [25, 3, 1, "", "has_price"], [25, 3, 1, "", "has_trigger_price"], [25, 2, 1, "", "info"], [25, 3, 1, "", "init_event"], [25, 3, 1, "", "init_id"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "is_aggressive"], [25, 3, 1, "", "is_buy"], [25, 3, 1, "", "is_canceled"], [25, 3, 1, "", "is_child_order"], [25, 3, 1, "", "is_closed"], [25, 3, 1, "", "is_contingency"], [25, 3, 1, "", "is_emulated"], [25, 3, 1, "", "is_inflight"], [25, 3, 1, "", "is_open"], [25, 3, 1, "", "is_parent_order"], [25, 3, 1, "", "is_passive"], [25, 3, 1, "", "is_pending_cancel"], [25, 3, 1, "", "is_pending_update"], [25, 3, 1, "", "is_post_only"], [25, 3, 1, "", "is_primary"], [25, 3, 1, "", "is_quote_quantity"], [25, 3, 1, "", "is_reduce_only"], [25, 3, 1, "", "is_sell"], [25, 3, 1, "", "is_spawned"], [25, 3, 1, "", "is_triggered"], [25, 3, 1, "", "last_event"], [25, 3, 1, "", "last_trade_id"], [25, 3, 1, "", "leaves_qty"], [25, 3, 1, "", "linked_order_ids"], [25, 3, 1, "", "liquidity_side"], [25, 2, 1, "", "opposite_side"], [25, 3, 1, "", "order_list_id"], [25, 3, 1, "", "order_type"], [25, 3, 1, "", "parent_order_id"], [25, 3, 1, "", "position_id"], [25, 3, 1, "", "price"], [25, 3, 1, "", "quantity"], [25, 3, 1, "", "side"], [25, 3, 1, "", "side_string"], [25, 2, 1, "", "signed_decimal_qty"], [25, 3, 1, "", "slippage"], [25, 3, 1, "", "status"], [25, 3, 1, "", "strategy_id"], [25, 3, 1, "", "symbol"], [25, 3, 1, "", "tags"], [25, 3, 1, "", "time_in_force"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "trade_ids"], [25, 3, 1, "", "trader_id"], [25, 3, 1, "", "trigger_instrument_id"], [25, 3, 1, "", "trigger_price"], [25, 3, 1, "", "trigger_type"], [25, 3, 1, "", "ts_init"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "ts_triggered"], [25, 3, 1, "", "venue"], [25, 3, 1, "", "venue_order_id"], [25, 3, 1, "", "venue_order_ids"], [25, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.list": [[25, 1, 1, "", "OrderList"]], "nautilus_trader.model.orders.list.OrderList": [[25, 3, 1, "", "first"], [25, 3, 1, "", "id"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "orders"], [25, 3, 1, "", "strategy_id"], [25, 3, 1, "", "ts_init"]], "nautilus_trader.model.orders.market": [[25, 1, 1, "", "MarketOrder"]], "nautilus_trader.model.orders.market.MarketOrder": [[25, 3, 1, "", "account_id"], [25, 2, 1, "", "apply"], [25, 3, 1, "", "avg_px"], [25, 3, 1, "", "client_order_id"], [25, 2, 1, "", "closing_side"], [25, 3, 1, "", "contingency_type"], [25, 3, 1, "", "emulation_trigger"], [25, 3, 1, "", "event_count"], [25, 3, 1, "", "events"], [25, 3, 1, "", "exec_algorithm_id"], [25, 3, 1, "", "exec_algorithm_params"], [25, 3, 1, "", "exec_spawn_id"], [25, 3, 1, "", "filled_qty"], [25, 3, 1, "", "has_price"], [25, 3, 1, "", "has_trigger_price"], [25, 2, 1, "", "info"], [25, 3, 1, "", "init_event"], [25, 3, 1, "", "init_id"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "is_aggressive"], [25, 3, 1, "", "is_buy"], [25, 3, 1, "", "is_canceled"], [25, 3, 1, "", "is_child_order"], [25, 3, 1, "", "is_closed"], [25, 3, 1, "", "is_contingency"], [25, 3, 1, "", "is_emulated"], [25, 3, 1, "", "is_inflight"], [25, 3, 1, "", "is_open"], [25, 3, 1, "", "is_parent_order"], [25, 3, 1, "", "is_passive"], [25, 3, 1, "", "is_pending_cancel"], [25, 3, 1, "", "is_pending_update"], [25, 3, 1, "", "is_post_only"], [25, 3, 1, "", "is_primary"], [25, 3, 1, "", "is_quote_quantity"], [25, 3, 1, "", "is_reduce_only"], [25, 3, 1, "", "is_sell"], [25, 3, 1, "", "is_spawned"], [25, 3, 1, "", "last_event"], [25, 3, 1, "", "last_trade_id"], [25, 3, 1, "", "leaves_qty"], [25, 3, 1, "", "linked_order_ids"], [25, 3, 1, "", "liquidity_side"], [25, 2, 1, "", "opposite_side"], [25, 3, 1, "", "order_list_id"], [25, 3, 1, "", "order_type"], [25, 3, 1, "", "parent_order_id"], [25, 3, 1, "", "position_id"], [25, 3, 1, "", "quantity"], [25, 3, 1, "", "side"], [25, 3, 1, "", "side_string"], [25, 2, 1, "", "signed_decimal_qty"], [25, 3, 1, "", "slippage"], [25, 3, 1, "", "status"], [25, 3, 1, "", "strategy_id"], [25, 3, 1, "", "symbol"], [25, 3, 1, "", "tags"], [25, 3, 1, "", "time_in_force"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "trade_ids"], [25, 3, 1, "", "trader_id"], [25, 2, 1, "", "transform_py"], [25, 3, 1, "", "trigger_instrument_id"], [25, 3, 1, "", "ts_init"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "venue"], [25, 3, 1, "", "venue_order_id"], [25, 3, 1, "", "venue_order_ids"], [25, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.market_if_touched": [[25, 1, 1, "", "MarketIfTouchedOrder"]], "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder": [[25, 3, 1, "", "account_id"], [25, 2, 1, "", "apply"], [25, 3, 1, "", "avg_px"], [25, 3, 1, "", "client_order_id"], [25, 2, 1, "", "closing_side"], [25, 3, 1, "", "contingency_type"], [25, 3, 1, "", "emulation_trigger"], [25, 3, 1, "", "event_count"], [25, 3, 1, "", "events"], [25, 3, 1, "", "exec_algorithm_id"], [25, 3, 1, "", "exec_algorithm_params"], [25, 3, 1, "", "exec_spawn_id"], [25, 3, 1, "", "expire_time"], [25, 3, 1, "", "expire_time_ns"], [25, 3, 1, "", "filled_qty"], [25, 3, 1, "", "has_price"], [25, 3, 1, "", "has_trigger_price"], [25, 2, 1, "", "info"], [25, 3, 1, "", "init_event"], [25, 3, 1, "", "init_id"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "is_aggressive"], [25, 3, 1, "", "is_buy"], [25, 3, 1, "", "is_canceled"], [25, 3, 1, "", "is_child_order"], [25, 3, 1, "", "is_closed"], [25, 3, 1, "", "is_contingency"], [25, 3, 1, "", "is_emulated"], [25, 3, 1, "", "is_inflight"], [25, 3, 1, "", "is_open"], [25, 3, 1, "", "is_parent_order"], [25, 3, 1, "", "is_passive"], [25, 3, 1, "", "is_pending_cancel"], [25, 3, 1, "", "is_pending_update"], [25, 3, 1, "", "is_post_only"], [25, 3, 1, "", "is_primary"], [25, 3, 1, "", "is_quote_quantity"], [25, 3, 1, "", "is_reduce_only"], [25, 3, 1, "", "is_sell"], [25, 3, 1, "", "is_spawned"], [25, 3, 1, "", "last_event"], [25, 3, 1, "", "last_trade_id"], [25, 3, 1, "", "leaves_qty"], [25, 3, 1, "", "linked_order_ids"], [25, 3, 1, "", "liquidity_side"], [25, 2, 1, "", "opposite_side"], [25, 3, 1, "", "order_list_id"], [25, 3, 1, "", "order_type"], [25, 3, 1, "", "parent_order_id"], [25, 3, 1, "", "position_id"], [25, 3, 1, "", "quantity"], [25, 3, 1, "", "side"], [25, 3, 1, "", "side_string"], [25, 2, 1, "", "signed_decimal_qty"], [25, 3, 1, "", "slippage"], [25, 3, 1, "", "status"], [25, 3, 1, "", "strategy_id"], [25, 3, 1, "", "symbol"], [25, 3, 1, "", "tags"], [25, 3, 1, "", "time_in_force"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "trade_ids"], [25, 3, 1, "", "trader_id"], [25, 3, 1, "", "trigger_instrument_id"], [25, 3, 1, "", "trigger_price"], [25, 3, 1, "", "trigger_type"], [25, 3, 1, "", "ts_init"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "venue"], [25, 3, 1, "", "venue_order_id"], [25, 3, 1, "", "venue_order_ids"], [25, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.market_to_limit": [[25, 1, 1, "", "MarketToLimitOrder"]], "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder": [[25, 3, 1, "", "account_id"], [25, 2, 1, "", "apply"], [25, 3, 1, "", "avg_px"], [25, 3, 1, "", "client_order_id"], [25, 2, 1, "", "closing_side"], [25, 3, 1, "", "contingency_type"], [25, 3, 1, "", "display_qty"], [25, 3, 1, "", "emulation_trigger"], [25, 3, 1, "", "event_count"], [25, 3, 1, "", "events"], [25, 3, 1, "", "exec_algorithm_id"], [25, 3, 1, "", "exec_algorithm_params"], [25, 3, 1, "", "exec_spawn_id"], [25, 3, 1, "", "expire_time"], [25, 3, 1, "", "expire_time_ns"], [25, 3, 1, "", "filled_qty"], [25, 3, 1, "", "has_price"], [25, 3, 1, "", "has_trigger_price"], [25, 2, 1, "", "info"], [25, 3, 1, "", "init_event"], [25, 3, 1, "", "init_id"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "is_aggressive"], [25, 3, 1, "", "is_buy"], [25, 3, 1, "", "is_canceled"], [25, 3, 1, "", "is_child_order"], [25, 3, 1, "", "is_closed"], [25, 3, 1, "", "is_contingency"], [25, 3, 1, "", "is_emulated"], [25, 3, 1, "", "is_inflight"], [25, 3, 1, "", "is_open"], [25, 3, 1, "", "is_parent_order"], [25, 3, 1, "", "is_passive"], [25, 3, 1, "", "is_pending_cancel"], [25, 3, 1, "", "is_pending_update"], [25, 3, 1, "", "is_post_only"], [25, 3, 1, "", "is_primary"], [25, 3, 1, "", "is_quote_quantity"], [25, 3, 1, "", "is_reduce_only"], [25, 3, 1, "", "is_sell"], [25, 3, 1, "", "is_spawned"], [25, 3, 1, "", "last_event"], [25, 3, 1, "", "last_trade_id"], [25, 3, 1, "", "leaves_qty"], [25, 3, 1, "", "linked_order_ids"], [25, 3, 1, "", "liquidity_side"], [25, 2, 1, "", "opposite_side"], [25, 3, 1, "", "order_list_id"], [25, 3, 1, "", "order_type"], [25, 3, 1, "", "parent_order_id"], [25, 3, 1, "", "position_id"], [25, 3, 1, "", "price"], [25, 3, 1, "", "quantity"], [25, 3, 1, "", "side"], [25, 3, 1, "", "side_string"], [25, 2, 1, "", "signed_decimal_qty"], [25, 3, 1, "", "slippage"], [25, 3, 1, "", "status"], [25, 3, 1, "", "strategy_id"], [25, 3, 1, "", "symbol"], [25, 3, 1, "", "tags"], [25, 3, 1, "", "time_in_force"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "trade_ids"], [25, 3, 1, "", "trader_id"], [25, 3, 1, "", "trigger_instrument_id"], [25, 3, 1, "", "ts_init"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "venue"], [25, 3, 1, "", "venue_order_id"], [25, 3, 1, "", "venue_order_ids"], [25, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.stop_limit": [[25, 1, 1, "", "StopLimitOrder"]], "nautilus_trader.model.orders.stop_limit.StopLimitOrder": [[25, 3, 1, "", "account_id"], [25, 2, 1, "", "apply"], [25, 3, 1, "", "avg_px"], [25, 3, 1, "", "client_order_id"], [25, 2, 1, "", "closing_side"], [25, 3, 1, "", "contingency_type"], [25, 3, 1, "", "display_qty"], [25, 3, 1, "", "emulation_trigger"], [25, 3, 1, "", "event_count"], [25, 3, 1, "", "events"], [25, 3, 1, "", "exec_algorithm_id"], [25, 3, 1, "", "exec_algorithm_params"], [25, 3, 1, "", "exec_spawn_id"], [25, 3, 1, "", "expire_time"], [25, 3, 1, "", "expire_time_ns"], [25, 3, 1, "", "filled_qty"], [25, 3, 1, "", "has_price"], [25, 3, 1, "", "has_trigger_price"], [25, 2, 1, "", "info"], [25, 3, 1, "", "init_event"], [25, 3, 1, "", "init_id"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "is_aggressive"], [25, 3, 1, "", "is_buy"], [25, 3, 1, "", "is_canceled"], [25, 3, 1, "", "is_child_order"], [25, 3, 1, "", "is_closed"], [25, 3, 1, "", "is_contingency"], [25, 3, 1, "", "is_emulated"], [25, 3, 1, "", "is_inflight"], [25, 3, 1, "", "is_open"], [25, 3, 1, "", "is_parent_order"], [25, 3, 1, "", "is_passive"], [25, 3, 1, "", "is_pending_cancel"], [25, 3, 1, "", "is_pending_update"], [25, 3, 1, "", "is_post_only"], [25, 3, 1, "", "is_primary"], [25, 3, 1, "", "is_quote_quantity"], [25, 3, 1, "", "is_reduce_only"], [25, 3, 1, "", "is_sell"], [25, 3, 1, "", "is_spawned"], [25, 3, 1, "", "is_triggered"], [25, 3, 1, "", "last_event"], [25, 3, 1, "", "last_trade_id"], [25, 3, 1, "", "leaves_qty"], [25, 3, 1, "", "linked_order_ids"], [25, 3, 1, "", "liquidity_side"], [25, 2, 1, "", "opposite_side"], [25, 3, 1, "", "order_list_id"], [25, 3, 1, "", "order_type"], [25, 3, 1, "", "parent_order_id"], [25, 3, 1, "", "position_id"], [25, 3, 1, "", "price"], [25, 3, 1, "", "quantity"], [25, 3, 1, "", "side"], [25, 3, 1, "", "side_string"], [25, 2, 1, "", "signed_decimal_qty"], [25, 3, 1, "", "slippage"], [25, 3, 1, "", "status"], [25, 3, 1, "", "strategy_id"], [25, 3, 1, "", "symbol"], [25, 3, 1, "", "tags"], [25, 3, 1, "", "time_in_force"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "trade_ids"], [25, 3, 1, "", "trader_id"], [25, 3, 1, "", "trigger_instrument_id"], [25, 3, 1, "", "trigger_price"], [25, 3, 1, "", "trigger_type"], [25, 3, 1, "", "ts_init"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "ts_triggered"], [25, 3, 1, "", "venue"], [25, 3, 1, "", "venue_order_id"], [25, 3, 1, "", "venue_order_ids"], [25, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.stop_market": [[25, 1, 1, "", "StopMarketOrder"]], "nautilus_trader.model.orders.stop_market.StopMarketOrder": [[25, 3, 1, "", "account_id"], [25, 2, 1, "", "apply"], [25, 3, 1, "", "avg_px"], [25, 3, 1, "", "client_order_id"], [25, 2, 1, "", "closing_side"], [25, 3, 1, "", "contingency_type"], [25, 3, 1, "", "emulation_trigger"], [25, 3, 1, "", "event_count"], [25, 3, 1, "", "events"], [25, 3, 1, "", "exec_algorithm_id"], [25, 3, 1, "", "exec_algorithm_params"], [25, 3, 1, "", "exec_spawn_id"], [25, 3, 1, "", "expire_time"], [25, 3, 1, "", "expire_time_ns"], [25, 3, 1, "", "filled_qty"], [25, 3, 1, "", "has_price"], [25, 3, 1, "", "has_trigger_price"], [25, 2, 1, "", "info"], [25, 3, 1, "", "init_event"], [25, 3, 1, "", "init_id"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "is_aggressive"], [25, 3, 1, "", "is_buy"], [25, 3, 1, "", "is_canceled"], [25, 3, 1, "", "is_child_order"], [25, 3, 1, "", "is_closed"], [25, 3, 1, "", "is_contingency"], [25, 3, 1, "", "is_emulated"], [25, 3, 1, "", "is_inflight"], [25, 3, 1, "", "is_open"], [25, 3, 1, "", "is_parent_order"], [25, 3, 1, "", "is_passive"], [25, 3, 1, "", "is_pending_cancel"], [25, 3, 1, "", "is_pending_update"], [25, 3, 1, "", "is_post_only"], [25, 3, 1, "", "is_primary"], [25, 3, 1, "", "is_quote_quantity"], [25, 3, 1, "", "is_reduce_only"], [25, 3, 1, "", "is_sell"], [25, 3, 1, "", "is_spawned"], [25, 3, 1, "", "last_event"], [25, 3, 1, "", "last_trade_id"], [25, 3, 1, "", "leaves_qty"], [25, 3, 1, "", "linked_order_ids"], [25, 3, 1, "", "liquidity_side"], [25, 2, 1, "", "opposite_side"], [25, 3, 1, "", "order_list_id"], [25, 3, 1, "", "order_type"], [25, 3, 1, "", "parent_order_id"], [25, 3, 1, "", "position_id"], [25, 3, 1, "", "quantity"], [25, 3, 1, "", "side"], [25, 3, 1, "", "side_string"], [25, 2, 1, "", "signed_decimal_qty"], [25, 3, 1, "", "slippage"], [25, 3, 1, "", "status"], [25, 3, 1, "", "strategy_id"], [25, 3, 1, "", "symbol"], [25, 3, 1, "", "tags"], [25, 3, 1, "", "time_in_force"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "trade_ids"], [25, 3, 1, "", "trader_id"], [25, 3, 1, "", "trigger_instrument_id"], [25, 3, 1, "", "trigger_price"], [25, 3, 1, "", "trigger_type"], [25, 3, 1, "", "ts_init"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "venue"], [25, 3, 1, "", "venue_order_id"], [25, 3, 1, "", "venue_order_ids"], [25, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.trailing_stop_limit": [[25, 1, 1, "", "TrailingStopLimitOrder"]], "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder": [[25, 3, 1, "", "account_id"], [25, 2, 1, "", "apply"], [25, 3, 1, "", "avg_px"], [25, 3, 1, "", "client_order_id"], [25, 2, 1, "", "closing_side"], [25, 3, 1, "", "contingency_type"], [25, 3, 1, "", "display_qty"], [25, 3, 1, "", "emulation_trigger"], [25, 3, 1, "", "event_count"], [25, 3, 1, "", "events"], [25, 3, 1, "", "exec_algorithm_id"], [25, 3, 1, "", "exec_algorithm_params"], [25, 3, 1, "", "exec_spawn_id"], [25, 3, 1, "", "expire_time"], [25, 3, 1, "", "expire_time_ns"], [25, 3, 1, "", "filled_qty"], [25, 3, 1, "", "has_price"], [25, 3, 1, "", "has_trigger_price"], [25, 2, 1, "", "info"], [25, 3, 1, "", "init_event"], [25, 3, 1, "", "init_id"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "is_aggressive"], [25, 3, 1, "", "is_buy"], [25, 3, 1, "", "is_canceled"], [25, 3, 1, "", "is_child_order"], [25, 3, 1, "", "is_closed"], [25, 3, 1, "", "is_contingency"], [25, 3, 1, "", "is_emulated"], [25, 3, 1, "", "is_inflight"], [25, 3, 1, "", "is_open"], [25, 3, 1, "", "is_parent_order"], [25, 3, 1, "", "is_passive"], [25, 3, 1, "", "is_pending_cancel"], [25, 3, 1, "", "is_pending_update"], [25, 3, 1, "", "is_post_only"], [25, 3, 1, "", "is_primary"], [25, 3, 1, "", "is_quote_quantity"], [25, 3, 1, "", "is_reduce_only"], [25, 3, 1, "", "is_sell"], [25, 3, 1, "", "is_spawned"], [25, 3, 1, "", "is_triggered"], [25, 3, 1, "", "last_event"], [25, 3, 1, "", "last_trade_id"], [25, 3, 1, "", "leaves_qty"], [25, 3, 1, "", "limit_offset"], [25, 3, 1, "", "linked_order_ids"], [25, 3, 1, "", "liquidity_side"], [25, 2, 1, "", "opposite_side"], [25, 3, 1, "", "order_list_id"], [25, 3, 1, "", "order_type"], [25, 3, 1, "", "parent_order_id"], [25, 3, 1, "", "position_id"], [25, 3, 1, "", "price"], [25, 3, 1, "", "quantity"], [25, 3, 1, "", "side"], [25, 3, 1, "", "side_string"], [25, 2, 1, "", "signed_decimal_qty"], [25, 3, 1, "", "slippage"], [25, 3, 1, "", "status"], [25, 3, 1, "", "strategy_id"], [25, 3, 1, "", "symbol"], [25, 3, 1, "", "tags"], [25, 3, 1, "", "time_in_force"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "trade_ids"], [25, 3, 1, "", "trader_id"], [25, 3, 1, "", "trailing_offset"], [25, 3, 1, "", "trailing_offset_type"], [25, 3, 1, "", "trigger_instrument_id"], [25, 3, 1, "", "trigger_price"], [25, 3, 1, "", "trigger_type"], [25, 3, 1, "", "ts_init"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "ts_triggered"], [25, 3, 1, "", "venue"], [25, 3, 1, "", "venue_order_id"], [25, 3, 1, "", "venue_order_ids"], [25, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.trailing_stop_market": [[25, 1, 1, "", "TrailingStopMarketOrder"]], "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder": [[25, 3, 1, "", "account_id"], [25, 2, 1, "", "apply"], [25, 3, 1, "", "avg_px"], [25, 3, 1, "", "client_order_id"], [25, 2, 1, "", "closing_side"], [25, 3, 1, "", "contingency_type"], [25, 3, 1, "", "emulation_trigger"], [25, 3, 1, "", "event_count"], [25, 3, 1, "", "events"], [25, 3, 1, "", "exec_algorithm_id"], [25, 3, 1, "", "exec_algorithm_params"], [25, 3, 1, "", "exec_spawn_id"], [25, 3, 1, "", "expire_time"], [25, 3, 1, "", "expire_time_ns"], [25, 3, 1, "", "filled_qty"], [25, 3, 1, "", "has_price"], [25, 3, 1, "", "has_trigger_price"], [25, 2, 1, "", "info"], [25, 3, 1, "", "init_event"], [25, 3, 1, "", "init_id"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "is_aggressive"], [25, 3, 1, "", "is_buy"], [25, 3, 1, "", "is_canceled"], [25, 3, 1, "", "is_child_order"], [25, 3, 1, "", "is_closed"], [25, 3, 1, "", "is_contingency"], [25, 3, 1, "", "is_emulated"], [25, 3, 1, "", "is_inflight"], [25, 3, 1, "", "is_open"], [25, 3, 1, "", "is_parent_order"], [25, 3, 1, "", "is_passive"], [25, 3, 1, "", "is_pending_cancel"], [25, 3, 1, "", "is_pending_update"], [25, 3, 1, "", "is_post_only"], [25, 3, 1, "", "is_primary"], [25, 3, 1, "", "is_quote_quantity"], [25, 3, 1, "", "is_reduce_only"], [25, 3, 1, "", "is_sell"], [25, 3, 1, "", "is_spawned"], [25, 3, 1, "", "last_event"], [25, 3, 1, "", "last_trade_id"], [25, 3, 1, "", "leaves_qty"], [25, 3, 1, "", "linked_order_ids"], [25, 3, 1, "", "liquidity_side"], [25, 2, 1, "", "opposite_side"], [25, 3, 1, "", "order_list_id"], [25, 3, 1, "", "order_type"], [25, 3, 1, "", "parent_order_id"], [25, 3, 1, "", "position_id"], [25, 3, 1, "", "quantity"], [25, 3, 1, "", "side"], [25, 3, 1, "", "side_string"], [25, 2, 1, "", "signed_decimal_qty"], [25, 3, 1, "", "slippage"], [25, 3, 1, "", "status"], [25, 3, 1, "", "strategy_id"], [25, 3, 1, "", "symbol"], [25, 3, 1, "", "tags"], [25, 3, 1, "", "time_in_force"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "trade_ids"], [25, 3, 1, "", "trader_id"], [25, 3, 1, "", "trailing_offset"], [25, 3, 1, "", "trailing_offset_type"], [25, 3, 1, "", "trigger_instrument_id"], [25, 3, 1, "", "trigger_price"], [25, 3, 1, "", "trigger_type"], [25, 3, 1, "", "ts_init"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "venue"], [25, 3, 1, "", "venue_order_id"], [25, 3, 1, "", "venue_order_ids"], [25, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.position": [[26, 1, 1, "", "Position"]], "nautilus_trader.model.position.Position": [[26, 3, 1, "", "account_id"], [26, 2, 1, "", "apply"], [26, 3, 1, "", "avg_px_close"], [26, 3, 1, "", "avg_px_open"], [26, 3, 1, "", "base_currency"], [26, 2, 1, "", "calculate_pnl"], [26, 3, 1, "", "client_order_ids"], [26, 3, 1, "", "closing_order_id"], [26, 2, 1, "", "commissions"], [26, 3, 1, "", "cost_currency"], [26, 3, 1, "", "duration_ns"], [26, 3, 1, "", "entry"], [26, 3, 1, "", "event_count"], [26, 3, 1, "", "events"], [26, 3, 1, "", "id"], [26, 2, 1, "", "info"], [26, 3, 1, "", "instrument_id"], [26, 3, 1, "", "is_closed"], [26, 3, 1, "", "is_inverse"], [26, 3, 1, "", "is_long"], [26, 3, 1, "", "is_open"], [26, 2, 1, "", "is_opposite_side"], [26, 3, 1, "", "is_short"], [26, 3, 1, "", "last_event"], [26, 3, 1, "", "last_trade_id"], [26, 3, 1, "", "multiplier"], [26, 2, 1, "", "notional_value"], [26, 3, 1, "", "opening_order_id"], [26, 3, 1, "", "peak_qty"], [26, 3, 1, "", "price_precision"], [26, 3, 1, "", "quantity"], [26, 3, 1, "", "quote_currency"], [26, 3, 1, "", "realized_pnl"], [26, 3, 1, "", "realized_return"], [26, 3, 1, "", "side"], [26, 2, 1, "", "side_from_order_side"], [26, 2, 1, "", "signed_decimal_qty"], [26, 3, 1, "", "signed_qty"], [26, 3, 1, "", "size_precision"], [26, 3, 1, "", "strategy_id"], [26, 3, 1, "", "symbol"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "total_pnl"], [26, 3, 1, "", "trade_ids"], [26, 3, 1, "", "trader_id"], [26, 3, 1, "", "ts_closed"], [26, 3, 1, "", "ts_init"], [26, 3, 1, "", "ts_last"], [26, 3, 1, "", "ts_opened"], [26, 2, 1, "", "unrealized_pnl"], [26, 3, 1, "", "venue"], [26, 3, 1, "", "venue_order_ids"]], "nautilus_trader.model.tick_scheme": [[27, 0, 0, "-", "base"]], "nautilus_trader.model.tick_scheme.base": [[27, 1, 1, "", "TickScheme"], [27, 5, 1, "", "get_tick_scheme"], [27, 5, 1, "", "list_tick_schemes"], [27, 5, 1, "", "register_tick_scheme"], [27, 5, 1, "", "round_down"], [27, 5, 1, "", "round_up"]], "nautilus_trader.model.tick_scheme.base.TickScheme": [[27, 3, 1, "", "max_price"], [27, 3, 1, "", "min_price"], [27, 3, 1, "", "name"], [27, 2, 1, "", "next_ask_price"], [27, 2, 1, "", "next_bid_price"]], "nautilus_trader.model.tick_scheme.implementations": [[27, 0, 0, "-", "fixed"], [27, 0, 0, "-", "tiered"]], "nautilus_trader.model.tick_scheme.implementations.fixed": [[27, 1, 1, "", "FixedTickScheme"]], "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme": [[27, 3, 1, "", "increment"], [27, 3, 1, "", "max_price"], [27, 3, 1, "", "min_price"], [27, 3, 1, "", "name"], [27, 2, 1, "", "next_ask_price"], [27, 2, 1, "", "next_bid_price"], [27, 3, 1, "", "price_precision"]], "nautilus_trader.model.tick_scheme.implementations.tiered": [[27, 1, 1, "", "TieredTickScheme"]], "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme": [[27, 2, 1, "", "find_tick_index"], [27, 3, 1, "", "max_price"], [27, 3, 1, "", "min_price"], [27, 3, 1, "", "name"], [27, 2, 1, "", "next_ask_price"], [27, 2, 1, "", "next_bid_price"]], "nautilus_trader.msgbus": [[28, 0, 0, "-", "bus"], [28, 0, 0, "-", "subscription"]], "nautilus_trader.msgbus.bus": [[28, 1, 1, "", "MessageBus"], [28, 5, 1, "", "is_matching_py"]], "nautilus_trader.msgbus.bus.MessageBus": [[28, 2, 1, "", "deregister"], [28, 2, 1, "", "endpoints"], [28, 2, 1, "", "has_subscribers"], [28, 2, 1, "", "is_pending_request"], [28, 2, 1, "", "is_subscribed"], [28, 3, 1, "", "pub_count"], [28, 2, 1, "", "publish"], [28, 2, 1, "", "register"], [28, 3, 1, "", "req_count"], [28, 2, 1, "", "request"], [28, 3, 1, "", "res_count"], [28, 2, 1, "", "response"], [28, 2, 1, "", "send"], [28, 3, 1, "", "sent_count"], [28, 2, 1, "", "subscribe"], [28, 2, 1, "", "subscriptions"], [28, 2, 1, "", "topics"], [28, 3, 1, "", "trader_id"], [28, 2, 1, "", "unsubscribe"]], "nautilus_trader.msgbus.subscription": [[28, 1, 1, "", "Subscription"]], "nautilus_trader.msgbus.subscription.Subscription": [[28, 3, 1, "", "handler"], [28, 3, 1, "", "priority"], [28, 3, 1, "", "topic"]], "nautilus_trader.persistence.catalog": [[29, 0, 0, "-", "base"], [29, 0, 0, "-", "parquet"]], "nautilus_trader.persistence.catalog.base": [[29, 1, 1, "", "BaseDataCatalog"]], "nautilus_trader.persistence.catalog.parquet": [[29, 1, 1, "", "ParquetDataCatalog"]], "nautilus_trader.persistence.external": [[29, 0, 0, "-", "readers"]], "nautilus_trader.persistence.external.readers": [[29, 1, 1, "", "ByteReader"], [29, 1, 1, "", "CSVReader"], [29, 1, 1, "", "LinePreprocessor"], [29, 1, 1, "", "ParquetReader"], [29, 1, 1, "", "Reader"], [29, 1, 1, "", "TextReader"]], "nautilus_trader.persistence.streaming": [[29, 0, 0, "-", "batching"], [29, 0, 0, "-", "engine"], [29, 0, 0, "-", "writer"]], "nautilus_trader.persistence.streaming.engine": [[29, 1, 1, "", "StreamingEngine"], [29, 5, 1, "", "extract_generic_data_client_ids"]], "nautilus_trader.persistence.streaming.writer": [[29, 1, 1, "", "StreamingFeatherWriter"], [29, 5, 1, "", "generate_signal_class"]], "nautilus_trader.persistence.streaming.writer.StreamingFeatherWriter": [[29, 2, 1, "", "check_flush"], [29, 2, 1, "", "close"], [29, 2, 1, "", "flush"], [29, 2, 1, "", "write"]], "nautilus_trader.persistence": [[29, 0, 0, "-", "wranglers"]], "nautilus_trader.persistence.wranglers": [[29, 1, 1, "", "BarDataWrangler"], [29, 1, 1, "", "QuoteTickDataWrangler"], [29, 1, 1, "", "TradeTickDataWrangler"], [29, 5, 1, "", "list_from_capsule"]], "nautilus_trader.persistence.wranglers.BarDataWrangler": [[29, 2, 1, "", "process"]], "nautilus_trader.persistence.wranglers.QuoteTickDataWrangler": [[29, 2, 1, "", "process"], [29, 2, 1, "", "process_bar_data"]], "nautilus_trader.persistence.wranglers.TradeTickDataWrangler": [[29, 2, 1, "", "process"]], "nautilus_trader.portfolio": [[30, 0, 0, "-", "base"], [30, 0, 0, "-", "portfolio"]], "nautilus_trader.portfolio.base": [[30, 1, 1, "", "PortfolioFacade"]], "nautilus_trader.portfolio.base.PortfolioFacade": [[30, 2, 1, "", "account"], [30, 3, 1, "", "analyzer"], [30, 2, 1, "", "balances_locked"], [30, 3, 1, "", "initialized"], [30, 2, 1, "", "is_completely_flat"], [30, 2, 1, "", "is_flat"], [30, 2, 1, "", "is_net_long"], [30, 2, 1, "", "is_net_short"], [30, 2, 1, "", "margins_init"], [30, 2, 1, "", "margins_maint"], [30, 2, 1, "", "net_exposure"], [30, 2, 1, "", "net_exposures"], [30, 2, 1, "", "net_position"], [30, 2, 1, "", "unrealized_pnl"], [30, 2, 1, "", "unrealized_pnls"]], "nautilus_trader.portfolio.portfolio": [[30, 1, 1, "", "Portfolio"]], "nautilus_trader.portfolio.portfolio.Portfolio": [[30, 2, 1, "", "account"], [30, 3, 1, "", "analyzer"], [30, 2, 1, "", "balances_locked"], [30, 2, 1, "", "initialize_orders"], [30, 2, 1, "", "initialize_positions"], [30, 3, 1, "", "initialized"], [30, 2, 1, "", "is_completely_flat"], [30, 2, 1, "", "is_flat"], [30, 2, 1, "", "is_net_long"], [30, 2, 1, "", "is_net_short"], [30, 2, 1, "", "margins_init"], [30, 2, 1, "", "margins_maint"], [30, 2, 1, "", "net_exposure"], [30, 2, 1, "", "net_exposures"], [30, 2, 1, "", "net_position"], [30, 2, 1, "", "reset"], [30, 2, 1, "", "set_specific_venue"], [30, 2, 1, "", "unrealized_pnl"], [30, 2, 1, "", "unrealized_pnls"], [30, 2, 1, "", "update_account"], [30, 2, 1, "", "update_order"], [30, 2, 1, "", "update_position"], [30, 2, 1, "", "update_quote_tick"]], "nautilus_trader.risk": [[31, 0, 0, "-", "engine"], [31, 0, 0, "-", "sizing"]], "nautilus_trader.risk.engine": [[31, 1, 1, "", "RiskEngine"]], "nautilus_trader.risk.engine.RiskEngine": [[31, 3, 1, "", "command_count"], [31, 3, 1, "", "debug"], [31, 2, 1, "", "degrade"], [31, 2, 1, "", "dispose"], [31, 3, 1, "", "event_count"], [31, 2, 1, "", "execute"], [31, 2, 1, "", "fault"], [31, 2, 1, "", "fully_qualified_name"], [31, 3, 1, "", "id"], [31, 3, 1, "", "is_bypassed"], [31, 3, 1, "", "is_degraded"], [31, 3, 1, "", "is_disposed"], [31, 3, 1, "", "is_faulted"], [31, 3, 1, "", "is_initialized"], [31, 3, 1, "", "is_running"], [31, 3, 1, "", "is_stopped"], [31, 2, 1, "", "max_notional_per_order"], [31, 2, 1, "", "max_notionals_per_order"], [31, 2, 1, "", "max_order_modify_rate"], [31, 2, 1, "", "max_order_submit_rate"], [31, 2, 1, "", "process"], [31, 2, 1, "", "reset"], [31, 2, 1, "", "resume"], [31, 2, 1, "", "set_max_notional_per_order"], [31, 2, 1, "", "set_trading_state"], [31, 2, 1, "", "start"], [31, 3, 1, "", "state"], [31, 2, 1, "", "stop"], [31, 3, 1, "", "trader_id"], [31, 3, 1, "", "trading_state"], [31, 3, 1, "", "type"]], "nautilus_trader.risk.sizing": [[31, 1, 1, "", "FixedRiskSizer"], [31, 1, 1, "", "PositionSizer"]], "nautilus_trader.risk.sizing.FixedRiskSizer": [[31, 2, 1, "", "calculate"], [31, 3, 1, "", "instrument"], [31, 2, 1, "", "update_instrument"]], "nautilus_trader.risk.sizing.PositionSizer": [[31, 2, 1, "", "calculate"], [31, 3, 1, "", "instrument"], [31, 2, 1, "", "update_instrument"]], "nautilus_trader.serialization.arrow": [[32, 0, 0, "-", "serializer"]], "nautilus_trader.serialization.arrow.serializer": [[32, 1, 1, "", "ParquetSerializer"], [32, 5, 1, "", "get_cls_table"], [32, 5, 1, "", "get_partition_keys"], [32, 5, 1, "", "get_schema"], [32, 5, 1, "", "list_schemas"], [32, 5, 1, "", "register_parquet"]], "nautilus_trader.serialization.arrow.serializer.ParquetSerializer": [[32, 2, 1, "", "deserialize"], [32, 2, 1, "", "serialize"]], "nautilus_trader.serialization": [[32, 0, 0, "-", "base"]], "nautilus_trader.serialization.base": [[32, 1, 1, "", "Serializer"], [32, 5, 1, "", "register_serializable_object"]], "nautilus_trader.serialization.base.Serializer": [[32, 2, 1, "", "deserialize"], [32, 2, 1, "", "serialize"]], "nautilus_trader.serialization.msgpack": [[32, 0, 0, "-", "serializer"]], "nautilus_trader.serialization.msgpack.serializer": [[32, 1, 1, "", "MsgPackSerializer"]], "nautilus_trader.serialization.msgpack.serializer.MsgPackSerializer": [[32, 2, 1, "", "deserialize"], [32, 2, 1, "", "serialize"], [32, 3, 1, "", "timestamps_as_iso8601"], [32, 3, 1, "", "timestamps_as_str"]], "nautilus_trader.system": [[33, 0, 0, "-", "kernel"]], "nautilus_trader.system.kernel": [[33, 1, 1, "", "NautilusKernel"]], "nautilus_trader.system.kernel.NautilusKernel": [[33, 4, 1, "", "cache"], [33, 4, 1, "", "catalog"], [33, 4, 1, "", "clock"], [33, 4, 1, "", "data_engine"], [33, 2, 1, "", "dispose"], [33, 4, 1, "", "emulator"], [33, 4, 1, "", "environment"], [33, 4, 1, "", "exec_engine"], [33, 4, 1, "", "executor"], [33, 4, 1, "", "instance_id"], [33, 4, 1, "", "load_state"], [33, 4, 1, "", "log"], [33, 4, 1, "", "logger"], [33, 4, 1, "", "loop"], [33, 4, 1, "", "loop_sig_callback"], [33, 4, 1, "", "machine_id"], [33, 4, 1, "", "msgbus"], [33, 4, 1, "", "name"], [33, 4, 1, "", "portfolio"], [33, 4, 1, "", "risk_engine"], [33, 4, 1, "", "save_state"], [33, 4, 1, "", "trader"], [33, 4, 1, "", "trader_id"], [33, 4, 1, "", "ts_created"], [33, 4, 1, "", "writer"]], "nautilus_trader.trading": [[34, 0, 0, "-", "filters"], [34, 0, 0, "-", "strategy"], [34, 0, 0, "-", "trader"]], "nautilus_trader.trading.filters": [[34, 1, 1, "", "EconomicNewsEventFilter"], [34, 1, 1, "", "ForexSession"], [34, 1, 1, "", "ForexSessionFilter"], [34, 1, 1, "", "NewsEvent"], [34, 1, 1, "", "NewsImpact"]], "nautilus_trader.trading.filters.EconomicNewsEventFilter": [[34, 4, 1, "", "currencies"], [34, 4, 1, "", "impacts"], [34, 2, 1, "", "next_event"], [34, 2, 1, "", "prev_event"], [34, 4, 1, "", "unfiltered_data_end"], [34, 4, 1, "", "unfiltered_data_start"]], "nautilus_trader.trading.filters.ForexSessionFilter": [[34, 2, 1, "", "local_from_utc"], [34, 2, 1, "", "next_end"], [34, 2, 1, "", "next_start"], [34, 2, 1, "", "prev_end"], [34, 2, 1, "", "prev_start"]], "nautilus_trader.trading.filters.NewsEvent": [[34, 2, 1, "", "fully_qualified_name"], [34, 4, 1, "", "ts_event"], [34, 4, 1, "", "ts_init"]], "nautilus_trader.trading.strategy": [[34, 1, 1, "", "Strategy"]], "nautilus_trader.trading.strategy.Strategy": [[34, 2, 1, "", "add_synthetic"], [34, 3, 1, "", "cache"], [34, 2, 1, "", "cancel_all_orders"], [34, 2, 1, "", "cancel_gtd_expiry"], [34, 2, 1, "", "cancel_order"], [34, 3, 1, "", "clock"], [34, 2, 1, "", "close_all_positions"], [34, 2, 1, "", "close_position"], [34, 3, 1, "", "config"], [34, 2, 1, "", "degrade"], [34, 2, 1, "", "deregister_warning_event"], [34, 2, 1, "", "dispose"], [34, 3, 1, "", "external_order_claims"], [34, 2, 1, "", "fault"], [34, 2, 1, "", "fully_qualified_name"], [34, 2, 1, "", "handle_bar"], [34, 2, 1, "", "handle_bars"], [34, 2, 1, "", "handle_data"], [34, 2, 1, "", "handle_event"], [34, 2, 1, "", "handle_historical_data"], [34, 2, 1, "", "handle_instrument"], [34, 2, 1, "", "handle_instrument_close"], [34, 2, 1, "", "handle_instrument_status_update"], [34, 2, 1, "", "handle_instruments"], [34, 2, 1, "", "handle_order_book"], [34, 2, 1, "", "handle_order_book_deltas"], [34, 2, 1, "", "handle_quote_tick"], [34, 2, 1, "", "handle_quote_ticks"], [34, 2, 1, "", "handle_ticker"], [34, 2, 1, "", "handle_trade_tick"], [34, 2, 1, "", "handle_trade_ticks"], [34, 2, 1, "", "handle_venue_status_update"], [34, 2, 1, "", "has_pending_requests"], [34, 3, 1, "", "id"], [34, 2, 1, "", "indicators_initialized"], [34, 3, 1, "", "is_degraded"], [34, 3, 1, "", "is_disposed"], [34, 3, 1, "", "is_faulted"], [34, 3, 1, "", "is_initialized"], [34, 2, 1, "", "is_pending_request"], [34, 3, 1, "", "is_running"], [34, 3, 1, "", "is_stopped"], [34, 2, 1, "", "load"], [34, 3, 1, "", "log"], [34, 2, 1, "", "modify_order"], [34, 3, 1, "", "msgbus"], [34, 3, 1, "", "oms_type"], [34, 2, 1, "", "on_bar"], [34, 2, 1, "", "on_data"], [34, 2, 1, "", "on_degrade"], [34, 2, 1, "", "on_dispose"], [34, 2, 1, "", "on_event"], [34, 2, 1, "", "on_fault"], [34, 2, 1, "", "on_historical_data"], [34, 2, 1, "", "on_instrument"], [34, 2, 1, "", "on_instrument_close"], [34, 2, 1, "", "on_instrument_status_update"], [34, 2, 1, "", "on_load"], [34, 2, 1, "", "on_order_book"], [34, 2, 1, "", "on_order_book_deltas"], [34, 2, 1, "", "on_quote_tick"], [34, 2, 1, "", "on_reset"], [34, 2, 1, "", "on_resume"], [34, 2, 1, "", "on_save"], [34, 2, 1, "", "on_start"], [34, 2, 1, "", "on_stop"], [34, 2, 1, "", "on_ticker"], [34, 2, 1, "", "on_trade_tick"], [34, 2, 1, "", "on_venue_status_update"], [34, 3, 1, "", "order_factory"], [34, 3, 1, "", "order_id_tag"], [34, 2, 1, "", "pending_requests"], [34, 3, 1, "", "portfolio"], [34, 2, 1, "", "publish_data"], [34, 2, 1, "", "publish_signal"], [34, 2, 1, "", "query_order"], [34, 2, 1, "", "register"], [34, 2, 1, "", "register_base"], [34, 2, 1, "", "register_indicator_for_bars"], [34, 2, 1, "", "register_indicator_for_quote_ticks"], [34, 2, 1, "", "register_indicator_for_trade_ticks"], [34, 2, 1, "", "register_warning_event"], [34, 3, 1, "", "registered_indicators"], [34, 2, 1, "", "request_bars"], [34, 2, 1, "", "request_data"], [34, 2, 1, "", "request_instrument"], [34, 2, 1, "", "request_instruments"], [34, 2, 1, "", "request_quote_ticks"], [34, 2, 1, "", "request_trade_ticks"], [34, 2, 1, "", "reset"], [34, 2, 1, "", "resume"], [34, 2, 1, "", "save"], [34, 2, 1, "", "start"], [34, 3, 1, "", "state"], [34, 2, 1, "", "stop"], [34, 2, 1, "", "submit_order"], [34, 2, 1, "", "submit_order_list"], [34, 2, 1, "", "subscribe_bars"], [34, 2, 1, "", "subscribe_data"], [34, 2, 1, "", "subscribe_instrument"], [34, 2, 1, "", "subscribe_instrument_close"], [34, 2, 1, "", "subscribe_instrument_status_updates"], [34, 2, 1, "", "subscribe_instruments"], [34, 2, 1, "", "subscribe_order_book_deltas"], [34, 2, 1, "", "subscribe_order_book_snapshots"], [34, 2, 1, "", "subscribe_quote_ticks"], [34, 2, 1, "", "subscribe_ticker"], [34, 2, 1, "", "subscribe_trade_ticks"], [34, 2, 1, "", "subscribe_venue_status_updates"], [34, 2, 1, "", "to_importable_config"], [34, 3, 1, "", "trader_id"], [34, 3, 1, "", "type"], [34, 2, 1, "", "unsubscribe_bars"], [34, 2, 1, "", "unsubscribe_data"], [34, 2, 1, "", "unsubscribe_instrument"], [34, 2, 1, "", "unsubscribe_instrument_status_updates"], [34, 2, 1, "", "unsubscribe_instruments"], [34, 2, 1, "", "unsubscribe_order_book_deltas"], [34, 2, 1, "", "unsubscribe_order_book_snapshots"], [34, 2, 1, "", "unsubscribe_quote_ticks"], [34, 2, 1, "", "unsubscribe_ticker"], [34, 2, 1, "", "unsubscribe_trade_ticks"], [34, 2, 1, "", "unsubscribe_venue_status_updates"], [34, 2, 1, "", "update_synthetic"]], "nautilus_trader.trading.trader": [[34, 1, 1, "", "Trader"]], "nautilus_trader.trading.trader.Trader": [[34, 2, 1, "", "actor_ids"], [34, 2, 1, "", "actor_states"], [34, 2, 1, "", "actors"], [34, 2, 1, "", "add_actor"], [34, 2, 1, "", "add_actors"], [34, 2, 1, "", "add_exec_algorithm"], [34, 2, 1, "", "add_exec_algorithms"], [34, 2, 1, "", "add_strategies"], [34, 2, 1, "", "add_strategy"], [34, 2, 1, "", "check_residuals"], [34, 2, 1, "", "clear_actors"], [34, 2, 1, "", "clear_exec_algorithms"], [34, 2, 1, "", "clear_strategies"], [34, 2, 1, "", "degrade"], [34, 2, 1, "", "dispose"], [34, 2, 1, "", "exec_algorithm_ids"], [34, 2, 1, "", "exec_algorithm_states"], [34, 2, 1, "", "exec_algorithms"], [34, 2, 1, "", "fault"], [34, 2, 1, "", "fully_qualified_name"], [34, 2, 1, "", "generate_account_report"], [34, 2, 1, "", "generate_order_fills_report"], [34, 2, 1, "", "generate_orders_report"], [34, 2, 1, "", "generate_positions_report"], [34, 3, 1, "", "id"], [34, 3, 1, "", "is_degraded"], [34, 3, 1, "", "is_disposed"], [34, 3, 1, "", "is_faulted"], [34, 3, 1, "", "is_initialized"], [34, 3, 1, "", "is_running"], [34, 3, 1, "", "is_stopped"], [34, 2, 1, "", "load"], [34, 2, 1, "", "reset"], [34, 2, 1, "", "resume"], [34, 2, 1, "", "save"], [34, 2, 1, "", "start"], [34, 3, 1, "", "state"], [34, 2, 1, "", "stop"], [34, 2, 1, "", "strategies"], [34, 2, 1, "", "strategy_ids"], [34, 2, 1, "", "strategy_states"], [34, 2, 1, "", "subscribe"], [34, 3, 1, "", "trader_id"], [34, 3, 1, "", "type"], [34, 2, 1, "", "unsubscribe"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"account": [0, 44, 64], "betfair": [1, 63], "client": [1, 11, 35], "common": [1, 4, 8, 9, 42, 44], "config": [1, 2, 4, 9], "data": [1, 2, 4, 11, 18, 35, 37, 44, 53, 58, 59, 61, 64], "type": [1, 2, 36, 38, 42, 44, 47, 64], "execut": [1, 2, 4, 12, 43, 47], "factori": [1, 2, 4, 47], "histor": 1, "provid": [1, 2, 4, 35], "socket": 1, "binanc": [2, 64], "enum": 2, "futur": 2, "spot": 2, "adapt": [3, 35], "interact": [4, 65], "broker": [4, 65], "analysi": [5, 40], "backtest": [6, 9, 35, 40, 44, 45, 58, 59], "cach": 7, "clock": 8, "compon": [8, 12, 42, 46], "gener": [8, 37], "log": [8, 46], "timer": 8, "live": [9, 16, 35, 44, 45], "core": [10, 42, 44], "datetim": 10, "finit": 10, "state": 10, "machin": 10, "fsm": 10, "messag": [10, 11, 12, 28, 42, 49], "stat": 10, "uuid": 10, "aggreg": [11, 64], "engin": [11, 58], "report": 12, "api": [13, 63, 64, 65, 66], "refer": 13, "indic": 14, "infrastructur": 15, "currenc": 17, "event": [19, 53], "identifi": 20, "model": [21, 44], "instrument": [22, 35, 41, 45, 58, 61, 65], "object": 23, "order": [24, 25, 36, 38, 43, 44, 47, 64], "book": 24, "posit": 26, "tick": 27, "scheme": 27, "bu": 28, "persist": [29, 38], "portfolio": [30, 40], "risk": 31, "serial": 32, "system": [33, 42], "trade": [34, 35, 44, 45, 58, 64], "research": 35, "request": 35, "exampl": [35, 59, 65], "advanc": [36, 39], "list": 36, "conting": [36, 47], "One": 36, "trigger": [36, 41, 47], "other": 36, "oto": 36, "cancel": 36, "oco": 36, "updat": [36, 41], "ouo": 36, "bracket": 36, "custom": [37, 40], "emul": 38, "submit": [38, 43], "life": 38, "cycl": 38, "held": 38, "releas": [38, 57], "queri": [38, 65], "statist": 40, "synthet": 41, "formula": 41, "subscrib": 41, "id": 41, "error": [41, 42], "handl": 41, "architectur": [42, 62], "design": 42, "philosophi": 42, "qualiti": [42, 62], "attribut": [42, 62], "environ": [42, 51], "context": 42, "framework": 42, "organ": 42, "low": 42, "level": 42, "implement": [42, 48, 66], "code": [42, 49, 55], "structur": 42, "depend": 42, "flow": [42, 43], "safeti": [42, 54], "except": 42, "algorithm": 43, "twap": 43, "time": [43, 47], "weight": 43, "averag": 43, "price": [43, 45], "write": [43, 58, 61], "spawn": 43, "manag": [43, 48], "concept": 44, "distribut": 44, "domain": 44, "symbologi": [45, 64], "find": 45, "precis": 45, "increment": 45, "limit": [45, 47], "quantiti": [45, 47], "margin": 45, "fee": 45, "addit": 45, "info": 45, "configur": [46, 48, 58, 59, 63, 64, 65], "standard": [46, 49], "output": 46, "file": [46, 61], "filter": 46, "overview": [47, 63, 64, 65], "instruct": 47, "In": 47, "forc": 47, "expir": 47, "post": 47, "onli": 47, "reduc": 47, "displai": 47, "offset": 47, "market": 47, "stop": [47, 64], "To": 47, "If": 47, "touch": 47, "trail": [47, 64], "strategi": [48, 58], "multipl": 48, "gtd": 48, "expiri": 48, "style": 49, "black": 49, "format": 49, "pep": 49, "8": 49, "docstr": 49, "flake8": 49, "commit": 49, "cython": [50, 62], "function": [50, 61], "method": 50, "signatur": 50, "debug": 50, "pycharm": 50, "doc": 50, "tip": 50, "setup": 51, "build": 51, "develop": 52, "guid": [52, 60], "packag": 53, "libor": 53, "rate": 53, "short": 53, "term": 53, "interest": 53, "econom": 53, "rust": [54, 62], "python": [54, 62], "bind": 54, "unsaf": 54, "polici": 54, "resourc": 54, "test": 55, "mock": 55, "coverag": 55, "exclud": 55, "get": [56, 58, 59, 61], "start": [56, 58], "instal": 57, "from": 57, "pypi": 57, "extra": 57, "sourc": 57, "github": 57, "quick": 58, "run": [58, 59], "docker": 58, "sampl": [58, 61], "connect": 58, "parquetdatacatalog": [58, 61], "venu": [58, 59], "complet": 59, "import": 59, "some": [59, 61], "raw": [59, 61], "The": [59, 61], "catalog": 59, "load": [59, 61], "us": [59, 61], "ad": 59, "extern": 61, "datacatalog": 61, "via": 61, "reader": 61, "class": 61, "parser": [61, 64], "creat": 61, "new": 61, "nautilustrad": 62, "document": 62, "featur": 62, "why": 62, "what": 62, "i": 62, "credenti": [63, 64, 65], "base": 64, "url": 64, "overrid": 64, "u": 64, "testnet": 64, "warn": 64, "specif": 64, "binancefuturesmarkpriceupd": 64, "integr": 66, "goal": 66, "unif": 66}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Accounting": [[0, "module-nautilus_trader.accounting"]], "Betfair": [[1, "module-nautilus_trader.adapters.betfair"], [63, "betfair"]], "Client": [[1, "module-nautilus_trader.adapters.betfair.client"], [11, "module-nautilus_trader.data.client"]], "Common": [[1, "module-nautilus_trader.adapters.betfair.common"], [4, "module-nautilus_trader.adapters.interactive_brokers.common"], [8, "module-nautilus_trader.common"], [9, "module-nautilus_trader.config.common"]], "Config": [[1, "module-nautilus_trader.adapters.betfair.config"], [2, "module-nautilus_trader.adapters.binance.config"], [4, "module-nautilus_trader.adapters.interactive_brokers.config"], [9, "module-nautilus_trader.config"]], "Data": [[1, "module-nautilus_trader.adapters.betfair.data"], [2, "module-nautilus_trader.adapters.binance.futures.data"], [2, "id3"], [4, "module-nautilus_trader.adapters.interactive_brokers.data"], [11, "module-nautilus_trader.data"], [18, "module-nautilus_trader.model.data"], [37, "data"], [58, "data"]], "Data Types": [[1, "module-nautilus_trader.adapters.betfair.data_types"], [44, "data-types"]], "Execution": [[1, "module-nautilus_trader.adapters.betfair.execution"], [2, "module-nautilus_trader.adapters.binance.futures.execution"], [2, "id5"], [4, "module-nautilus_trader.adapters.interactive_brokers.execution"], [12, "module-nautilus_trader.execution"], [43, "execution"]], "Factories": [[1, "module-nautilus_trader.adapters.betfair.factories"], [2, "module-nautilus_trader.adapters.binance.factories"], [4, "module-nautilus_trader.adapters.interactive_brokers.factories"]], "Historic": [[1, "module-nautilus_trader.adapters.betfair.historic"]], "Providers": [[1, "module-nautilus_trader.adapters.betfair.providers"], [2, "module-nautilus_trader.adapters.binance.futures.providers"], [2, "id6"], [4, "module-nautilus_trader.adapters.interactive_brokers.providers"]], "Sockets": [[1, "module-nautilus_trader.adapters.betfair.sockets"]], "Binance": [[2, "module-nautilus_trader.adapters.binance"], [64, "binance"]], "Enums": [[2, "module-nautilus_trader.adapters.binance.common.enums"], [2, "id1"], [2, "id4"]], "Types": [[2, "module-nautilus_trader.adapters.binance.common.types"], [2, "id2"]], "Futures": [[2, "futures"]], "Spot": [[2, "spot"]], "Adapters": [[3, "module-nautilus_trader.adapters"], [35, "adapters"]], "Interactive Brokers": [[4, "module-nautilus_trader.adapters.interactive_brokers"], [65, "interactive-brokers"]], "Analysis": [[5, "module-nautilus_trader.analysis"]], "Backtest": [[6, "module-nautilus_trader.backtest"], [9, "module-nautilus_trader.config.backtest"]], "Cache": [[7, "module-nautilus_trader.cache"]], "Clock": [[8, "module-nautilus_trader.common.clock"]], "Component": [[8, "module-nautilus_trader.common.component"]], "Generators": [[8, "module-nautilus_trader.common.generators"]], "Logging": [[8, "module-nautilus_trader.common.logging"], [46, "logging"]], "Timer": [[8, "module-nautilus_trader.common.timer"]], "Live": [[9, "module-nautilus_trader.config.live"], [16, "module-nautilus_trader.live"]], "Core": [[10, "module-nautilus_trader.core"]], "Datetime": [[10, "module-nautilus_trader.core.datetime"]], "Finite-State Machine (FSM)": [[10, "module-nautilus_trader.core.fsm"]], "Message": [[10, "module-nautilus_trader.core.message"]], "Stats": [[10, "module-nautilus_trader.core.stats"]], "UUID": [[10, "module-nautilus_trader.core.uuid"]], "Aggregation": [[11, "module-nautilus_trader.data.aggregation"]], "Engine": [[11, "module-nautilus_trader.data.engine"], [58, "engine"]], "Messages": [[11, "module-nautilus_trader.data.messages"], [12, "module-nautilus_trader.execution.messages"]], "Components": [[12, "module-nautilus_trader.execution.algorithm"], [42, "components"]], "Reports": [[12, "module-nautilus_trader.execution.reports"]], "API Reference": [[13, "api-reference"]], "Indicators": [[14, "module-nautilus_trader.indicators"]], "Infrastructure": [[15, "module-nautilus_trader.infrastructure"]], "Currency": [[17, "module-nautilus_trader.model.currency"]], "Events": [[19, "module-nautilus_trader.model.events"]], "Identifiers": [[20, "module-nautilus_trader.model.identifiers"]], "Model": [[21, "module-nautilus_trader.model"]], "Instruments": [[22, "module-nautilus_trader.model.instruments"], [45, "instruments"], [58, "instruments"], [61, "instruments"], [65, "instruments"]], "Objects": [[23, "module-nautilus_trader.model.objects"]], "Order Book": [[24, "module-nautilus_trader.model.orderbook"]], "Orders": [[25, "module-nautilus_trader.model.orders"], [47, "orders"]], "Position": [[26, "module-nautilus_trader.model.position"]], "Tick Scheme": [[27, "module-nautilus_trader.model.tick_scheme"]], "Message Bus": [[28, "module-nautilus_trader.msgbus"]], "Persistence": [[29, "module-nautilus_trader.persistence"]], "Portfolio": [[30, "module-nautilus_trader.portfolio"]], "Risk": [[31, "module-nautilus_trader.risk"]], "Serialization": [[32, "module-nautilus_trader.serialization"]], "System": [[33, "module-nautilus_trader.system"]], "Trading": [[34, "module-nautilus_trader.trading"]], "Instrument Providers": [[35, "instrument-providers"]], "Research/Backtesting": [[35, "research-backtesting"]], "Live Trading": [[35, "live-trading"]], "Data Clients": [[35, "data-clients"]], "Requests": [[35, "requests"]], "Example": [[35, "example"]], "Advanced Orders": [[36, "advanced-orders"]], "Order Lists": [[36, "order-lists"]], "Contingency Types": [[36, "contingency-types"]], "One Triggers the Other (OTO)": [[36, "one-triggers-the-other-oto"]], "One Cancels the Other (OCO)": [[36, "one-cancels-the-other-oco"]], "One Updates the Other (OUO)": [[36, "one-updates-the-other-ouo"]], "Bracket Orders": [[36, "bracket-orders"]], "Custom/Generic Data": [[37, "custom-generic-data"]], "Emulated Orders": [[38, "emulated-orders"]], "Submitting for emulation": [[38, "submitting-for-emulation"]], "Life cycle": [[38, "life-cycle"]], "Held emulated orders": [[38, "held-emulated-orders"]], "Released emulated orders": [[38, "released-emulated-orders"]], "Order types": [[38, "order-types"], [64, "order-types"]], "Querying": [[38, "querying"]], "Persisted emulated orders": [[38, "persisted-emulated-orders"]], "Advanced": [[39, "advanced"]], "Portfolio Statistics": [[40, "portfolio-statistics"]], "Custom Statistics": [[40, "custom-statistics"]], "Backtest Analysis": [[40, "backtest-analysis"]], "Synthetic instruments": [[41, "synthetic-instruments"]], "Formula": [[41, "formula"]], "Subscribing": [[41, "subscribing"]], "Updating formulas": [[41, "updating-formulas"]], "Trigger instrument IDs": [[41, "trigger-instrument-ids"]], "Error handling": [[41, "error-handling"]], "Architecture": [[42, "architecture"]], "Design philosophy": [[42, "design-philosophy"]], "Quality attributes": [[42, "quality-attributes"]], "System architecture": [[42, "system-architecture"]], "Environment contexts": [[42, "environment-contexts"]], "Common core": [[42, "common-core"], [44, "common-core"]], "Messaging": [[42, "messaging"]], "Framework organization": [[42, "framework-organization"]], "Core / low-Level": [[42, "core-low-level"]], "System implementations": [[42, "system-implementations"]], "Code structure": [[42, "code-structure"]], "Dependency flow": [[42, "dependency-flow"]], "Type safety": [[42, "type-safety"]], "Errors and exceptions": [[42, "errors-and-exceptions"]], "Execution flow": [[43, "execution-flow"]], "Submitting orders": [[43, "submitting-orders"]], "Execution algorithms": [[43, "execution-algorithms"]], "TWAP (Time-Weighted Average Price)": [[43, "twap-time-weighted-average-price"]], "Writing execution algorithms": [[43, "writing-execution-algorithms"]], "Spawned orders": [[43, "spawned-orders"]], "Managing execution algorithm orders": [[43, "managing-execution-algorithm-orders"]], "Concepts": [[44, "concepts"]], "Distributed": [[44, "distributed"]], "Backtesting": [[44, "backtesting"], [45, "backtesting"]], "Live trading": [[44, "live-trading"], [45, "live-trading"]], "Domain model": [[44, "domain-model"]], "Account Types": [[44, "account-types"]], "Order Types": [[44, "order-types"], [47, "order-types"]], "Symbology": [[45, "symbology"], [64, "symbology"]], "Finding instruments": [[45, "finding-instruments"]], "Precisions and Increments": [[45, "precisions-and-increments"]], "Limits": [[45, "limits"]], "Prices and Quantities": [[45, "prices-and-quantities"]], "Margins and Fees": [[45, "margins-and-fees"]], "Additional Info": [[45, "additional-info"]], "Configuration": [[46, "configuration"], [48, "configuration"], [63, "configuration"], [64, "configuration"], [65, "configuration"]], "Standard output logging": [[46, "standard-output-logging"]], "File logging": [[46, "file-logging"]], "Component filtering": [[46, "component-filtering"]], "Overview": [[47, "overview"], [63, "overview"], [64, "overview"], [65, "overview"]], "Execution Instructions": [[47, "execution-instructions"]], "Time In Force": [[47, "time-in-force"]], "Expire Time": [[47, "expire-time"]], "Post Only": [[47, "post-only"]], "Reduce Only": [[47, "reduce-only"]], "Display Quantity": [[47, "display-quantity"]], "Trigger Type": [[47, "trigger-type"]], "Trigger Offset Type": [[47, "trigger-offset-type"]], "Contingency Orders": [[47, "contingency-orders"]], "Order Factory": [[47, "order-factory"]], "Market": [[47, "market"]], "Limit": [[47, "limit"]], "Stop-Market": [[47, "stop-market"]], "Stop-Limit": [[47, "stop-limit"]], "Market-To-Limit": [[47, "market-to-limit"]], "Market-If-Touched": [[47, "market-if-touched"]], "Limit-If-Touched": [[47, "limit-if-touched"]], "Trailing-Stop-Market": [[47, "trailing-stop-market"]], "Trailing-Stop-Limit": [[47, "trailing-stop-limit"]], "Strategies": [[48, "strategies"]], "Implementation": [[48, "implementation"]], "Multiple strategies": [[48, "multiple-strategies"]], "Managed GTD expiry": [[48, "managed-gtd-expiry"]], "Coding Standards": [[49, "coding-standards"]], "Code Style": [[49, "code-style"]], "Black": [[49, "black"]], "Formatting": [[49, "formatting"]], "PEP-8": [[49, "pep-8"]], "Docstrings": [[49, "docstrings"]], "Flake8": [[49, "flake8"]], "Commit messages": [[49, "commit-messages"]], "Cython": [[50, "cython"]], "Function and method signatures": [[50, "function-and-method-signatures"]], "Debugging": [[50, "debugging"]], "PyCharm": [[50, "pycharm"]], "Cython Docs": [[50, "cython-docs"]], "Tips": [[50, "tips"]], "Environment Setup": [[51, "environment-setup"]], "Setup": [[51, "setup"]], "Builds": [[51, "builds"]], "Developer Guide": [[52, "developer-guide"]], "Packaged Data": [[53, "packaged-data"]], "Libor Rates": [[53, "libor-rates"]], "Short Term Interest Rates": [[53, "short-term-interest-rates"]], "Economic Events": [[53, "economic-events"]], "Rust": [[54, "rust"]], "Python Binding": [[54, "python-binding"]], "Unsafe Rust": [[54, "unsafe-rust"]], "Safety Policy": [[54, "safety-policy"]], "Resources": [[54, "resources"]], "Testing": [[55, "testing"]], "Mocks": [[55, "mocks"]], "Code Coverage": [[55, "code-coverage"]], "Excluded code coverage": [[55, "excluded-code-coverage"]], "Getting Started": [[56, "getting-started"]], "Installation": [[57, "installation"]], "From PyPI": [[57, "from-pypi"]], "Extras": [[57, "extras"]], "From Source": [[57, "from-source"]], "From GitHub Release": [[57, "from-github-release"]], "Quick Start": [[58, "quick-start"]], "Running in docker": [[58, "running-in-docker"]], "Getting the sample data": [[58, "getting-the-sample-data"]], "Connecting to the ParquetDataCatalog": [[58, "connecting-to-the-parquetdatacatalog"]], "Writing a trading strategy": [[58, "writing-a-trading-strategy"]], "Configuring Backtests": [[58, "configuring-backtests"]], "Venue": [[58, "venue"]], "Running a backtest": [[58, "running-a-backtest"]], "Complete Backtest Example": [[59, "complete-backtest-example"]], "Imports": [[59, "imports"]], "Getting some raw data": [[59, "getting-some-raw-data"]], "The Data Catalog": [[59, "the-data-catalog"]], "Loading data into the catalog": [[59, "loading-data-into-the-catalog"]], "Using the Data Catalog": [[59, "using-the-data-catalog"]], "Configuring backtests": [[59, "configuring-backtests"]], "Adding data and venues": [[59, "adding-data-and-venues"]], "Run the backtest!": [[59, "run-the-backtest"]], "Guides": [[60, "guides"]], "Loading External Data": [[61, "loading-external-data"]], "The DataCatalog": [[61, "the-datacatalog"]], "Getting some sample raw data": [[61, "getting-some-sample-raw-data"]], "Loading data via Reader classes": [[61, "loading-data-via-reader-classes"]], "Writing the parser function": [[61, "writing-the-parser-function"]], "Creating a new DataCatalog": [[61, "creating-a-new-datacatalog"]], "Loading the files": [[61, "loading-the-files"]], "Using the ParquetDataCatalog": [[61, "using-the-parquetdatacatalog"]], "NautilusTrader Documentation": [[62, "nautilustrader-documentation"]], "Features": [[62, "features"]], "Why NautilusTrader?": [[62, "why-nautilustrader"]], "Why Python?": [[62, "why-python"]], "What is Cython?": [[62, "what-is-cython"]], "What is Rust?": [[62, "what-is-rust"]], "Architecture Quality Attributes": [[62, "architecture-quality-attributes"]], "API credentials": [[63, "api-credentials"], [64, "api-credentials"], [65, "api-credentials"]], "Data types": [[64, "data-types"]], "Trailing stops": [[64, "trailing-stops"]], "Account Type": [[64, "account-type"]], "Base URL overrides": [[64, "base-url-overrides"]], "Binance US": [[64, "binance-us"]], "Testnets": [[64, "testnets"]], "Aggregated Trades": [[64, "aggregated-trades"]], "Parser warnings": [[64, "parser-warnings"]], "Binance specific data": [[64, "binance-specific-data"]], "BinanceFuturesMarkPriceUpdate": [[64, "binancefuturesmarkpriceupdate"]], "Examples queries": [[65, "examples-queries"]], "Integrations": [[66, "integrations"]], "Implementation goals": [[66, "implementation-goals"]], "API unification": [[66, "api-unification"]]}, "indexentries": {"accountfactory (class in nautilus_trader.accounting.factory)": [[0, "nautilus_trader.accounting.factory.AccountFactory"]], "accountsmanager (class in nautilus_trader.accounting.manager)": [[0, "nautilus_trader.accounting.manager.AccountsManager"]], "cashaccount (class in nautilus_trader.accounting.accounts.cash)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount"]], "exchangeratecalculator (class in nautilus_trader.accounting.calculators)": [[0, "nautilus_trader.accounting.calculators.ExchangeRateCalculator"]], "marginaccount (class in nautilus_trader.accounting.accounts.margin)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount"]], "rolloverinterestcalculator (class in nautilus_trader.accounting.calculators)": [[0, "nautilus_trader.accounting.calculators.RolloverInterestCalculator"]], "apply() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.apply"]], "apply() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.apply"]], "balance() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balance"]], "balance() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balance"]], "balance_free() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balance_free"]], "balance_free() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balance_free"]], "balance_locked() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balance_locked"]], "balance_locked() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balance_locked"]], "balance_total() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balance_total"]], "balance_total() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balance_total"]], "balances() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balances"]], "balances() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balances"]], "balances_free() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balances_free"]], "balances_free() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balances_free"]], "balances_locked() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balances_locked"]], "balances_locked() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balances_locked"]], "balances_total() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balances_total"]], "balances_total() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balances_total"]], "base_currency (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.base_currency"]], "base_currency (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.base_currency"]], "calc_overnight_rate() (rolloverinterestcalculator method)": [[0, "nautilus_trader.accounting.calculators.RolloverInterestCalculator.calc_overnight_rate"]], "calculate_account_state (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.calculate_account_state"]], "calculate_account_state (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.calculate_account_state"]], "calculate_balance_locked() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.calculate_balance_locked"]], "calculate_commission() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.calculate_commission"]], "calculate_commission() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.calculate_commission"]], "calculate_margin_init() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.calculate_margin_init"]], "calculate_margin_maint() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.calculate_margin_maint"]], "calculate_pnls() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.calculate_pnls"]], "calculate_pnls() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.calculate_pnls"]], "clear_balance_locked() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.clear_balance_locked"]], "clear_margin() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.clear_margin"]], "clear_margin_init() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.clear_margin_init"]], "clear_margin_maint() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.clear_margin_maint"]], "commission() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.commission"]], "commission() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.commission"]], "commissions() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.commissions"]], "commissions() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.commissions"]], "create() (accountfactory static method)": [[0, "nautilus_trader.accounting.factory.AccountFactory.create"]], "currencies() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.currencies"]], "currencies() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.currencies"]], "default_leverage (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.default_leverage"]], "event_count (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.event_count"]], "event_count (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.event_count"]], "events (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.events"]], "events (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.events"]], "get_rate() (exchangeratecalculator method)": [[0, "nautilus_trader.accounting.calculators.ExchangeRateCalculator.get_rate"]], "get_rate_data() (rolloverinterestcalculator method)": [[0, "nautilus_trader.accounting.calculators.RolloverInterestCalculator.get_rate_data"]], "id (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.id"]], "id (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.id"]], "is_cash_account (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.is_cash_account"]], "is_cash_account (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.is_cash_account"]], "is_margin_account (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.is_margin_account"]], "is_margin_account (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.is_margin_account"]], "is_unleveraged() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.is_unleveraged"]], "is_unleveraged() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.is_unleveraged"]], "last_event (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.last_event"]], "last_event (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.last_event"]], "leverage() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.leverage"]], "leverages() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.leverages"]], "margin() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.margin"]], "margin_init() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.margin_init"]], "margin_maint() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.margin_maint"]], "margins() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.margins"]], "margins_init() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.margins_init"]], "margins_maint() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.margins_maint"]], "module": [[0, "module-nautilus_trader.accounting"], [0, "module-nautilus_trader.accounting.accounts.cash"], [0, "module-nautilus_trader.accounting.accounts.margin"], [0, "module-nautilus_trader.accounting.calculators"], [0, "module-nautilus_trader.accounting.factory"], [0, "module-nautilus_trader.accounting.manager"], [1, "module-nautilus_trader.adapters.betfair"], [1, "module-nautilus_trader.adapters.betfair.client"], [1, "module-nautilus_trader.adapters.betfair.common"], [1, "module-nautilus_trader.adapters.betfair.config"], [1, "module-nautilus_trader.adapters.betfair.data"], [1, "module-nautilus_trader.adapters.betfair.data_types"], [1, "module-nautilus_trader.adapters.betfair.execution"], [1, "module-nautilus_trader.adapters.betfair.factories"], [1, "module-nautilus_trader.adapters.betfair.historic"], [1, "module-nautilus_trader.adapters.betfair.providers"], [1, "module-nautilus_trader.adapters.betfair.sockets"], [2, "module-nautilus_trader.adapters.binance"], [2, "module-nautilus_trader.adapters.binance.common.enums"], [2, "module-nautilus_trader.adapters.binance.common.types"], [2, "module-nautilus_trader.adapters.binance.config"], [2, "module-nautilus_trader.adapters.binance.factories"], [2, "module-nautilus_trader.adapters.binance.futures.data"], [2, "module-nautilus_trader.adapters.binance.futures.enums"], [2, "module-nautilus_trader.adapters.binance.futures.execution"], [2, "module-nautilus_trader.adapters.binance.futures.providers"], [2, "module-nautilus_trader.adapters.binance.futures.types"], [2, "module-nautilus_trader.adapters.binance.spot.data"], [2, "module-nautilus_trader.adapters.binance.spot.enums"], [2, "module-nautilus_trader.adapters.binance.spot.execution"], [2, "module-nautilus_trader.adapters.binance.spot.providers"], [3, "module-nautilus_trader.adapters"], [4, "module-nautilus_trader.adapters.interactive_brokers"], [4, "module-nautilus_trader.adapters.interactive_brokers.common"], [4, "module-nautilus_trader.adapters.interactive_brokers.config"], [4, "module-nautilus_trader.adapters.interactive_brokers.data"], [4, "module-nautilus_trader.adapters.interactive_brokers.execution"], [4, "module-nautilus_trader.adapters.interactive_brokers.factories"], [4, "module-nautilus_trader.adapters.interactive_brokers.providers"], [5, "module-nautilus_trader.analysis"], [5, "module-nautilus_trader.analysis.analyzer"], [5, "module-nautilus_trader.analysis.reporter"], [5, "module-nautilus_trader.analysis.statistic"], [5, "module-nautilus_trader.analysis.statistics.expectancy"], [5, "module-nautilus_trader.analysis.statistics.long_ratio"], [5, "module-nautilus_trader.analysis.statistics.loser_avg"], [5, "module-nautilus_trader.analysis.statistics.loser_max"], [5, "module-nautilus_trader.analysis.statistics.loser_min"], [5, "module-nautilus_trader.analysis.statistics.profit_factor"], [5, "module-nautilus_trader.analysis.statistics.returns_avg"], [5, "module-nautilus_trader.analysis.statistics.returns_avg_loss"], [5, "module-nautilus_trader.analysis.statistics.returns_avg_win"], [5, "module-nautilus_trader.analysis.statistics.returns_volatility"], [5, "module-nautilus_trader.analysis.statistics.risk_return_ratio"], [5, "module-nautilus_trader.analysis.statistics.sharpe_ratio"], [5, "module-nautilus_trader.analysis.statistics.sortino_ratio"], [5, "module-nautilus_trader.analysis.statistics.win_rate"], [5, "module-nautilus_trader.analysis.statistics.winner_avg"], [5, "module-nautilus_trader.analysis.statistics.winner_max"], [5, "module-nautilus_trader.analysis.statistics.winner_min"], [6, "module-nautilus_trader.backtest"], [6, "module-nautilus_trader.backtest.auction"], [6, "module-nautilus_trader.backtest.data_client"], [6, "module-nautilus_trader.backtest.engine"], [6, "module-nautilus_trader.backtest.exchange"], [6, "module-nautilus_trader.backtest.execution_client"], [6, "module-nautilus_trader.backtest.models"], [6, "module-nautilus_trader.backtest.modules"], [6, "module-nautilus_trader.backtest.node"], [6, "module-nautilus_trader.backtest.results"], [7, "module-nautilus_trader.cache"], [7, "module-nautilus_trader.cache.base"], [7, "module-nautilus_trader.cache.cache"], [7, "module-nautilus_trader.cache.database"], [8, "module-nautilus_trader.common"], [8, "module-nautilus_trader.common.actor"], [8, "module-nautilus_trader.common.clock"], [8, "module-nautilus_trader.common.component"], [8, "module-nautilus_trader.common.factories"], [8, "module-nautilus_trader.common.generators"], [8, "module-nautilus_trader.common.logging"], [8, "module-nautilus_trader.common.providers"], [8, "module-nautilus_trader.common.queue"], [8, "module-nautilus_trader.common.throttler"], [8, "module-nautilus_trader.common.timer"], [9, "module-nautilus_trader.config"], [9, "module-nautilus_trader.config.backtest"], [9, "module-nautilus_trader.config.common"], [9, "module-nautilus_trader.config.live"], [10, "module-nautilus_trader.core"], [10, "module-nautilus_trader.core.datetime"], [10, "module-nautilus_trader.core.fsm"], [10, "module-nautilus_trader.core.message"], [10, "module-nautilus_trader.core.stats"], [10, "module-nautilus_trader.core.uuid"], [11, "module-nautilus_trader.data"], [11, "module-nautilus_trader.data.aggregation"], [11, "module-nautilus_trader.data.client"], [11, "module-nautilus_trader.data.engine"], [11, "module-nautilus_trader.data.messages"], [12, "module-nautilus_trader.execution"], [12, "module-nautilus_trader.execution.algorithm"], [12, "module-nautilus_trader.execution.client"], [12, "module-nautilus_trader.execution.emulator"], [12, "module-nautilus_trader.execution.engine"], [12, "module-nautilus_trader.execution.matching_core"], [12, "module-nautilus_trader.execution.messages"], [12, "module-nautilus_trader.execution.reports"], [14, "module-nautilus_trader.indicators"], [14, "module-nautilus_trader.indicators.atr"], [14, "module-nautilus_trader.indicators.average.ama"], [14, "module-nautilus_trader.indicators.average.ema"], [14, "module-nautilus_trader.indicators.average.hma"], [14, "module-nautilus_trader.indicators.average.ma_factory"], [14, "module-nautilus_trader.indicators.average.moving_average"], [14, "module-nautilus_trader.indicators.average.sma"], [14, "module-nautilus_trader.indicators.average.wma"], [14, "module-nautilus_trader.indicators.base.indicator"], [14, "module-nautilus_trader.indicators.bollinger_bands"], [14, "module-nautilus_trader.indicators.donchian_channel"], [14, "module-nautilus_trader.indicators.efficiency_ratio"], [14, "module-nautilus_trader.indicators.fuzzy_candlesticks"], [14, "module-nautilus_trader.indicators.keltner_channel"], [14, "module-nautilus_trader.indicators.keltner_position"], [14, "module-nautilus_trader.indicators.macd"], [14, "module-nautilus_trader.indicators.obv"], [14, "module-nautilus_trader.indicators.pressure"], [14, "module-nautilus_trader.indicators.roc"], [14, "module-nautilus_trader.indicators.rsi"], [14, "module-nautilus_trader.indicators.spread_analyzer"], [14, "module-nautilus_trader.indicators.stochastics"], [14, "module-nautilus_trader.indicators.swings"], [14, "module-nautilus_trader.indicators.volatility_ratio"], [14, "module-nautilus_trader.indicators.vwap"], [15, "module-nautilus_trader.infrastructure"], [15, "module-nautilus_trader.infrastructure.cache"], [16, "module-nautilus_trader.live"], [16, "module-nautilus_trader.live.data_client"], [16, "module-nautilus_trader.live.data_engine"], [16, "module-nautilus_trader.live.execution_client"], [16, "module-nautilus_trader.live.execution_engine"], [16, "module-nautilus_trader.live.node"], [16, "module-nautilus_trader.live.node_builder"], [16, "module-nautilus_trader.live.risk_engine"], [17, "module-nautilus_trader.model.currency"], [18, "module-nautilus_trader.model.data"], [18, "module-nautilus_trader.model.data.bar"], [18, "module-nautilus_trader.model.data.base"], [18, "module-nautilus_trader.model.data.book"], [18, "module-nautilus_trader.model.data.tick"], [18, "module-nautilus_trader.model.data.ticker"], [18, "module-nautilus_trader.model.data.venue"], [19, "module-nautilus_trader.model.events"], [19, "module-nautilus_trader.model.events.account"], [19, "module-nautilus_trader.model.events.order"], [19, "module-nautilus_trader.model.events.position"], [20, "module-nautilus_trader.model.identifiers"], [21, "module-nautilus_trader.model"], [22, "module-nautilus_trader.model.instruments"], [22, "module-nautilus_trader.model.instruments.base"], [22, "module-nautilus_trader.model.instruments.betting"], [22, "module-nautilus_trader.model.instruments.crypto_future"], [22, "module-nautilus_trader.model.instruments.crypto_perpetual"], [22, "module-nautilus_trader.model.instruments.currency_pair"], [22, "module-nautilus_trader.model.instruments.equity"], [22, "module-nautilus_trader.model.instruments.futures_contract"], [22, "module-nautilus_trader.model.instruments.options_contract"], [22, "module-nautilus_trader.model.instruments.synthetic"], [23, "module-nautilus_trader.model.objects"], [24, "module-nautilus_trader.model.orderbook"], [24, "module-nautilus_trader.model.orderbook.book"], [25, "module-nautilus_trader.model.orders"], [25, "module-nautilus_trader.model.orders.base"], [25, "module-nautilus_trader.model.orders.limit"], [25, "module-nautilus_trader.model.orders.limit_if_touched"], [25, "module-nautilus_trader.model.orders.list"], [25, "module-nautilus_trader.model.orders.market"], [25, "module-nautilus_trader.model.orders.market_if_touched"], [25, "module-nautilus_trader.model.orders.market_to_limit"], [25, "module-nautilus_trader.model.orders.stop_limit"], [25, "module-nautilus_trader.model.orders.stop_market"], [25, "module-nautilus_trader.model.orders.trailing_stop_limit"], [25, "module-nautilus_trader.model.orders.trailing_stop_market"], [26, "module-nautilus_trader.model.position"], [27, "module-nautilus_trader.model.tick_scheme"], [27, "module-nautilus_trader.model.tick_scheme.base"], [27, "module-nautilus_trader.model.tick_scheme.implementations.fixed"], [27, "module-nautilus_trader.model.tick_scheme.implementations.tiered"], [28, "module-nautilus_trader.msgbus"], [28, "module-nautilus_trader.msgbus.bus"], [28, "module-nautilus_trader.msgbus.subscription"], [29, "module-nautilus_trader.persistence"], [29, "module-nautilus_trader.persistence.catalog.base"], [29, "module-nautilus_trader.persistence.catalog.parquet"], [29, "module-nautilus_trader.persistence.external.readers"], [29, "module-nautilus_trader.persistence.streaming.batching"], [29, "module-nautilus_trader.persistence.streaming.engine"], [29, "module-nautilus_trader.persistence.streaming.writer"], [29, "module-nautilus_trader.persistence.wranglers"], [30, "module-nautilus_trader.portfolio"], [30, "module-nautilus_trader.portfolio.base"], [30, "module-nautilus_trader.portfolio.portfolio"], [31, "module-nautilus_trader.risk"], [31, "module-nautilus_trader.risk.engine"], [31, "module-nautilus_trader.risk.sizing"], [32, "module-nautilus_trader.serialization"], [32, "module-nautilus_trader.serialization.arrow.serializer"], [32, "module-nautilus_trader.serialization.base"], [32, "module-nautilus_trader.serialization.msgpack.serializer"], [33, "module-nautilus_trader.system"], [33, "module-nautilus_trader.system.kernel"], [34, "module-nautilus_trader.trading"], [34, "module-nautilus_trader.trading.filters"], [34, "module-nautilus_trader.trading.strategy"], [34, "module-nautilus_trader.trading.trader"]], "nautilus_trader.accounting": [[0, "module-nautilus_trader.accounting"]], "nautilus_trader.accounting.accounts.cash": [[0, "module-nautilus_trader.accounting.accounts.cash"]], "nautilus_trader.accounting.accounts.margin": [[0, "module-nautilus_trader.accounting.accounts.margin"]], "nautilus_trader.accounting.calculators": [[0, "module-nautilus_trader.accounting.calculators"]], "nautilus_trader.accounting.factory": [[0, "module-nautilus_trader.accounting.factory"]], "nautilus_trader.accounting.manager": [[0, "module-nautilus_trader.accounting.manager"]], "register_account_type() (accountfactory static method)": [[0, "nautilus_trader.accounting.factory.AccountFactory.register_account_type"]], "register_calculated_account() (accountfactory static method)": [[0, "nautilus_trader.accounting.factory.AccountFactory.register_calculated_account"]], "set_default_leverage() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.set_default_leverage"]], "set_leverage() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.set_leverage"]], "starting_balances() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.starting_balances"]], "starting_balances() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.starting_balances"]], "type (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.type"]], "type (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.type"]], "update_balance_locked() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.update_balance_locked"]], "update_balances() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.update_balances"]], "update_balances() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.update_balances"]], "update_commissions() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.update_commissions"]], "update_commissions() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.update_commissions"]], "update_margin() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.update_margin"]], "update_margin_init() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.update_margin_init"]], "update_margin_maint() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.update_margin_maint"]], "bsporderbookdelta (class in nautilus_trader.adapters.betfair.data_types)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta"]], "bsporderbookdeltas (class in nautilus_trader.adapters.betfair.data_types)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDeltas"]], "betfairdataclient (class in nautilus_trader.adapters.betfair.data)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient"]], "betfairdataclientconfig (class in nautilus_trader.adapters.betfair.config)": [[1, "nautilus_trader.adapters.betfair.config.BetfairDataClientConfig"]], "betfairexecclientconfig (class in nautilus_trader.adapters.betfair.config)": [[1, "nautilus_trader.adapters.betfair.config.BetfairExecClientConfig"]], "betfairexecutionclient (class in nautilus_trader.adapters.betfair.execution)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient"]], "betfairhttpclient (class in nautilus_trader.adapters.betfair.client)": [[1, "nautilus_trader.adapters.betfair.client.BetfairHttpClient"]], "betfairinstrumentprovider (class in nautilus_trader.adapters.betfair.providers)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider"]], "betfairlivedataclientfactory (class in nautilus_trader.adapters.betfair.factories)": [[1, "nautilus_trader.adapters.betfair.factories.BetfairLiveDataClientFactory"]], "betfairliveexecclientfactory (class in nautilus_trader.adapters.betfair.factories)": [[1, "nautilus_trader.adapters.betfair.factories.BetfairLiveExecClientFactory"]], "betfairmarketstreamclient (class in nautilus_trader.adapters.betfair.sockets)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient"]], "betfairorderstreamclient (class in nautilus_trader.adapters.betfair.sockets)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient"]], "betfairstartingprice (class in nautilus_trader.adapters.betfair.data_types)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairStartingPrice"]], "betfairstreamclient (class in nautilus_trader.adapters.betfair.sockets)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient"]], "betfairticker (class in nautilus_trader.adapters.betfair.data_types)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairTicker"]], "subscriptionstatus (class in nautilus_trader.adapters.betfair.data_types)": [[1, "nautilus_trader.adapters.betfair.data_types.SubscriptionStatus"]], "account_id (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.account_id"]], "account_type (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.account_type"]], "action (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.action"]], "add() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.add"]], "add_bulk() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.add_bulk"]], "add_currency() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.add_currency"]], "base_currency (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.base_currency"]], "cancel_all_orders() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.cancel_all_orders"]], "cancel_order() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.cancel_order"]], "check_account_currency() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.check_account_currency"]], "clear() (bsporderbookdelta static method)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.clear"]], "connect() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.connect"]], "connect() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.connect"]], "count (betfairinstrumentprovider property)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.count"]], "create() (betfairlivedataclientfactory static method)": [[1, "nautilus_trader.adapters.betfair.factories.BetfairLiveDataClientFactory.create"]], "create() (betfairliveexecclientfactory static method)": [[1, "nautilus_trader.adapters.betfair.factories.BetfairLiveExecClientFactory.create"]], "create_task() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.create_task"]], "create_task() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.create_task"]], "currencies() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.currencies"]], "currency() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.currency"]], "degrade() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.degrade"]], "degrade() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.degrade"]], "deltas (bsporderbookdeltas attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDeltas.deltas"]], "dict() (betfairdataclientconfig method)": [[1, "nautilus_trader.adapters.betfair.config.BetfairDataClientConfig.dict"]], "dict() (betfairexecclientconfig method)": [[1, "nautilus_trader.adapters.betfair.config.BetfairExecClientConfig.dict"]], "disconnect() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.disconnect"]], "disconnect() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.disconnect"]], "dispose() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.dispose"]], "dispose() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.dispose"]], "fault() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.fault"]], "fault() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.fault"]], "find() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.find"]], "flags (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.flags"]], "from_dict() (bsporderbookdelta static method)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.from_dict"]], "from_dict() (bsporderbookdeltas static method)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDeltas.from_dict"]], "from_dict() (betfairticker class method)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairTicker.from_dict"]], "fully_qualified_name() (bsporderbookdelta class method)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.fully_qualified_name"]], "fully_qualified_name() (bsporderbookdeltas class method)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDeltas.fully_qualified_name"]], "fully_qualified_name() (betfairdataclient class method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.fully_qualified_name"]], "fully_qualified_name() (betfairdataclientconfig class method)": [[1, "nautilus_trader.adapters.betfair.config.BetfairDataClientConfig.fully_qualified_name"]], "fully_qualified_name() (betfairexecclientconfig class method)": [[1, "nautilus_trader.adapters.betfair.config.BetfairExecClientConfig.fully_qualified_name"]], "fully_qualified_name() (betfairexecutionclient class method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.fully_qualified_name"]], "fully_qualified_name() (betfairstartingprice class method)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairStartingPrice.fully_qualified_name"]], "fully_qualified_name() (betfairticker class method)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairTicker.fully_qualified_name"]], "generate_account_state() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_account_state"]], "generate_mass_status() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_mass_status"]], "generate_order_accepted() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_accepted"]], "generate_order_cancel_rejected() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_cancel_rejected"]], "generate_order_canceled() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_canceled"]], "generate_order_expired() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_expired"]], "generate_order_filled() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_filled"]], "generate_order_modify_rejected() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_modify_rejected"]], "generate_order_rejected() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_rejected"]], "generate_order_status_report() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_status_report"]], "generate_order_status_reports() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_status_reports"]], "generate_order_submitted() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_submitted"]], "generate_order_triggered() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_triggered"]], "generate_order_updated() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_updated"]], "generate_position_status_reports() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_position_status_reports"]], "generate_trade_reports() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_trade_reports"]], "get_account() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.get_account"]], "get_all() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.get_all"]], "get_betting_instrument() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.get_betting_instrument"]], "get_cached_betfair_client() (in module nautilus_trader.adapters.betfair.factories)": [[1, "nautilus_trader.adapters.betfair.factories.get_cached_betfair_client"]], "get_cached_betfair_instrument_provider() (in module nautilus_trader.adapters.betfair.factories)": [[1, "nautilus_trader.adapters.betfair.factories.get_cached_betfair_instrument_provider"]], "handle_order_stream_update() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.handle_order_stream_update"]], "id (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.id"]], "id (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.id"]], "initialize() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.initialize"]], "instrument_id (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.instrument_id"]], "instrument_id (bsporderbookdeltas attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDeltas.instrument_id"]], "instrument_id (betfairticker attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairTicker.instrument_id"]], "is_add (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.is_add"]], "is_clear (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.is_clear"]], "is_connected (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.is_connected"]], "is_connected (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.is_connected"]], "is_degraded (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.is_degraded"]], "is_degraded (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.is_degraded"]], "is_delete (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.is_delete"]], "is_disposed (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.is_disposed"]], "is_disposed (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.is_disposed"]], "is_faulted (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.is_faulted"]], "is_faulted (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.is_faulted"]], "is_initialized (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.is_initialized"]], "is_initialized (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.is_initialized"]], "is_running (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.is_running"]], "is_running (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.is_running"]], "is_snapshot (bsporderbookdeltas attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDeltas.is_snapshot"]], "is_stopped (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.is_stopped"]], "is_stopped (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.is_stopped"]], "is_update (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.is_update"]], "json() (betfairdataclientconfig method)": [[1, "nautilus_trader.adapters.betfair.config.BetfairDataClientConfig.json"]], "json() (betfairexecclientconfig method)": [[1, "nautilus_trader.adapters.betfair.config.BetfairExecClientConfig.json"]], "keep_alive() (betfairhttpclient method)": [[1, "nautilus_trader.adapters.betfair.client.BetfairHttpClient.keep_alive"]], "list_all() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.list_all"]], "list_market_catalogue() (betfairhttpclient method)": [[1, "nautilus_trader.adapters.betfair.client.BetfairHttpClient.list_market_catalogue"]], "list_navigation() (betfairhttpclient method)": [[1, "nautilus_trader.adapters.betfair.client.BetfairHttpClient.list_navigation"]], "load() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.load"]], "load_all() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.load_all"]], "load_all_async() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.load_all_async"]], "load_async() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.load_async"]], "load_ids() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.load_ids"]], "load_ids_async() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.load_ids_async"]], "load_markets() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.load_markets"]], "modify_order() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.modify_order"]], "nautilus_trader.adapters.betfair": [[1, "module-nautilus_trader.adapters.betfair"]], "nautilus_trader.adapters.betfair.client": [[1, "module-nautilus_trader.adapters.betfair.client"]], "nautilus_trader.adapters.betfair.common": [[1, "module-nautilus_trader.adapters.betfair.common"]], "nautilus_trader.adapters.betfair.config": [[1, "module-nautilus_trader.adapters.betfair.config"]], "nautilus_trader.adapters.betfair.data": [[1, "module-nautilus_trader.adapters.betfair.data"]], "nautilus_trader.adapters.betfair.data_types": [[1, "module-nautilus_trader.adapters.betfair.data_types"]], "nautilus_trader.adapters.betfair.execution": [[1, "module-nautilus_trader.adapters.betfair.execution"]], "nautilus_trader.adapters.betfair.factories": [[1, "module-nautilus_trader.adapters.betfair.factories"]], "nautilus_trader.adapters.betfair.historic": [[1, "module-nautilus_trader.adapters.betfair.historic"]], "nautilus_trader.adapters.betfair.providers": [[1, "module-nautilus_trader.adapters.betfair.providers"]], "nautilus_trader.adapters.betfair.sockets": [[1, "module-nautilus_trader.adapters.betfair.sockets"]], "oms_type (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.oms_type"]], "order (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.order"]], "parse() (betfairdataclientconfig class method)": [[1, "nautilus_trader.adapters.betfair.config.BetfairDataClientConfig.parse"]], "parse() (betfairexecclientconfig class method)": [[1, "nautilus_trader.adapters.betfair.config.BetfairExecClientConfig.parse"]], "post_connection() (betfairmarketstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient.post_connection"]], "post_connection() (betfairorderstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient.post_connection"]], "post_connection() (betfairstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient.post_connection"]], "post_disconnection() (betfairmarketstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient.post_disconnection"]], "post_disconnection() (betfairorderstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient.post_disconnection"]], "post_disconnection() (betfairstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient.post_disconnection"]], "query_order() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.query_order"]], "request() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.request"]], "request_bars() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.request_bars"]], "request_instrument() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.request_instrument"]], "request_instruments() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.request_instruments"]], "request_quote_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.request_quote_ticks"]], "request_trade_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.request_trade_ticks"]], "reset() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.reset"]], "reset() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.reset"]], "resume() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.resume"]], "resume() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.resume"]], "run_after_delay() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.run_after_delay"]], "run_after_delay() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.run_after_delay"]], "search_instruments() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.search_instruments"]], "sequence (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.sequence"]], "sequence (bsporderbookdeltas attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDeltas.sequence"]], "start() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.start"]], "start() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.start"]], "state (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.state"]], "state (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.state"]], "stop() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.stop"]], "stop() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.stop"]], "submit_order() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.submit_order"]], "submit_order_list() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.submit_order_list"]], "subscribe() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe"]], "subscribe_bars() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_bars"]], "subscribe_instrument() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_instrument"]], "subscribe_instrument_close() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_instrument_close"]], "subscribe_instrument_status_updates() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_instrument_status_updates"]], "subscribe_instruments() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_instruments"]], "subscribe_order_book_deltas() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_quote_ticks"]], "subscribe_ticker() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_ticker"]], "subscribe_trade_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_trade_ticks"]], "subscribe_venue_status_updates() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_venue_status_updates"]], "subscribed_bars() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_bars"]], "subscribed_generic_data() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_generic_data"]], "subscribed_instrument_close() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_instrument_close"]], "subscribed_instrument_status_updates() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_instrument_status_updates"]], "subscribed_instruments() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_instruments"]], "subscribed_order_book_deltas() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_order_book_deltas"]], "subscribed_order_book_snapshots() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_order_book_snapshots"]], "subscribed_quote_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_quote_ticks"]], "subscribed_tickers() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_tickers"]], "subscribed_trade_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_trade_ticks"]], "subscribed_venue_status_updates() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_venue_status_updates"]], "to_dict() (bsporderbookdelta static method)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.to_dict"]], "to_dict() (bsporderbookdeltas static method)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDeltas.to_dict"]], "to_dict() (betfairticker method)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairTicker.to_dict"]], "trader_id (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.trader_id"]], "trader_id (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.trader_id"]], "ts_event (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.ts_event"]], "ts_event (bsporderbookdeltas attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDeltas.ts_event"]], "ts_event (betfairstartingprice property)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairStartingPrice.ts_event"]], "ts_event (betfairticker attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairTicker.ts_event"]], "ts_init (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.ts_init"]], "ts_init (bsporderbookdeltas attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDeltas.ts_init"]], "ts_init (betfairstartingprice property)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairStartingPrice.ts_init"]], "ts_init (betfairticker attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairTicker.ts_init"]], "type (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.type"]], "type (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.type"]], "unsubscribe() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe"]], "unsubscribe_bars() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_bars"]], "unsubscribe_instrument() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_instrument"]], "unsubscribe_instrument_close() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_instrument_close"]], "unsubscribe_instrument_status_updates() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_instrument_status_updates"]], "unsubscribe_instruments() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_trade_ticks"]], "unsubscribe_venue_status_updates() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_venue_status_updates"]], "validate() (betfairdataclientconfig method)": [[1, "nautilus_trader.adapters.betfair.config.BetfairDataClientConfig.validate"]], "validate() (betfairexecclientconfig method)": [[1, "nautilus_trader.adapters.betfair.config.BetfairExecClientConfig.validate"]], "venue (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.venue"]], "venue (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.venue"]], "venue (betfairinstrumentprovider property)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.venue"]], "wait_for_order() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.wait_for_order"]], "watch_stream() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.watch_stream"]], "binanceaccounttype (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceAccountType"]], "binancebar (class in nautilus_trader.adapters.binance.common.types)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar"]], "binancedataclientconfig (class in nautilus_trader.adapters.binance.config)": [[2, "nautilus_trader.adapters.binance.config.BinanceDataClientConfig"]], "binanceenumparser (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceEnumParser"]], "binanceexchangefiltertype (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceExchangeFilterType"]], "binanceexecclientconfig (class in nautilus_trader.adapters.binance.config)": [[2, "nautilus_trader.adapters.binance.config.BinanceExecClientConfig"]], "binanceexecutiontype (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceExecutionType"]], "binancefuturescontractstatus (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesContractStatus"]], "binancefuturescontracttype (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesContractType"]], "binancefuturesdataclient (class in nautilus_trader.adapters.binance.futures.data)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient"]], "binancefuturesenumparser (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesEnumParser"]], "binancefutureseventtype (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesEventType"]], "binancefuturesexecutionclient (class in nautilus_trader.adapters.binance.futures.execution)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient"]], "binancefuturesinstrumentprovider (class in nautilus_trader.adapters.binance.futures.providers)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider"]], "binancefuturesmargintype (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesMarginType"]], "binancefuturesmarkpriceupdate (class in nautilus_trader.adapters.binance.futures.types)": [[2, "nautilus_trader.adapters.binance.futures.types.BinanceFuturesMarkPriceUpdate"]], "binancefuturespositionside (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesPositionSide"]], "binancefuturespositionupdatereason (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesPositionUpdateReason"]], "binancefuturesworkingtype (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesWorkingType"]], "binanceklineinterval (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceKlineInterval"]], "binancelivedataclientfactory (class in nautilus_trader.adapters.binance.factories)": [[2, "nautilus_trader.adapters.binance.factories.BinanceLiveDataClientFactory"]], "binanceliveexecclientfactory (class in nautilus_trader.adapters.binance.factories)": [[2, "nautilus_trader.adapters.binance.factories.BinanceLiveExecClientFactory"]], "binancemethodtype (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceMethodType"]], "binanceneworderresptype (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceNewOrderRespType"]], "binanceorderside (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceOrderSide"]], "binanceorderstatus (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceOrderStatus"]], "binanceordertype (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceOrderType"]], "binanceratelimitinterval (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceRateLimitInterval"]], "binanceratelimittype (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceRateLimitType"]], "binancesecuritytype (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceSecurityType"]], "binancespotdataclient (class in nautilus_trader.adapters.binance.spot.data)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient"]], "binancespotenumparser (class in nautilus_trader.adapters.binance.spot.enums)": [[2, "nautilus_trader.adapters.binance.spot.enums.BinanceSpotEnumParser"]], "binancespoteventtype (class in nautilus_trader.adapters.binance.spot.enums)": [[2, "nautilus_trader.adapters.binance.spot.enums.BinanceSpotEventType"]], "binancespotexecutionclient (class in nautilus_trader.adapters.binance.spot.execution)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient"]], "binancespotinstrumentprovider (class in nautilus_trader.adapters.binance.spot.providers)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider"]], "binancespotpermissions (class in nautilus_trader.adapters.binance.spot.enums)": [[2, "nautilus_trader.adapters.binance.spot.enums.BinanceSpotPermissions"]], "binancespotsymbolstatus (class in nautilus_trader.adapters.binance.spot.enums)": [[2, "nautilus_trader.adapters.binance.spot.enums.BinanceSpotSymbolStatus"]], "binancesymbolfiltertype (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceSymbolFilterType"]], "binanceticker (class in nautilus_trader.adapters.binance.common.types)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceTicker"]], "binancetimeinforce (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceTimeInForce"]], "account_id (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.account_id"]], "account_id (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.account_id"]], "account_type (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.account_type"]], "account_type (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.account_type"]], "add() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.add"]], "add() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.add"]], "add_bulk() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.add_bulk"]], "add_bulk() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.add_bulk"]], "add_currency() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.add_currency"]], "add_currency() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.add_currency"]], "bar_type (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.bar_type"]], "base_currency (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.base_currency"]], "base_currency (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.base_currency"]], "cancel_all_orders() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.cancel_all_orders"]], "cancel_all_orders() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.cancel_all_orders"]], "cancel_order() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.cancel_order"]], "cancel_order() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.cancel_order"]], "close (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.close"]], "connect() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.connect"]], "connect() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.connect"]], "connect() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.connect"]], "connect() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.connect"]], "count (binancefuturesinstrumentprovider property)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.count"]], "count (binancespotinstrumentprovider property)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.count"]], "create() (binancelivedataclientfactory static method)": [[2, "nautilus_trader.adapters.binance.factories.BinanceLiveDataClientFactory.create"]], "create() (binanceliveexecclientfactory static method)": [[2, "nautilus_trader.adapters.binance.factories.BinanceLiveExecClientFactory.create"]], "create_task() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.create_task"]], "create_task() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.create_task"]], "create_task() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.create_task"]], "create_task() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.create_task"]], "currencies() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.currencies"]], "currencies() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.currencies"]], "currency() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.currency"]], "currency() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.currency"]], "degrade() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.degrade"]], "degrade() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.degrade"]], "degrade() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.degrade"]], "degrade() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.degrade"]], "dict() (binancedataclientconfig method)": [[2, "nautilus_trader.adapters.binance.config.BinanceDataClientConfig.dict"]], "dict() (binanceexecclientconfig method)": [[2, "nautilus_trader.adapters.binance.config.BinanceExecClientConfig.dict"]], "disconnect() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.disconnect"]], "disconnect() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.disconnect"]], "disconnect() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.disconnect"]], "disconnect() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.disconnect"]], "dispose() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.dispose"]], "dispose() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.dispose"]], "dispose() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.dispose"]], "dispose() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.dispose"]], "fault() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.fault"]], "fault() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.fault"]], "fault() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.fault"]], "fault() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.fault"]], "find() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.find"]], "find() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.find"]], "from_dict() (binancebar static method)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.from_dict"]], "from_dict() (binancefuturesmarkpriceupdate static method)": [[2, "nautilus_trader.adapters.binance.futures.types.BinanceFuturesMarkPriceUpdate.from_dict"]], "from_dict() (binanceticker static method)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceTicker.from_dict"]], "fully_qualified_name() (binancebar class method)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.fully_qualified_name"]], "fully_qualified_name() (binancedataclientconfig class method)": [[2, "nautilus_trader.adapters.binance.config.BinanceDataClientConfig.fully_qualified_name"]], "fully_qualified_name() (binanceexecclientconfig class method)": [[2, "nautilus_trader.adapters.binance.config.BinanceExecClientConfig.fully_qualified_name"]], "fully_qualified_name() (binancefuturesdataclient class method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.fully_qualified_name"]], "fully_qualified_name() (binancefuturesexecutionclient class method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.fully_qualified_name"]], "fully_qualified_name() (binancefuturesmarkpriceupdate class method)": [[2, "nautilus_trader.adapters.binance.futures.types.BinanceFuturesMarkPriceUpdate.fully_qualified_name"]], "fully_qualified_name() (binancespotdataclient class method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.fully_qualified_name"]], "fully_qualified_name() (binancespotexecutionclient class method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.fully_qualified_name"]], "fully_qualified_name() (binanceticker class method)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceTicker.fully_qualified_name"]], "generate_account_state() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_account_state"]], "generate_account_state() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_account_state"]], "generate_mass_status() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_mass_status"]], "generate_mass_status() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_mass_status"]], "generate_order_accepted() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_accepted"]], "generate_order_accepted() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_accepted"]], "generate_order_cancel_rejected() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_cancel_rejected"]], "generate_order_cancel_rejected() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_cancel_rejected"]], "generate_order_canceled() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_canceled"]], "generate_order_canceled() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_canceled"]], "generate_order_expired() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_expired"]], "generate_order_expired() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_expired"]], "generate_order_filled() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_filled"]], "generate_order_filled() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_filled"]], "generate_order_modify_rejected() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_modify_rejected"]], "generate_order_modify_rejected() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_modify_rejected"]], "generate_order_rejected() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_rejected"]], "generate_order_rejected() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_rejected"]], "generate_order_status_report() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_status_report"]], "generate_order_status_report() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_status_report"]], "generate_order_status_reports() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_status_reports"]], "generate_order_status_reports() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_status_reports"]], "generate_order_submitted() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_submitted"]], "generate_order_submitted() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_submitted"]], "generate_order_triggered() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_triggered"]], "generate_order_triggered() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_triggered"]], "generate_order_updated() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_updated"]], "generate_order_updated() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_updated"]], "generate_position_status_reports() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_position_status_reports"]], "generate_position_status_reports() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_position_status_reports"]], "generate_trade_reports() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_trade_reports"]], "generate_trade_reports() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_trade_reports"]], "get_account() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.get_account"]], "get_account() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.get_account"]], "get_all() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.get_all"]], "get_all() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.get_all"]], "get_cached_binance_futures_instrument_provider() (in module nautilus_trader.adapters.binance.factories)": [[2, "nautilus_trader.adapters.binance.factories.get_cached_binance_futures_instrument_provider"]], "get_cached_binance_http_client() (in module nautilus_trader.adapters.binance.factories)": [[2, "nautilus_trader.adapters.binance.factories.get_cached_binance_http_client"]], "get_cached_binance_spot_instrument_provider() (in module nautilus_trader.adapters.binance.factories)": [[2, "nautilus_trader.adapters.binance.factories.get_cached_binance_spot_instrument_provider"]], "high (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.high"]], "id (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.id"]], "id (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.id"]], "id (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.id"]], "id (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.id"]], "initialize() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.initialize"]], "initialize() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.initialize"]], "instrument_id (binanceticker attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceTicker.instrument_id"]], "is_connected (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.is_connected"]], "is_connected (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.is_connected"]], "is_connected (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.is_connected"]], "is_connected (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.is_connected"]], "is_degraded (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.is_degraded"]], "is_degraded (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.is_degraded"]], "is_degraded (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.is_degraded"]], "is_degraded (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.is_degraded"]], "is_disposed (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.is_disposed"]], "is_disposed (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.is_disposed"]], "is_disposed (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.is_disposed"]], "is_disposed (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.is_disposed"]], "is_faulted (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.is_faulted"]], "is_faulted (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.is_faulted"]], "is_faulted (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.is_faulted"]], "is_faulted (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.is_faulted"]], "is_initialized (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.is_initialized"]], "is_initialized (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.is_initialized"]], "is_initialized (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.is_initialized"]], "is_initialized (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.is_initialized"]], "is_revision (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.is_revision"]], "is_running (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.is_running"]], "is_running (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.is_running"]], "is_running (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.is_running"]], "is_running (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.is_running"]], "is_single_price() (binancebar method)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.is_single_price"]], "is_stopped (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.is_stopped"]], "is_stopped (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.is_stopped"]], "is_stopped (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.is_stopped"]], "is_stopped (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.is_stopped"]], "json() (binancedataclientconfig method)": [[2, "nautilus_trader.adapters.binance.config.BinanceDataClientConfig.json"]], "json() (binanceexecclientconfig method)": [[2, "nautilus_trader.adapters.binance.config.BinanceExecClientConfig.json"]], "list_all() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.list_all"]], "list_all() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.list_all"]], "load() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.load"]], "load() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.load"]], "load_all() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.load_all"]], "load_all() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.load_all"]], "load_all_async() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.load_all_async"]], "load_all_async() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.load_all_async"]], "load_async() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.load_async"]], "load_async() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.load_async"]], "load_ids() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.load_ids"]], "load_ids() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.load_ids"]], "load_ids_async() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.load_ids_async"]], "load_ids_async() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.load_ids_async"]], "low (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.low"]], "modify_order() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.modify_order"]], "modify_order() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.modify_order"]], "nautilus_trader.adapters.binance": [[2, "module-nautilus_trader.adapters.binance"]], "nautilus_trader.adapters.binance.common.enums": [[2, "module-nautilus_trader.adapters.binance.common.enums"]], "nautilus_trader.adapters.binance.common.types": [[2, "module-nautilus_trader.adapters.binance.common.types"]], "nautilus_trader.adapters.binance.config": [[2, "module-nautilus_trader.adapters.binance.config"]], "nautilus_trader.adapters.binance.factories": [[2, "module-nautilus_trader.adapters.binance.factories"]], "nautilus_trader.adapters.binance.futures.data": [[2, "module-nautilus_trader.adapters.binance.futures.data"]], "nautilus_trader.adapters.binance.futures.enums": [[2, "module-nautilus_trader.adapters.binance.futures.enums"]], "nautilus_trader.adapters.binance.futures.execution": [[2, "module-nautilus_trader.adapters.binance.futures.execution"]], "nautilus_trader.adapters.binance.futures.providers": [[2, "module-nautilus_trader.adapters.binance.futures.providers"]], "nautilus_trader.adapters.binance.futures.types": [[2, "module-nautilus_trader.adapters.binance.futures.types"]], "nautilus_trader.adapters.binance.spot.data": [[2, "module-nautilus_trader.adapters.binance.spot.data"]], "nautilus_trader.adapters.binance.spot.enums": [[2, "module-nautilus_trader.adapters.binance.spot.enums"]], "nautilus_trader.adapters.binance.spot.execution": [[2, "module-nautilus_trader.adapters.binance.spot.execution"]], "nautilus_trader.adapters.binance.spot.providers": [[2, "module-nautilus_trader.adapters.binance.spot.providers"]], "oms_type (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.oms_type"]], "oms_type (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.oms_type"]], "open (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.open"]], "parse() (binancedataclientconfig class method)": [[2, "nautilus_trader.adapters.binance.config.BinanceDataClientConfig.parse"]], "parse() (binanceexecclientconfig class method)": [[2, "nautilus_trader.adapters.binance.config.BinanceExecClientConfig.parse"]], "query_order() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.query_order"]], "query_order() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.query_order"]], "request() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.request"]], "request() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.request"]], "request_bars() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.request_bars"]], "request_bars() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.request_bars"]], "request_instrument() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.request_instrument"]], "request_instrument() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.request_instrument"]], "request_instruments() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.request_instruments"]], "request_instruments() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.request_instruments"]], "request_quote_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.request_quote_ticks"]], "request_quote_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.request_quote_ticks"]], "request_trade_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.request_trade_ticks"]], "request_trade_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.request_trade_ticks"]], "reset() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.reset"]], "reset() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.reset"]], "reset() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.reset"]], "reset() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.reset"]], "resume() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.resume"]], "resume() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.resume"]], "resume() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.resume"]], "resume() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.resume"]], "run_after_delay() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.run_after_delay"]], "run_after_delay() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.run_after_delay"]], "run_after_delay() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.run_after_delay"]], "run_after_delay() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.run_after_delay"]], "start() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.start"]], "start() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.start"]], "start() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.start"]], "start() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.start"]], "state (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.state"]], "state (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.state"]], "state (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.state"]], "state (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.state"]], "stop() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.stop"]], "stop() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.stop"]], "stop() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.stop"]], "stop() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.stop"]], "submit_order() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.submit_order"]], "submit_order() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.submit_order"]], "submit_order_list() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.submit_order_list"]], "submit_order_list() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.submit_order_list"]], "subscribe() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe"]], "subscribe() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe"]], "subscribe_bars() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_bars"]], "subscribe_bars() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_bars"]], "subscribe_instrument() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_instrument"]], "subscribe_instrument() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_instrument"]], "subscribe_instrument_close() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_instrument_close"]], "subscribe_instrument_close() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_instrument_close"]], "subscribe_instrument_status_updates() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_instrument_status_updates"]], "subscribe_instrument_status_updates() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_instrument_status_updates"]], "subscribe_instruments() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_instruments"]], "subscribe_instruments() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_instruments"]], "subscribe_order_book_deltas() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_order_book_deltas"]], "subscribe_order_book_deltas() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_order_book_snapshots"]], "subscribe_order_book_snapshots() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_quote_ticks"]], "subscribe_quote_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_quote_ticks"]], "subscribe_ticker() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_ticker"]], "subscribe_ticker() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_ticker"]], "subscribe_trade_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_trade_ticks"]], "subscribe_trade_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_trade_ticks"]], "subscribe_venue_status_updates() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_venue_status_updates"]], "subscribe_venue_status_updates() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_venue_status_updates"]], "subscribed_bars() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_bars"]], "subscribed_bars() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_bars"]], "subscribed_generic_data() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_generic_data"]], "subscribed_generic_data() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_generic_data"]], "subscribed_instrument_close() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_instrument_close"]], "subscribed_instrument_close() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_instrument_close"]], "subscribed_instrument_status_updates() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_instrument_status_updates"]], "subscribed_instrument_status_updates() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_instrument_status_updates"]], "subscribed_instruments() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_instruments"]], "subscribed_instruments() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_instruments"]], "subscribed_order_book_deltas() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_order_book_deltas"]], "subscribed_order_book_deltas() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_order_book_deltas"]], "subscribed_order_book_snapshots() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_order_book_snapshots"]], "subscribed_order_book_snapshots() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_order_book_snapshots"]], "subscribed_quote_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_quote_ticks"]], "subscribed_quote_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_quote_ticks"]], "subscribed_tickers() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_tickers"]], "subscribed_tickers() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_tickers"]], "subscribed_trade_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_trade_ticks"]], "subscribed_trade_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_trade_ticks"]], "subscribed_venue_status_updates() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_venue_status_updates"]], "subscribed_venue_status_updates() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_venue_status_updates"]], "to_dict() (binancebar static method)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.to_dict"]], "to_dict() (binancefuturesmarkpriceupdate static method)": [[2, "nautilus_trader.adapters.binance.futures.types.BinanceFuturesMarkPriceUpdate.to_dict"]], "to_dict() (binanceticker static method)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceTicker.to_dict"]], "trader_id (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.trader_id"]], "trader_id (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.trader_id"]], "trader_id (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.trader_id"]], "trader_id (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.trader_id"]], "treat_expired_as_canceled (binancefuturesexecutionclient property)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.treat_expired_as_canceled"]], "treat_expired_as_canceled (binancespotexecutionclient property)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.treat_expired_as_canceled"]], "ts_event (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.ts_event"]], "ts_event (binancefuturesmarkpriceupdate property)": [[2, "nautilus_trader.adapters.binance.futures.types.BinanceFuturesMarkPriceUpdate.ts_event"]], "ts_event (binanceticker attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceTicker.ts_event"]], "ts_init (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.ts_init"]], "ts_init (binancefuturesmarkpriceupdate property)": [[2, "nautilus_trader.adapters.binance.futures.types.BinanceFuturesMarkPriceUpdate.ts_init"]], "ts_init (binanceticker attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceTicker.ts_init"]], "type (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.type"]], "type (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.type"]], "type (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.type"]], "type (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.type"]], "unsubscribe() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe"]], "unsubscribe() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe"]], "unsubscribe_bars() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_bars"]], "unsubscribe_bars() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_bars"]], "unsubscribe_instrument() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_instrument"]], "unsubscribe_instrument() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_instrument"]], "unsubscribe_instrument_close() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_instrument_close"]], "unsubscribe_instrument_close() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_instrument_close"]], "unsubscribe_instrument_status_updates() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_instrument_status_updates"]], "unsubscribe_instrument_status_updates() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_instrument_status_updates"]], "unsubscribe_instruments() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_instruments"]], "unsubscribe_instruments() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_deltas() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_order_book_snapshots"]], "unsubscribe_order_book_snapshots() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_quote_ticks"]], "unsubscribe_quote_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_ticker"]], "unsubscribe_ticker() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_trade_ticks"]], "unsubscribe_trade_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_trade_ticks"]], "unsubscribe_venue_status_updates() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_venue_status_updates"]], "unsubscribe_venue_status_updates() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_venue_status_updates"]], "use_position_ids (binancefuturesexecutionclient property)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.use_position_ids"]], "use_position_ids (binancespotexecutionclient property)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.use_position_ids"]], "validate() (binancedataclientconfig method)": [[2, "nautilus_trader.adapters.binance.config.BinanceDataClientConfig.validate"]], "validate() (binanceexecclientconfig method)": [[2, "nautilus_trader.adapters.binance.config.BinanceExecClientConfig.validate"]], "venue (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.venue"]], "venue (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.venue"]], "venue (binancefuturesinstrumentprovider property)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.venue"]], "venue (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.venue"]], "venue (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.venue"]], "venue (binancespotinstrumentprovider property)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.venue"]], "volume (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.volume"]], "nautilus_trader.adapters": [[3, "module-nautilus_trader.adapters"]], "comboleg (class in nautilus_trader.adapters.interactive_brokers.common)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ComboLeg"]], "contractid (class in nautilus_trader.adapters.interactive_brokers.common)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ContractId"]], "deltaneutralcontract (class in nautilus_trader.adapters.interactive_brokers.common)": [[4, "nautilus_trader.adapters.interactive_brokers.common.DeltaNeutralContract"]], "ibcontract (class in nautilus_trader.adapters.interactive_brokers.common)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBContract"]], "ibcontractdetails (class in nautilus_trader.adapters.interactive_brokers.common)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBContractDetails"]], "ibordertags (class in nautilus_trader.adapters.interactive_brokers.common)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBOrderTags"]], "interactivebrokersdataclient (class in nautilus_trader.adapters.interactive_brokers.data)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient"]], "interactivebrokersdataclientconfig (class in nautilus_trader.adapters.interactive_brokers.config)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersDataClientConfig"]], "interactivebrokersexecclientconfig (class in nautilus_trader.adapters.interactive_brokers.config)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersExecClientConfig"]], "interactivebrokersexecutionclient (class in nautilus_trader.adapters.interactive_brokers.execution)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient"]], "interactivebrokersgatewayconfig (class in nautilus_trader.adapters.interactive_brokers.config)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersGatewayConfig"]], "interactivebrokersinstrumentprovider (class in nautilus_trader.adapters.interactive_brokers.providers)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider"]], "interactivebrokersinstrumentproviderconfig (class in nautilus_trader.adapters.interactive_brokers.config)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersInstrumentProviderConfig"]], "interactivebrokerslivedataclientfactory (class in nautilus_trader.adapters.interactive_brokers.factories)": [[4, "nautilus_trader.adapters.interactive_brokers.factories.InteractiveBrokersLiveDataClientFactory"]], "interactivebrokersliveexecclientfactory (class in nautilus_trader.adapters.interactive_brokers.factories)": [[4, "nautilus_trader.adapters.interactive_brokers.factories.InteractiveBrokersLiveExecClientFactory"]], "account_id (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.account_id"]], "account_type (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.account_type"]], "add() (interactivebrokersinstrumentprovider method)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.add"]], "add_bulk() (interactivebrokersinstrumentprovider method)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.add_bulk"]], "add_currency() (interactivebrokersinstrumentprovider method)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.add_currency"]], "as_integer_ratio() (contractid method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ContractId.as_integer_ratio"]], "base_currency (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.base_currency"]], "bit_count() (contractid method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ContractId.bit_count"]], "bit_length() (contractid method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ContractId.bit_length"]], "cancel_all_orders() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.cancel_all_orders"]], "cancel_order() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.cancel_order"]], "conjugate() (contractid method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ContractId.conjugate"]], "connect() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.connect"]], "connect() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.connect"]], "count (interactivebrokersinstrumentprovider property)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.count"]], "create() (interactivebrokerslivedataclientfactory static method)": [[4, "nautilus_trader.adapters.interactive_brokers.factories.InteractiveBrokersLiveDataClientFactory.create"]], "create() (interactivebrokersliveexecclientfactory static method)": [[4, "nautilus_trader.adapters.interactive_brokers.factories.InteractiveBrokersLiveExecClientFactory.create"]], "create_task() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.create_task"]], "create_task() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.create_task"]], "currencies() (interactivebrokersinstrumentprovider method)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.currencies"]], "currency() (interactivebrokersinstrumentprovider method)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.currency"]], "degrade() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.degrade"]], "degrade() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.degrade"]], "denominator (contractid attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ContractId.denominator"]], "dict() (comboleg method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ComboLeg.dict"]], "dict() (deltaneutralcontract method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.DeltaNeutralContract.dict"]], "dict() (ibcontract method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBContract.dict"]], "dict() (ibcontractdetails method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBContractDetails.dict"]], "dict() (ibordertags method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBOrderTags.dict"]], "dict() (interactivebrokersdataclientconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersDataClientConfig.dict"]], "dict() (interactivebrokersexecclientconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersExecClientConfig.dict"]], "dict() (interactivebrokersgatewayconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersGatewayConfig.dict"]], "dict() (interactivebrokersinstrumentproviderconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersInstrumentProviderConfig.dict"]], "disconnect() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.disconnect"]], "disconnect() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.disconnect"]], "dispose() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.dispose"]], "dispose() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.dispose"]], "fault() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.fault"]], "fault() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.fault"]], "find() (interactivebrokersinstrumentprovider method)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.find"]], "from_bytes() (contractid method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ContractId.from_bytes"]], "fully_qualified_name() (comboleg class method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ComboLeg.fully_qualified_name"]], "fully_qualified_name() (deltaneutralcontract class method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.DeltaNeutralContract.fully_qualified_name"]], "fully_qualified_name() (ibcontract class method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBContract.fully_qualified_name"]], "fully_qualified_name() (ibcontractdetails class method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBContractDetails.fully_qualified_name"]], "fully_qualified_name() (ibordertags class method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBOrderTags.fully_qualified_name"]], "fully_qualified_name() (interactivebrokersdataclient class method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.fully_qualified_name"]], "fully_qualified_name() (interactivebrokersdataclientconfig class method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersDataClientConfig.fully_qualified_name"]], "fully_qualified_name() (interactivebrokersexecclientconfig class method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersExecClientConfig.fully_qualified_name"]], "fully_qualified_name() (interactivebrokersexecutionclient class method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.fully_qualified_name"]], "fully_qualified_name() (interactivebrokersgatewayconfig class method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersGatewayConfig.fully_qualified_name"]], "fully_qualified_name() (interactivebrokersinstrumentproviderconfig class method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersInstrumentProviderConfig.fully_qualified_name"]], "generate_account_state() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_account_state"]], "generate_mass_status() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_mass_status"]], "generate_order_accepted() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_order_accepted"]], "generate_order_cancel_rejected() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_order_cancel_rejected"]], "generate_order_canceled() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_order_canceled"]], "generate_order_expired() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_order_expired"]], "generate_order_filled() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_order_filled"]], "generate_order_modify_rejected() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_order_modify_rejected"]], "generate_order_rejected() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_order_rejected"]], "generate_order_status_report() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_order_status_report"]], "generate_order_status_reports() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_order_status_reports"]], "generate_order_submitted() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_order_submitted"]], "generate_order_triggered() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_order_triggered"]], "generate_order_updated() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_order_updated"]], "generate_position_status_reports() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_position_status_reports"]], "generate_trade_reports() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.generate_trade_reports"]], "get_account() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.get_account"]], "get_all() (interactivebrokersinstrumentprovider method)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.get_all"]], "get_cached_ib_client() (in module nautilus_trader.adapters.interactive_brokers.factories)": [[4, "nautilus_trader.adapters.interactive_brokers.factories.get_cached_ib_client"]], "get_cached_interactive_brokers_instrument_provider() (in module nautilus_trader.adapters.interactive_brokers.factories)": [[4, "nautilus_trader.adapters.interactive_brokers.factories.get_cached_interactive_brokers_instrument_provider"]], "id (interactivebrokersdataclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.id"]], "id (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.id"]], "imag (contractid attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ContractId.imag"]], "initialize() (interactivebrokersinstrumentprovider method)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.initialize"]], "is_connected (interactivebrokersdataclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.is_connected"]], "is_connected (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.is_connected"]], "is_degraded (interactivebrokersdataclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.is_degraded"]], "is_degraded (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.is_degraded"]], "is_disposed (interactivebrokersdataclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.is_disposed"]], "is_disposed (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.is_disposed"]], "is_faulted (interactivebrokersdataclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.is_faulted"]], "is_faulted (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.is_faulted"]], "is_initialized (interactivebrokersdataclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.is_initialized"]], "is_initialized (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.is_initialized"]], "is_running (interactivebrokersdataclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.is_running"]], "is_running (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.is_running"]], "is_stopped (interactivebrokersdataclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.is_stopped"]], "is_stopped (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.is_stopped"]], "json() (comboleg method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ComboLeg.json"]], "json() (deltaneutralcontract method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.DeltaNeutralContract.json"]], "json() (ibcontract method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBContract.json"]], "json() (ibcontractdetails method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBContractDetails.json"]], "json() (ibordertags method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBOrderTags.json"]], "json() (interactivebrokersdataclientconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersDataClientConfig.json"]], "json() (interactivebrokersexecclientconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersExecClientConfig.json"]], "json() (interactivebrokersgatewayconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersGatewayConfig.json"]], "json() (interactivebrokersinstrumentproviderconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersInstrumentProviderConfig.json"]], "list_all() (interactivebrokersinstrumentprovider method)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.list_all"]], "load() (interactivebrokersinstrumentprovider method)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.load"]], "load_all() (interactivebrokersinstrumentprovider method)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.load_all"]], "load_all_async() (interactivebrokersinstrumentprovider method)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.load_all_async"]], "load_async() (interactivebrokersinstrumentprovider method)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.load_async"]], "load_ids() (interactivebrokersinstrumentprovider method)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.load_ids"]], "load_ids_async() (interactivebrokersinstrumentprovider method)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.load_ids_async"]], "modify_order() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.modify_order"]], "nautilus_trader.adapters.interactive_brokers": [[4, "module-nautilus_trader.adapters.interactive_brokers"]], "nautilus_trader.adapters.interactive_brokers.common": [[4, "module-nautilus_trader.adapters.interactive_brokers.common"]], "nautilus_trader.adapters.interactive_brokers.config": [[4, "module-nautilus_trader.adapters.interactive_brokers.config"]], "nautilus_trader.adapters.interactive_brokers.data": [[4, "module-nautilus_trader.adapters.interactive_brokers.data"]], "nautilus_trader.adapters.interactive_brokers.execution": [[4, "module-nautilus_trader.adapters.interactive_brokers.execution"]], "nautilus_trader.adapters.interactive_brokers.factories": [[4, "module-nautilus_trader.adapters.interactive_brokers.factories"]], "nautilus_trader.adapters.interactive_brokers.providers": [[4, "module-nautilus_trader.adapters.interactive_brokers.providers"]], "numerator (contractid attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ContractId.numerator"]], "oms_type (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.oms_type"]], "parse() (comboleg class method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ComboLeg.parse"]], "parse() (deltaneutralcontract class method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.DeltaNeutralContract.parse"]], "parse() (ibcontract class method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBContract.parse"]], "parse() (ibcontractdetails class method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBContractDetails.parse"]], "parse() (ibordertags class method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBOrderTags.parse"]], "parse() (interactivebrokersdataclientconfig class method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersDataClientConfig.parse"]], "parse() (interactivebrokersexecclientconfig class method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersExecClientConfig.parse"]], "parse() (interactivebrokersgatewayconfig class method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersGatewayConfig.parse"]], "parse() (interactivebrokersinstrumentproviderconfig class method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersInstrumentProviderConfig.parse"]], "query_order() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.query_order"]], "real (contractid attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ContractId.real"]], "request() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.request"]], "request_bars() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.request_bars"]], "request_instrument() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.request_instrument"]], "request_instruments() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.request_instruments"]], "request_quote_ticks() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.request_quote_ticks"]], "request_trade_ticks() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.request_trade_ticks"]], "reset() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.reset"]], "reset() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.reset"]], "resume() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.resume"]], "resume() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.resume"]], "run_after_delay() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.run_after_delay"]], "run_after_delay() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.run_after_delay"]], "start() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.start"]], "start() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.start"]], "state (interactivebrokersdataclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.state"]], "state (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.state"]], "stop() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.stop"]], "stop() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.stop"]], "submit_order() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.submit_order"]], "submit_order_list() (interactivebrokersexecutionclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.submit_order_list"]], "subscribe() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribe"]], "subscribe_bars() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribe_bars"]], "subscribe_instrument() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribe_instrument"]], "subscribe_instrument_close() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribe_instrument_close"]], "subscribe_instrument_status_updates() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribe_instrument_status_updates"]], "subscribe_instruments() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribe_instruments"]], "subscribe_order_book_deltas() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribe_quote_ticks"]], "subscribe_ticker() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribe_ticker"]], "subscribe_trade_ticks() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribe_trade_ticks"]], "subscribe_venue_status_updates() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribe_venue_status_updates"]], "subscribed_bars() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribed_bars"]], "subscribed_generic_data() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribed_generic_data"]], "subscribed_instrument_close() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribed_instrument_close"]], "subscribed_instrument_status_updates() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribed_instrument_status_updates"]], "subscribed_instruments() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribed_instruments"]], "subscribed_order_book_deltas() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribed_order_book_deltas"]], "subscribed_order_book_snapshots() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribed_order_book_snapshots"]], "subscribed_quote_ticks() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribed_quote_ticks"]], "subscribed_tickers() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribed_tickers"]], "subscribed_trade_ticks() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribed_trade_ticks"]], "subscribed_venue_status_updates() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.subscribed_venue_status_updates"]], "to_bytes() (contractid method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ContractId.to_bytes"]], "trader_id (interactivebrokersdataclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.trader_id"]], "trader_id (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.trader_id"]], "type (interactivebrokersdataclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.type"]], "type (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.type"]], "unsubscribe() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.unsubscribe"]], "unsubscribe_bars() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.unsubscribe_bars"]], "unsubscribe_instrument() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.unsubscribe_instrument"]], "unsubscribe_instrument_close() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.unsubscribe_instrument_close"]], "unsubscribe_instrument_status_updates() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.unsubscribe_instrument_status_updates"]], "unsubscribe_instruments() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.unsubscribe_trade_ticks"]], "unsubscribe_venue_status_updates() (interactivebrokersdataclient method)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.unsubscribe_venue_status_updates"]], "validate() (comboleg method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.ComboLeg.validate"]], "validate() (deltaneutralcontract method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.DeltaNeutralContract.validate"]], "validate() (ibcontract method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBContract.validate"]], "validate() (ibcontractdetails method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBContractDetails.validate"]], "validate() (ibordertags method)": [[4, "nautilus_trader.adapters.interactive_brokers.common.IBOrderTags.validate"]], "validate() (interactivebrokersdataclientconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersDataClientConfig.validate"]], "validate() (interactivebrokersexecclientconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersExecClientConfig.validate"]], "validate() (interactivebrokersgatewayconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersGatewayConfig.validate"]], "validate() (interactivebrokersinstrumentproviderconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersInstrumentProviderConfig.validate"]], "venue (interactivebrokersdataclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.data.InteractiveBrokersDataClient.venue"]], "venue (interactivebrokersexecutionclient attribute)": [[4, "nautilus_trader.adapters.interactive_brokers.execution.InteractiveBrokersExecutionClient.venue"]], "venue (interactivebrokersinstrumentprovider property)": [[4, "nautilus_trader.adapters.interactive_brokers.providers.InteractiveBrokersInstrumentProvider.venue"]], "avgloser (class in nautilus_trader.analysis.statistics.loser_avg)": [[5, "nautilus_trader.analysis.statistics.loser_avg.AvgLoser"]], "avgwinner (class in nautilus_trader.analysis.statistics.winner_avg)": [[5, "nautilus_trader.analysis.statistics.winner_avg.AvgWinner"]], "expectancy (class in nautilus_trader.analysis.statistics.expectancy)": [[5, "nautilus_trader.analysis.statistics.expectancy.Expectancy"]], "longratio (class in nautilus_trader.analysis.statistics.long_ratio)": [[5, "nautilus_trader.analysis.statistics.long_ratio.LongRatio"]], "maxloser (class in nautilus_trader.analysis.statistics.loser_max)": [[5, "nautilus_trader.analysis.statistics.loser_max.MaxLoser"]], "maxwinner (class in nautilus_trader.analysis.statistics.winner_max)": [[5, "nautilus_trader.analysis.statistics.winner_max.MaxWinner"]], "minloser (class in nautilus_trader.analysis.statistics.loser_min)": [[5, "nautilus_trader.analysis.statistics.loser_min.MinLoser"]], "minwinner (class in nautilus_trader.analysis.statistics.winner_min)": [[5, "nautilus_trader.analysis.statistics.winner_min.MinWinner"]], "portfolioanalyzer (class in nautilus_trader.analysis.analyzer)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer"]], "portfoliostatistic (class in nautilus_trader.analysis.statistic)": [[5, "nautilus_trader.analysis.statistic.PortfolioStatistic"]], "profitfactor (class in nautilus_trader.analysis.statistics.profit_factor)": [[5, "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor"]], "reportprovider (class in nautilus_trader.analysis.reporter)": [[5, "nautilus_trader.analysis.reporter.ReportProvider"]], "returnsaverage (class in nautilus_trader.analysis.statistics.returns_avg)": [[5, "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage"]], "returnsaverageloss (class in nautilus_trader.analysis.statistics.returns_avg_loss)": [[5, "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss"]], "returnsaveragewin (class in nautilus_trader.analysis.statistics.returns_avg_win)": [[5, "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin"]], "returnsvolatility (class in nautilus_trader.analysis.statistics.returns_volatility)": [[5, "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility"]], "riskreturnratio (class in nautilus_trader.analysis.statistics.risk_return_ratio)": [[5, "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio"]], "sharperatio (class in nautilus_trader.analysis.statistics.sharpe_ratio)": [[5, "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio"]], "sortinoratio (class in nautilus_trader.analysis.statistics.sortino_ratio)": [[5, "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio"]], "winrate (class in nautilus_trader.analysis.statistics.win_rate)": [[5, "nautilus_trader.analysis.statistics.win_rate.WinRate"]], "add_positions() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.add_positions"]], "add_return() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.add_return"]], "add_trade() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.add_trade"]], "calculate_from_orders() (avgloser method)": [[5, "nautilus_trader.analysis.statistics.loser_avg.AvgLoser.calculate_from_orders"]], "calculate_from_orders() (avgwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_avg.AvgWinner.calculate_from_orders"]], "calculate_from_orders() (expectancy method)": [[5, "nautilus_trader.analysis.statistics.expectancy.Expectancy.calculate_from_orders"]], "calculate_from_orders() (longratio method)": [[5, "nautilus_trader.analysis.statistics.long_ratio.LongRatio.calculate_from_orders"]], "calculate_from_orders() (maxloser method)": [[5, "nautilus_trader.analysis.statistics.loser_max.MaxLoser.calculate_from_orders"]], "calculate_from_orders() (maxwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_max.MaxWinner.calculate_from_orders"]], "calculate_from_orders() (minloser method)": [[5, "nautilus_trader.analysis.statistics.loser_min.MinLoser.calculate_from_orders"]], "calculate_from_orders() (minwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_min.MinWinner.calculate_from_orders"]], "calculate_from_orders() (portfoliostatistic method)": [[5, "nautilus_trader.analysis.statistic.PortfolioStatistic.calculate_from_orders"]], "calculate_from_orders() (profitfactor method)": [[5, "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor.calculate_from_orders"]], "calculate_from_orders() (returnsaverage method)": [[5, "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage.calculate_from_orders"]], "calculate_from_orders() (returnsaverageloss method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss.calculate_from_orders"]], "calculate_from_orders() (returnsaveragewin method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin.calculate_from_orders"]], "calculate_from_orders() (returnsvolatility method)": [[5, "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility.calculate_from_orders"]], "calculate_from_orders() (riskreturnratio method)": [[5, "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio.calculate_from_orders"]], "calculate_from_orders() (sharperatio method)": [[5, "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio.calculate_from_orders"]], "calculate_from_orders() (sortinoratio method)": [[5, "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio.calculate_from_orders"]], "calculate_from_orders() (winrate method)": [[5, "nautilus_trader.analysis.statistics.win_rate.WinRate.calculate_from_orders"]], "calculate_from_positions() (avgloser method)": [[5, "nautilus_trader.analysis.statistics.loser_avg.AvgLoser.calculate_from_positions"]], "calculate_from_positions() (avgwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_avg.AvgWinner.calculate_from_positions"]], "calculate_from_positions() (expectancy method)": [[5, "nautilus_trader.analysis.statistics.expectancy.Expectancy.calculate_from_positions"]], "calculate_from_positions() (longratio method)": [[5, "nautilus_trader.analysis.statistics.long_ratio.LongRatio.calculate_from_positions"]], "calculate_from_positions() (maxloser method)": [[5, "nautilus_trader.analysis.statistics.loser_max.MaxLoser.calculate_from_positions"]], "calculate_from_positions() (maxwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_max.MaxWinner.calculate_from_positions"]], "calculate_from_positions() (minloser method)": [[5, "nautilus_trader.analysis.statistics.loser_min.MinLoser.calculate_from_positions"]], "calculate_from_positions() (minwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_min.MinWinner.calculate_from_positions"]], "calculate_from_positions() (portfoliostatistic method)": [[5, "nautilus_trader.analysis.statistic.PortfolioStatistic.calculate_from_positions"]], "calculate_from_positions() (profitfactor method)": [[5, "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor.calculate_from_positions"]], "calculate_from_positions() (returnsaverage method)": [[5, "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage.calculate_from_positions"]], "calculate_from_positions() (returnsaverageloss method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss.calculate_from_positions"]], "calculate_from_positions() (returnsaveragewin method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin.calculate_from_positions"]], "calculate_from_positions() (returnsvolatility method)": [[5, "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility.calculate_from_positions"]], "calculate_from_positions() (riskreturnratio method)": [[5, "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio.calculate_from_positions"]], "calculate_from_positions() (sharperatio method)": [[5, "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio.calculate_from_positions"]], "calculate_from_positions() (sortinoratio method)": [[5, "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio.calculate_from_positions"]], "calculate_from_positions() (winrate method)": [[5, "nautilus_trader.analysis.statistics.win_rate.WinRate.calculate_from_positions"]], "calculate_from_realized_pnls() (avgloser method)": [[5, "nautilus_trader.analysis.statistics.loser_avg.AvgLoser.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (avgwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_avg.AvgWinner.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (expectancy method)": [[5, "nautilus_trader.analysis.statistics.expectancy.Expectancy.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (longratio method)": [[5, "nautilus_trader.analysis.statistics.long_ratio.LongRatio.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (maxloser method)": [[5, "nautilus_trader.analysis.statistics.loser_max.MaxLoser.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (maxwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_max.MaxWinner.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (minloser method)": [[5, "nautilus_trader.analysis.statistics.loser_min.MinLoser.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (minwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_min.MinWinner.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (portfoliostatistic method)": [[5, "nautilus_trader.analysis.statistic.PortfolioStatistic.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (profitfactor method)": [[5, "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (returnsaverage method)": [[5, "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (returnsaverageloss method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (returnsaveragewin method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (returnsvolatility method)": [[5, "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (riskreturnratio method)": [[5, "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (sharperatio method)": [[5, "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (sortinoratio method)": [[5, "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (winrate method)": [[5, "nautilus_trader.analysis.statistics.win_rate.WinRate.calculate_from_realized_pnls"]], "calculate_from_returns() (avgloser method)": [[5, "nautilus_trader.analysis.statistics.loser_avg.AvgLoser.calculate_from_returns"]], "calculate_from_returns() (avgwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_avg.AvgWinner.calculate_from_returns"]], "calculate_from_returns() (expectancy method)": [[5, "nautilus_trader.analysis.statistics.expectancy.Expectancy.calculate_from_returns"]], "calculate_from_returns() (longratio method)": [[5, "nautilus_trader.analysis.statistics.long_ratio.LongRatio.calculate_from_returns"]], "calculate_from_returns() (maxloser method)": [[5, "nautilus_trader.analysis.statistics.loser_max.MaxLoser.calculate_from_returns"]], "calculate_from_returns() (maxwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_max.MaxWinner.calculate_from_returns"]], "calculate_from_returns() (minloser method)": [[5, "nautilus_trader.analysis.statistics.loser_min.MinLoser.calculate_from_returns"]], "calculate_from_returns() (minwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_min.MinWinner.calculate_from_returns"]], "calculate_from_returns() (portfoliostatistic method)": [[5, "nautilus_trader.analysis.statistic.PortfolioStatistic.calculate_from_returns"]], "calculate_from_returns() (profitfactor method)": [[5, "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor.calculate_from_returns"]], "calculate_from_returns() (returnsaverage method)": [[5, "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage.calculate_from_returns"]], "calculate_from_returns() (returnsaverageloss method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss.calculate_from_returns"]], "calculate_from_returns() (returnsaveragewin method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin.calculate_from_returns"]], "calculate_from_returns() (returnsvolatility method)": [[5, "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility.calculate_from_returns"]], "calculate_from_returns() (riskreturnratio method)": [[5, "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio.calculate_from_returns"]], "calculate_from_returns() (sharperatio method)": [[5, "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio.calculate_from_returns"]], "calculate_from_returns() (sortinoratio method)": [[5, "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio.calculate_from_returns"]], "calculate_from_returns() (winrate method)": [[5, "nautilus_trader.analysis.statistics.win_rate.WinRate.calculate_from_returns"]], "calculate_statistics() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.calculate_statistics"]], "currencies (portfolioanalyzer property)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.currencies"]], "deregister_statistic() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.deregister_statistic"]], "deregister_statistics() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.deregister_statistics"]], "fully_qualified_name() (avgloser class method)": [[5, "nautilus_trader.analysis.statistics.loser_avg.AvgLoser.fully_qualified_name"]], "fully_qualified_name() (avgwinner class method)": [[5, "nautilus_trader.analysis.statistics.winner_avg.AvgWinner.fully_qualified_name"]], "fully_qualified_name() (expectancy class method)": [[5, "nautilus_trader.analysis.statistics.expectancy.Expectancy.fully_qualified_name"]], "fully_qualified_name() (longratio class method)": [[5, "nautilus_trader.analysis.statistics.long_ratio.LongRatio.fully_qualified_name"]], "fully_qualified_name() (maxloser class method)": [[5, "nautilus_trader.analysis.statistics.loser_max.MaxLoser.fully_qualified_name"]], "fully_qualified_name() (maxwinner class method)": [[5, "nautilus_trader.analysis.statistics.winner_max.MaxWinner.fully_qualified_name"]], "fully_qualified_name() (minloser class method)": [[5, "nautilus_trader.analysis.statistics.loser_min.MinLoser.fully_qualified_name"]], "fully_qualified_name() (minwinner class method)": [[5, "nautilus_trader.analysis.statistics.winner_min.MinWinner.fully_qualified_name"]], "fully_qualified_name() (portfoliostatistic class method)": [[5, "nautilus_trader.analysis.statistic.PortfolioStatistic.fully_qualified_name"]], "fully_qualified_name() (profitfactor class method)": [[5, "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor.fully_qualified_name"]], "fully_qualified_name() (returnsaverage class method)": [[5, "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage.fully_qualified_name"]], "fully_qualified_name() (returnsaverageloss class method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss.fully_qualified_name"]], "fully_qualified_name() (returnsaveragewin class method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin.fully_qualified_name"]], "fully_qualified_name() (returnsvolatility class method)": [[5, "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility.fully_qualified_name"]], "fully_qualified_name() (riskreturnratio class method)": [[5, "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio.fully_qualified_name"]], "fully_qualified_name() (sharperatio class method)": [[5, "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio.fully_qualified_name"]], "fully_qualified_name() (sortinoratio class method)": [[5, "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio.fully_qualified_name"]], "fully_qualified_name() (winrate class method)": [[5, "nautilus_trader.analysis.statistics.win_rate.WinRate.fully_qualified_name"]], "generate_account_report() (reportprovider static method)": [[5, "nautilus_trader.analysis.reporter.ReportProvider.generate_account_report"]], "generate_order_fills_report() (reportprovider static method)": [[5, "nautilus_trader.analysis.reporter.ReportProvider.generate_order_fills_report"]], "generate_orders_report() (reportprovider static method)": [[5, "nautilus_trader.analysis.reporter.ReportProvider.generate_orders_report"]], "generate_positions_report() (reportprovider static method)": [[5, "nautilus_trader.analysis.reporter.ReportProvider.generate_positions_report"]], "get_performance_stats_general() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.get_performance_stats_general"]], "get_performance_stats_pnls() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.get_performance_stats_pnls"]], "get_performance_stats_returns() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.get_performance_stats_returns"]], "get_stats_general_formatted() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.get_stats_general_formatted"]], "get_stats_pnls_formatted() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.get_stats_pnls_formatted"]], "get_stats_returns_formatted() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.get_stats_returns_formatted"]], "name (avgloser property)": [[5, "nautilus_trader.analysis.statistics.loser_avg.AvgLoser.name"]], "name (avgwinner property)": [[5, "nautilus_trader.analysis.statistics.winner_avg.AvgWinner.name"]], "name (expectancy property)": [[5, "nautilus_trader.analysis.statistics.expectancy.Expectancy.name"]], "name (longratio property)": [[5, "nautilus_trader.analysis.statistics.long_ratio.LongRatio.name"]], "name (maxloser property)": [[5, "nautilus_trader.analysis.statistics.loser_max.MaxLoser.name"]], "name (maxwinner property)": [[5, "nautilus_trader.analysis.statistics.winner_max.MaxWinner.name"]], "name (minloser property)": [[5, "nautilus_trader.analysis.statistics.loser_min.MinLoser.name"]], "name (minwinner property)": [[5, "nautilus_trader.analysis.statistics.winner_min.MinWinner.name"]], "name (portfoliostatistic property)": [[5, "nautilus_trader.analysis.statistic.PortfolioStatistic.name"]], "name (profitfactor property)": [[5, "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor.name"]], "name (returnsaverage property)": [[5, "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage.name"]], "name (returnsaverageloss property)": [[5, "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss.name"]], "name (returnsaveragewin property)": [[5, "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin.name"]], "name (returnsvolatility property)": [[5, "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility.name"]], "name (riskreturnratio property)": [[5, "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio.name"]], "name (sharperatio property)": [[5, "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio.name"]], "name (sortinoratio property)": [[5, "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio.name"]], "name (winrate property)": [[5, "nautilus_trader.analysis.statistics.win_rate.WinRate.name"]], "nautilus_trader.analysis": [[5, "module-nautilus_trader.analysis"]], "nautilus_trader.analysis.analyzer": [[5, "module-nautilus_trader.analysis.analyzer"]], "nautilus_trader.analysis.reporter": [[5, "module-nautilus_trader.analysis.reporter"]], "nautilus_trader.analysis.statistic": [[5, "module-nautilus_trader.analysis.statistic"]], "nautilus_trader.analysis.statistics.expectancy": [[5, "module-nautilus_trader.analysis.statistics.expectancy"]], "nautilus_trader.analysis.statistics.long_ratio": [[5, "module-nautilus_trader.analysis.statistics.long_ratio"]], "nautilus_trader.analysis.statistics.loser_avg": [[5, "module-nautilus_trader.analysis.statistics.loser_avg"]], "nautilus_trader.analysis.statistics.loser_max": [[5, "module-nautilus_trader.analysis.statistics.loser_max"]], "nautilus_trader.analysis.statistics.loser_min": [[5, "module-nautilus_trader.analysis.statistics.loser_min"]], "nautilus_trader.analysis.statistics.profit_factor": [[5, "module-nautilus_trader.analysis.statistics.profit_factor"]], "nautilus_trader.analysis.statistics.returns_avg": [[5, "module-nautilus_trader.analysis.statistics.returns_avg"]], "nautilus_trader.analysis.statistics.returns_avg_loss": [[5, "module-nautilus_trader.analysis.statistics.returns_avg_loss"]], "nautilus_trader.analysis.statistics.returns_avg_win": [[5, "module-nautilus_trader.analysis.statistics.returns_avg_win"]], "nautilus_trader.analysis.statistics.returns_volatility": [[5, "module-nautilus_trader.analysis.statistics.returns_volatility"]], "nautilus_trader.analysis.statistics.risk_return_ratio": [[5, "module-nautilus_trader.analysis.statistics.risk_return_ratio"]], "nautilus_trader.analysis.statistics.sharpe_ratio": [[5, "module-nautilus_trader.analysis.statistics.sharpe_ratio"]], "nautilus_trader.analysis.statistics.sortino_ratio": [[5, "module-nautilus_trader.analysis.statistics.sortino_ratio"]], "nautilus_trader.analysis.statistics.win_rate": [[5, "module-nautilus_trader.analysis.statistics.win_rate"]], "nautilus_trader.analysis.statistics.winner_avg": [[5, "module-nautilus_trader.analysis.statistics.winner_avg"]], "nautilus_trader.analysis.statistics.winner_max": [[5, "module-nautilus_trader.analysis.statistics.winner_max"]], "nautilus_trader.analysis.statistics.winner_min": [[5, "module-nautilus_trader.analysis.statistics.winner_min"]], "realized_pnls() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.realized_pnls"]], "register_statistic() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.register_statistic"]], "reset() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.reset"]], "returns() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.returns"]], "statistic() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.statistic"]], "total_pnl() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.total_pnl"]], "total_pnl_percentage() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.total_pnl_percentage"]], "backtestdataclient (class in nautilus_trader.backtest.data_client)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient"]], "backtestengine (class in nautilus_trader.backtest.engine)": [[6, "nautilus_trader.backtest.engine.BacktestEngine"]], "backtestexecclient (class in nautilus_trader.backtest.execution_client)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient"]], "backtestmarketdataclient (class in nautilus_trader.backtest.data_client)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient"]], "backtestnode (class in nautilus_trader.backtest.node)": [[6, "nautilus_trader.backtest.node.BacktestNode"]], "backtestresult (class in nautilus_trader.backtest.results)": [[6, "nautilus_trader.backtest.results.BacktestResult"]], "fxrolloverinterestconfig (class in nautilus_trader.backtest.modules)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestConfig"]], "fxrolloverinterestmodule (class in nautilus_trader.backtest.modules)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule"]], "fillmodel (class in nautilus_trader.backtest.models)": [[6, "nautilus_trader.backtest.models.FillModel"]], "latencymodel (class in nautilus_trader.backtest.models)": [[6, "nautilus_trader.backtest.models.LatencyModel"]], "simulatedexchange (class in nautilus_trader.backtest.exchange)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange"]], "simulationmodule (class in nautilus_trader.backtest.modules)": [[6, "nautilus_trader.backtest.modules.SimulationModule"]], "simulationmoduleconfig (class in nautilus_trader.backtest.modules)": [[6, "nautilus_trader.backtest.modules.SimulationModuleConfig"]], "account_id (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.account_id"]], "account_type (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.account_type"]], "account_type (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.account_type"]], "add_actor() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_actor"]], "add_actors() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_actors"]], "add_data() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_data"]], "add_exec_algorithm() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_exec_algorithm"]], "add_exec_algorithms() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_exec_algorithms"]], "add_instrument() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_instrument"]], "add_instrument() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.add_instrument"]], "add_strategies() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_strategies"]], "add_strategy() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_strategy"]], "add_synthetic() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.add_synthetic"]], "add_synthetic() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.add_synthetic"]], "add_venue() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_venue"]], "adjust_account() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.adjust_account"]], "backtest_end (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.backtest_end"]], "backtest_start (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.backtest_start"]], "bar_execution (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.bar_execution"]], "base_currency (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.base_currency"]], "base_currency (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.base_currency"]], "base_latency_nanos (latencymodel attribute)": [[6, "nautilus_trader.backtest.models.LatencyModel.base_latency_nanos"]], "best_ask_price() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.best_ask_price"]], "best_bid_price() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.best_bid_price"]], "book_type (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.book_type"]], "cache (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.cache"]], "cache (fxrolloverinterestmodule attribute)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.cache"]], "cache (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.cache"]], "cache (simulationmodule attribute)": [[6, "nautilus_trader.backtest.modules.SimulationModule.cache"]], "cancel_all_orders() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.cancel_all_orders"]], "cancel_latency_nanos (latencymodel attribute)": [[6, "nautilus_trader.backtest.models.LatencyModel.cancel_latency_nanos"]], "cancel_order() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.cancel_order"]], "change_fill_model() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.change_fill_model"]], "clear_actors() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.clear_actors"]], "clear_data() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.clear_data"]], "clear_exec_algorthms() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.clear_exec_algorthms"]], "clear_strategies() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.clear_strategies"]], "clock (fxrolloverinterestmodule attribute)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.clock"]], "clock (simulationmodule attribute)": [[6, "nautilus_trader.backtest.modules.SimulationModule.clock"]], "config (fxrolloverinterestmodule attribute)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.config"]], "config (simulationmodule attribute)": [[6, "nautilus_trader.backtest.modules.SimulationModule.config"]], "configs (backtestnode property)": [[6, "nautilus_trader.backtest.node.BacktestNode.configs"]], "data (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.data"]], "default_leverage (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.default_leverage"]], "degrade() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.degrade"]], "degrade() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.degrade"]], "degrade() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.degrade"]], "degrade() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.degrade"]], "degrade() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.degrade"]], "deregister_warning_event() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.deregister_warning_event"]], "deregister_warning_event() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.deregister_warning_event"]], "dict() (fxrolloverinterestconfig method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestConfig.dict"]], "dict() (simulationmoduleconfig method)": [[6, "nautilus_trader.backtest.modules.SimulationModuleConfig.dict"]], "dispose() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.dispose"]], "dispose() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.dispose"]], "dispose() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.dispose"]], "dispose() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.dispose"]], "dispose() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.dispose"]], "dispose() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.dispose"]], "dump_pickled_data() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.dump_pickled_data"]], "end() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.end"]], "ensure_plotting() (in module nautilus_trader.backtest.results)": [[6, "nautilus_trader.backtest.results.ensure_plotting"]], "exec_client (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.exec_client"]], "fault() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.fault"]], "fault() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.fault"]], "fault() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.fault"]], "fault() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.fault"]], "fault() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.fault"]], "fill_model (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.fill_model"]], "fully_qualified_name() (backtestdataclient class method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.fully_qualified_name"]], "fully_qualified_name() (backtestexecclient class method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.fully_qualified_name"]], "fully_qualified_name() (backtestmarketdataclient class method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.fully_qualified_name"]], "fully_qualified_name() (fxrolloverinterestconfig class method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestConfig.fully_qualified_name"]], "fully_qualified_name() (fxrolloverinterestmodule class method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.fully_qualified_name"]], "fully_qualified_name() (simulationmodule class method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.fully_qualified_name"]], "fully_qualified_name() (simulationmoduleconfig class method)": [[6, "nautilus_trader.backtest.modules.SimulationModuleConfig.fully_qualified_name"]], "generate_account_state() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_account_state"]], "generate_order_accepted() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_accepted"]], "generate_order_cancel_rejected() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_cancel_rejected"]], "generate_order_canceled() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_canceled"]], "generate_order_expired() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_expired"]], "generate_order_filled() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_filled"]], "generate_order_modify_rejected() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_modify_rejected"]], "generate_order_rejected() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_rejected"]], "generate_order_submitted() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_submitted"]], "generate_order_triggered() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_triggered"]], "generate_order_updated() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_updated"]], "get_account() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.get_account"]], "get_account() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.get_account"]], "get_book() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.get_book"]], "get_books() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.get_books"]], "get_engine() (backtestnode method)": [[6, "nautilus_trader.backtest.node.BacktestNode.get_engine"]], "get_engines() (backtestnode method)": [[6, "nautilus_trader.backtest.node.BacktestNode.get_engines"]], "get_matching_engine() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.get_matching_engine"]], "get_matching_engines() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.get_matching_engines"]], "get_open_ask_orders() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.get_open_ask_orders"]], "get_open_bid_orders() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.get_open_bid_orders"]], "get_open_orders() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.get_open_orders"]], "get_result() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.get_result"]], "handle_bar() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_bar"]], "handle_bar() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_bar"]], "handle_bars() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_bars"]], "handle_bars() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_bars"]], "handle_data() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_data"]], "handle_data() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_data"]], "handle_event() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_event"]], "handle_event() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_event"]], "handle_historical_data() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_historical_data"]], "handle_historical_data() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_historical_data"]], "handle_instrument() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_instrument"]], "handle_instrument() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_instrument"]], "handle_instrument_close() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_instrument_close"]], "handle_instrument_close() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_instrument_close"]], "handle_instrument_status_update() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_instrument_status_update"]], "handle_instrument_status_update() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_instrument_status_update"]], "handle_instruments() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_instruments"]], "handle_instruments() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_instruments"]], "handle_order_book() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_order_book"]], "handle_order_book() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_order_book"]], "handle_order_book_deltas() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_order_book_deltas"]], "handle_order_book_deltas() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_order_book_deltas"]], "handle_quote_tick() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_quote_tick"]], "handle_quote_tick() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_quote_tick"]], "handle_quote_ticks() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_quote_ticks"]], "handle_quote_ticks() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_quote_ticks"]], "handle_ticker() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_ticker"]], "handle_ticker() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_ticker"]], "handle_trade_tick() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_trade_tick"]], "handle_trade_tick() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_trade_tick"]], "handle_trade_ticks() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_trade_ticks"]], "handle_trade_ticks() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_trade_ticks"]], "handle_venue_status_update() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.handle_venue_status_update"]], "handle_venue_status_update() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.handle_venue_status_update"]], "has_pending_requests() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.has_pending_requests"]], "has_pending_requests() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.has_pending_requests"]], "id (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.id"]], "id (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.id"]], "id (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.id"]], "id (fxrolloverinterestmodule attribute)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.id"]], "id (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.id"]], "id (simulationmodule attribute)": [[6, "nautilus_trader.backtest.modules.SimulationModule.id"]], "initialize_account() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.initialize_account"]], "insert_latency_nanos (latencymodel attribute)": [[6, "nautilus_trader.backtest.models.LatencyModel.insert_latency_nanos"]], "instance_id (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.instance_id"]], "instruments (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.instruments"]], "is_connected (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.is_connected"]], "is_connected (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.is_connected"]], "is_connected (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.is_connected"]], "is_degraded (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.is_degraded"]], "is_degraded (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.is_degraded"]], "is_degraded (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.is_degraded"]], "is_degraded (fxrolloverinterestmodule attribute)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.is_degraded"]], "is_degraded (simulationmodule attribute)": [[6, "nautilus_trader.backtest.modules.SimulationModule.is_degraded"]], "is_disposed (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.is_disposed"]], "is_disposed (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.is_disposed"]], "is_disposed (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.is_disposed"]], "is_disposed (fxrolloverinterestmodule attribute)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.is_disposed"]], "is_disposed (simulationmodule attribute)": [[6, "nautilus_trader.backtest.modules.SimulationModule.is_disposed"]], "is_faulted (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.is_faulted"]], "is_faulted (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.is_faulted"]], "is_faulted (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.is_faulted"]], "is_faulted (fxrolloverinterestmodule attribute)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.is_faulted"]], "is_faulted (simulationmodule attribute)": [[6, "nautilus_trader.backtest.modules.SimulationModule.is_faulted"]], "is_frozen_account (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.is_frozen_account"]], "is_initialized (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.is_initialized"]], "is_initialized (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.is_initialized"]], "is_initialized (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.is_initialized"]], "is_initialized (fxrolloverinterestmodule attribute)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.is_initialized"]], "is_initialized (simulationmodule attribute)": [[6, "nautilus_trader.backtest.modules.SimulationModule.is_initialized"]], "is_limit_filled() (fillmodel method)": [[6, "nautilus_trader.backtest.models.FillModel.is_limit_filled"]], "is_pending_request() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.is_pending_request"]], "is_pending_request() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.is_pending_request"]], "is_running (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.is_running"]], "is_running (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.is_running"]], "is_running (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.is_running"]], "is_running (fxrolloverinterestmodule attribute)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.is_running"]], "is_running (simulationmodule attribute)": [[6, "nautilus_trader.backtest.modules.SimulationModule.is_running"]], "is_slipped() (fillmodel method)": [[6, "nautilus_trader.backtest.models.FillModel.is_slipped"]], "is_stop_filled() (fillmodel method)": [[6, "nautilus_trader.backtest.models.FillModel.is_stop_filled"]], "is_stopped (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.is_stopped"]], "is_stopped (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.is_stopped"]], "is_stopped (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.is_stopped"]], "is_stopped (fxrolloverinterestmodule attribute)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.is_stopped"]], "is_stopped (simulationmodule attribute)": [[6, "nautilus_trader.backtest.modules.SimulationModule.is_stopped"]], "iteration (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.iteration"]], "json() (fxrolloverinterestconfig method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestConfig.json"]], "json() (simulationmoduleconfig method)": [[6, "nautilus_trader.backtest.modules.SimulationModuleConfig.json"]], "kernel (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.kernel"]], "latency_model (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.latency_model"]], "leverages (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.leverages"]], "list_venues() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.list_venues"]], "load() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.load"]], "load() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.load"]], "load_pickled_data() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.load_pickled_data"]], "log (fxrolloverinterestmodule attribute)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.log"]], "log (simulationmodule attribute)": [[6, "nautilus_trader.backtest.modules.SimulationModule.log"]], "log_diagnostics() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.log_diagnostics"]], "log_diagnostics() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.log_diagnostics"]], "machine_id (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.machine_id"]], "modify_order() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.modify_order"]], "modules (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.modules"]], "msgbus (fxrolloverinterestmodule attribute)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.msgbus"]], "msgbus (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.msgbus"]], "msgbus (simulationmodule attribute)": [[6, "nautilus_trader.backtest.modules.SimulationModule.msgbus"]], "nautilus_trader.backtest": [[6, "module-nautilus_trader.backtest"]], "nautilus_trader.backtest.auction": [[6, "module-nautilus_trader.backtest.auction"]], "nautilus_trader.backtest.data_client": [[6, "module-nautilus_trader.backtest.data_client"]], "nautilus_trader.backtest.engine": [[6, "module-nautilus_trader.backtest.engine"]], "nautilus_trader.backtest.exchange": [[6, "module-nautilus_trader.backtest.exchange"]], "nautilus_trader.backtest.execution_client": [[6, "module-nautilus_trader.backtest.execution_client"]], "nautilus_trader.backtest.models": [[6, "module-nautilus_trader.backtest.models"]], "nautilus_trader.backtest.modules": [[6, "module-nautilus_trader.backtest.modules"]], "nautilus_trader.backtest.node": [[6, "module-nautilus_trader.backtest.node"]], "nautilus_trader.backtest.results": [[6, "module-nautilus_trader.backtest.results"]], "oms_type (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.oms_type"]], "oms_type (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.oms_type"]], "on_bar() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_bar"]], "on_bar() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_bar"]], "on_data() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_data"]], "on_data() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_data"]], "on_degrade() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_degrade"]], "on_degrade() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_degrade"]], "on_dispose() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_dispose"]], "on_dispose() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_dispose"]], "on_event() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_event"]], "on_event() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_event"]], "on_fault() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_fault"]], "on_fault() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_fault"]], "on_historical_data() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_historical_data"]], "on_historical_data() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_historical_data"]], "on_instrument() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_instrument"]], "on_instrument() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_instrument"]], "on_instrument_close() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_instrument_close"]], "on_instrument_close() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_instrument_close"]], "on_instrument_status_update() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_instrument_status_update"]], "on_instrument_status_update() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_instrument_status_update"]], "on_load() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_load"]], "on_load() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_load"]], "on_order_book() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_order_book"]], "on_order_book() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_order_book"]], "on_order_book_deltas() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_order_book_deltas"]], "on_order_book_deltas() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_order_book_deltas"]], "on_quote_tick() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_quote_tick"]], "on_quote_tick() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_quote_tick"]], "on_reset() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_reset"]], "on_reset() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_reset"]], "on_resume() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_resume"]], "on_resume() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_resume"]], "on_save() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_save"]], "on_save() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_save"]], "on_start() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_start"]], "on_start() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_start"]], "on_stop() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_stop"]], "on_stop() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_stop"]], "on_ticker() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_ticker"]], "on_ticker() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_ticker"]], "on_trade_tick() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_trade_tick"]], "on_trade_tick() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_trade_tick"]], "on_venue_status_update() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.on_venue_status_update"]], "on_venue_status_update() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.on_venue_status_update"]], "parse() (fxrolloverinterestconfig class method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestConfig.parse"]], "parse() (simulationmoduleconfig class method)": [[6, "nautilus_trader.backtest.modules.SimulationModuleConfig.parse"]], "pending_requests() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.pending_requests"]], "pending_requests() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.pending_requests"]], "portfolio (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.portfolio"]], "prob_fill_on_limit (fillmodel attribute)": [[6, "nautilus_trader.backtest.models.FillModel.prob_fill_on_limit"]], "prob_fill_on_stop (fillmodel attribute)": [[6, "nautilus_trader.backtest.models.FillModel.prob_fill_on_stop"]], "prob_slippage (fillmodel attribute)": [[6, "nautilus_trader.backtest.models.FillModel.prob_slippage"]], "process() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.process"]], "process() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.process"]], "process() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.process"]], "process_bar() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.process_bar"]], "process_instrument_status() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.process_instrument_status"]], "process_order_book_delta() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.process_order_book_delta"]], "process_order_book_deltas() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.process_order_book_deltas"]], "process_quote_tick() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.process_quote_tick"]], "process_trade_tick() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.process_trade_tick"]], "process_venue_status() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.process_venue_status"]], "publish_data() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.publish_data"]], "publish_data() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.publish_data"]], "publish_signal() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.publish_signal"]], "publish_signal() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.publish_signal"]], "query_order() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.query_order"]], "register_base() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.register_base"]], "register_base() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.register_base"]], "register_client() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.register_client"]], "register_venue() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.register_venue"]], "register_venue() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.register_venue"]], "register_warning_event() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.register_warning_event"]], "register_warning_event() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.register_warning_event"]], "reject_stop_orders (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.reject_stop_orders"]], "request() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.request"]], "request() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.request"]], "request_bars() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.request_bars"]], "request_bars() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.request_bars"]], "request_bars() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.request_bars"]], "request_data() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.request_data"]], "request_data() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.request_data"]], "request_instrument() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.request_instrument"]], "request_instrument() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.request_instrument"]], "request_instrument() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.request_instrument"]], "request_instruments() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.request_instruments"]], "request_instruments() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.request_instruments"]], "request_instruments() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.request_instruments"]], "request_quote_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.request_quote_ticks"]], "request_quote_ticks() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.request_quote_ticks"]], "request_quote_ticks() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.request_quote_ticks"]], "request_trade_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.request_trade_ticks"]], "request_trade_ticks() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.request_trade_ticks"]], "request_trade_ticks() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.request_trade_ticks"]], "reset() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.reset"]], "reset() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.reset"]], "reset() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.reset"]], "reset() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.reset"]], "reset() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.reset"]], "reset() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.reset"]], "reset() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.reset"]], "resume() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.resume"]], "resume() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.resume"]], "resume() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.resume"]], "resume() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.resume"]], "resume() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.resume"]], "run() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.run"]], "run() (backtestnode method)": [[6, "nautilus_trader.backtest.node.BacktestNode.run"]], "run_config_id (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.run_config_id"]], "run_finished (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.run_finished"]], "run_id (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.run_id"]], "run_started (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.run_started"]], "save() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.save"]], "save() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.save"]], "send() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.send"]], "set_fill_model() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.set_fill_model"]], "set_latency_model() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.set_latency_model"]], "start() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.start"]], "start() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.start"]], "start() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.start"]], "start() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.start"]], "start() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.start"]], "starting_balances (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.starting_balances"]], "state (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.state"]], "state (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.state"]], "state (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.state"]], "state (fxrolloverinterestmodule attribute)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.state"]], "state (simulationmodule attribute)": [[6, "nautilus_trader.backtest.modules.SimulationModule.state"]], "stop() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.stop"]], "stop() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.stop"]], "stop() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.stop"]], "stop() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.stop"]], "stop() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.stop"]], "submit_order() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.submit_order"]], "submit_order_list() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.submit_order_list"]], "subscribe() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.subscribe"]], "subscribe() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe"]], "subscribe_bars() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_bars"]], "subscribe_bars() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.subscribe_bars"]], "subscribe_bars() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.subscribe_bars"]], "subscribe_data() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.subscribe_data"]], "subscribe_data() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.subscribe_data"]], "subscribe_instrument() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_instrument"]], "subscribe_instrument() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.subscribe_instrument"]], "subscribe_instrument() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.subscribe_instrument"]], "subscribe_instrument_close() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_instrument_close"]], "subscribe_instrument_close() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.subscribe_instrument_close"]], "subscribe_instrument_close() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.subscribe_instrument_close"]], "subscribe_instrument_status_updates() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_instrument_status_updates"]], "subscribe_instrument_status_updates() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.subscribe_instrument_status_updates"]], "subscribe_instrument_status_updates() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.subscribe_instrument_status_updates"]], "subscribe_instruments() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_instruments"]], "subscribe_instruments() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.subscribe_instruments"]], "subscribe_instruments() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.subscribe_instruments"]], "subscribe_order_book_deltas() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_order_book_deltas"]], "subscribe_order_book_deltas() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.subscribe_order_book_deltas"]], "subscribe_order_book_deltas() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_order_book_snapshots"]], "subscribe_order_book_snapshots() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.subscribe_order_book_snapshots"]], "subscribe_order_book_snapshots() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_quote_ticks"]], "subscribe_quote_ticks() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.subscribe_quote_ticks"]], "subscribe_quote_ticks() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.subscribe_quote_ticks"]], "subscribe_ticker() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_ticker"]], "subscribe_ticker() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.subscribe_ticker"]], "subscribe_ticker() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.subscribe_ticker"]], "subscribe_trade_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_trade_ticks"]], "subscribe_trade_ticks() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.subscribe_trade_ticks"]], "subscribe_trade_ticks() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.subscribe_trade_ticks"]], "subscribe_venue_status_updates() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_venue_status_updates"]], "subscribe_venue_status_updates() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.subscribe_venue_status_updates"]], "subscribe_venue_status_updates() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.subscribe_venue_status_updates"]], "subscribed_bars() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_bars"]], "subscribed_generic_data() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.subscribed_generic_data"]], "subscribed_generic_data() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_generic_data"]], "subscribed_instrument_close() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_instrument_close"]], "subscribed_instrument_status_updates() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_instrument_status_updates"]], "subscribed_instruments() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_instruments"]], "subscribed_order_book_deltas() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_order_book_deltas"]], "subscribed_order_book_snapshots() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_order_book_snapshots"]], "subscribed_quote_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_quote_ticks"]], "subscribed_tickers() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_tickers"]], "subscribed_trade_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_trade_ticks"]], "subscribed_venue_status_updates() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_venue_status_updates"]], "support_gtd_orders (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.support_gtd_orders"]], "to_importable_config() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.to_importable_config"]], "to_importable_config() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.to_importable_config"]], "trader (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.trader"]], "trader_id (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.trader_id"]], "trader_id (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.trader_id"]], "trader_id (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.trader_id"]], "trader_id (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.trader_id"]], "trader_id (fxrolloverinterestmodule attribute)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.trader_id"]], "trader_id (simulationmodule attribute)": [[6, "nautilus_trader.backtest.modules.SimulationModule.trader_id"]], "type (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.type"]], "type (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.type"]], "type (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.type"]], "type (fxrolloverinterestmodule attribute)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.type"]], "type (simulationmodule attribute)": [[6, "nautilus_trader.backtest.modules.SimulationModule.type"]], "unsubscribe() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.unsubscribe"]], "unsubscribe() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe"]], "unsubscribe_bars() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_bars"]], "unsubscribe_bars() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.unsubscribe_bars"]], "unsubscribe_bars() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.unsubscribe_bars"]], "unsubscribe_data() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.unsubscribe_data"]], "unsubscribe_data() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.unsubscribe_data"]], "unsubscribe_instrument() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_instrument"]], "unsubscribe_instrument() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.unsubscribe_instrument"]], "unsubscribe_instrument() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.unsubscribe_instrument"]], "unsubscribe_instrument_close() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_instrument_close"]], "unsubscribe_instrument_status_updates() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_instrument_status_updates"]], "unsubscribe_instrument_status_updates() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.unsubscribe_instrument_status_updates"]], "unsubscribe_instrument_status_updates() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.unsubscribe_instrument_status_updates"]], "unsubscribe_instruments() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_instruments"]], "unsubscribe_instruments() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.unsubscribe_instruments"]], "unsubscribe_instruments() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_deltas() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_deltas() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_order_book_snapshots"]], "unsubscribe_order_book_snapshots() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.unsubscribe_order_book_snapshots"]], "unsubscribe_order_book_snapshots() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_quote_ticks"]], "unsubscribe_quote_ticks() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.unsubscribe_quote_ticks"]], "unsubscribe_quote_ticks() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_ticker"]], "unsubscribe_ticker() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.unsubscribe_ticker"]], "unsubscribe_ticker() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_trade_ticks"]], "unsubscribe_trade_ticks() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.unsubscribe_trade_ticks"]], "unsubscribe_trade_ticks() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.unsubscribe_trade_ticks"]], "unsubscribe_venue_status_updates() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_venue_status_updates"]], "unsubscribe_venue_status_updates() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.unsubscribe_venue_status_updates"]], "unsubscribe_venue_status_updates() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.unsubscribe_venue_status_updates"]], "update_latency_nanos (latencymodel attribute)": [[6, "nautilus_trader.backtest.models.LatencyModel.update_latency_nanos"]], "update_synthetic() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.update_synthetic"]], "update_synthetic() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.update_synthetic"]], "use_random_ids (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.use_random_ids"]], "validate() (fxrolloverinterestconfig method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestConfig.validate"]], "validate() (simulationmoduleconfig method)": [[6, "nautilus_trader.backtest.modules.SimulationModuleConfig.validate"]], "venue (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.venue"]], "venue (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.venue"]], "venue (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.venue"]], "cache (class in nautilus_trader.cache.cache)": [[7, "nautilus_trader.cache.cache.Cache"]], "cachedatabase (class in nautilus_trader.cache.database)": [[7, "nautilus_trader.cache.database.CacheDatabase"]], "cachefacade (class in nautilus_trader.cache.base)": [[7, "nautilus_trader.cache.base.CacheFacade"]], "account() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.account"]], "account() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.account"]], "account_for_venue() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.account_for_venue"]], "account_for_venue() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.account_for_venue"]], "account_id() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.account_id"]], "account_id() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.account_id"]], "accounts() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.accounts"]], "accounts() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.accounts"]], "actor_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.actor_ids"]], "actor_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.actor_ids"]], "add() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add"]], "add() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add"]], "add() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.add"]], "add_account() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_account"]], "add_account() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add_account"]], "add_bar() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_bar"]], "add_bars() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_bars"]], "add_currency() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_currency"]], "add_currency() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add_currency"]], "add_instrument() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_instrument"]], "add_instrument() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add_instrument"]], "add_order() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_order"]], "add_order() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add_order"]], "add_order_book() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_order_book"]], "add_order_list() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_order_list"]], "add_position() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_position"]], "add_position() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add_position"]], "add_position_id() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_position_id"]], "add_quote_tick() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_quote_tick"]], "add_quote_ticks() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_quote_ticks"]], "add_submit_order_command() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_submit_order_command"]], "add_submit_order_command() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add_submit_order_command"]], "add_submit_order_list_command() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_submit_order_list_command"]], "add_submit_order_list_command() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add_submit_order_list_command"]], "add_synthetic() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_synthetic"]], "add_synthetic() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add_synthetic"]], "add_ticker() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_ticker"]], "add_trade_tick() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_trade_tick"]], "add_trade_ticks() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_trade_ticks"]], "bar() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.bar"]], "bar() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.bar"]], "bar_capacity (cache attribute)": [[7, "nautilus_trader.cache.cache.Cache.bar_capacity"]], "bar_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.bar_count"]], "bar_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.bar_count"]], "bars() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.bars"]], "bars() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.bars"]], "book_update_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.book_update_count"]], "book_update_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.book_update_count"]], "build_index() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.build_index"]], "cache_accounts() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.cache_accounts"]], "cache_commands() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.cache_commands"]], "cache_currencies() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.cache_currencies"]], "cache_general() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.cache_general"]], "cache_instruments() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.cache_instruments"]], "cache_order_lists() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.cache_order_lists"]], "cache_orders() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.cache_orders"]], "cache_positions() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.cache_positions"]], "cache_synthetics() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.cache_synthetics"]], "check_integrity() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.check_integrity"]], "check_residuals() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.check_residuals"]], "clear_index() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.clear_index"]], "client_order_id() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.client_order_id"]], "client_order_id() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.client_order_id"]], "client_order_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.client_order_ids"]], "client_order_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.client_order_ids"]], "client_order_ids_closed() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.client_order_ids_closed"]], "client_order_ids_closed() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.client_order_ids_closed"]], "client_order_ids_emulated() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.client_order_ids_emulated"]], "client_order_ids_emulated() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.client_order_ids_emulated"]], "client_order_ids_inflight() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.client_order_ids_inflight"]], "client_order_ids_inflight() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.client_order_ids_inflight"]], "client_order_ids_open() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.client_order_ids_open"]], "client_order_ids_open() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.client_order_ids_open"]], "delete_actor() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.delete_actor"]], "delete_actor() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.delete_actor"]], "delete_strategy() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.delete_strategy"]], "delete_strategy() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.delete_strategy"]], "exec_algorithm_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.exec_algorithm_ids"]], "exec_algorithm_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.exec_algorithm_ids"]], "flush() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.flush"]], "flush_db() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.flush_db"]], "get() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.get"]], "get() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.get"]], "get_xrate() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.get_xrate"]], "get_xrate() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.get_xrate"]], "has_bars() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.has_bars"]], "has_bars() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.has_bars"]], "has_order_book() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.has_order_book"]], "has_order_book() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.has_order_book"]], "has_quote_ticks() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.has_quote_ticks"]], "has_quote_ticks() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.has_quote_ticks"]], "has_tickers() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.has_tickers"]], "has_tickers() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.has_tickers"]], "has_trade_ticks() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.has_trade_ticks"]], "has_trade_ticks() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.has_trade_ticks"]], "instrument() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.instrument"]], "instrument() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.instrument"]], "instrument_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.instrument_ids"]], "instrument_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.instrument_ids"]], "instruments() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.instruments"]], "instruments() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.instruments"]], "is_order_closed() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.is_order_closed"]], "is_order_closed() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.is_order_closed"]], "is_order_emulated() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.is_order_emulated"]], "is_order_emulated() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.is_order_emulated"]], "is_order_inflight() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.is_order_inflight"]], "is_order_inflight() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.is_order_inflight"]], "is_order_open() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.is_order_open"]], "is_order_open() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.is_order_open"]], "is_position_closed() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.is_position_closed"]], "is_position_closed() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.is_position_closed"]], "is_position_open() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.is_position_open"]], "is_position_open() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.is_position_open"]], "load() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load"]], "load_account() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_account"]], "load_account() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_account"]], "load_accounts() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_accounts"]], "load_actor() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_actor"]], "load_actor() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_actor"]], "load_currencies() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_currencies"]], "load_currency() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_currency"]], "load_instrument() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_instrument"]], "load_instrument() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_instrument"]], "load_instruments() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_instruments"]], "load_order() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_order"]], "load_order() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_order"]], "load_orders() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_orders"]], "load_position() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_position"]], "load_position() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_position"]], "load_positions() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_positions"]], "load_strategy() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_strategy"]], "load_strategy() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_strategy"]], "load_submit_order_command() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_submit_order_command"]], "load_submit_order_command() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_submit_order_command"]], "load_submit_order_commands() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_submit_order_commands"]], "load_submit_order_list_command() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_submit_order_list_command"]], "load_submit_order_list_command() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_submit_order_list_command"]], "load_submit_order_list_commands() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_submit_order_list_commands"]], "load_synthetic() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_synthetic"]], "load_synthetic() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_synthetic"]], "load_synthetics() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_synthetics"]], "nautilus_trader.cache": [[7, "module-nautilus_trader.cache"]], "nautilus_trader.cache.base": [[7, "module-nautilus_trader.cache.base"]], "nautilus_trader.cache.cache": [[7, "module-nautilus_trader.cache.cache"]], "nautilus_trader.cache.database": [[7, "module-nautilus_trader.cache.database"]], "order() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.order"]], "order() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.order"]], "order_book() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.order_book"]], "order_book() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.order_book"]], "order_exists() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.order_exists"]], "order_exists() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.order_exists"]], "order_list() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.order_list"]], "order_list() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.order_list"]], "order_list_exists() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.order_list_exists"]], "order_list_exists() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.order_list_exists"]], "order_list_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.order_list_ids"]], "order_list_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.order_list_ids"]], "order_lists() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.order_lists"]], "order_lists() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.order_lists"]], "orders() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders"]], "orders() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders"]], "orders_closed() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_closed"]], "orders_closed() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_closed"]], "orders_closed_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_closed_count"]], "orders_closed_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_closed_count"]], "orders_emulated() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_emulated"]], "orders_emulated() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_emulated"]], "orders_emulated_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_emulated_count"]], "orders_emulated_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_emulated_count"]], "orders_for_exec_algorithm() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_for_exec_algorithm"]], "orders_for_exec_algorithm() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_for_exec_algorithm"]], "orders_for_exec_spawn() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_for_exec_spawn"]], "orders_for_exec_spawn() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_for_exec_spawn"]], "orders_for_position() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_for_position"]], "orders_for_position() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_for_position"]], "orders_inflight() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_inflight"]], "orders_inflight() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_inflight"]], "orders_inflight_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_inflight_count"]], "orders_inflight_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_inflight_count"]], "orders_open() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_open"]], "orders_open() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_open"]], "orders_open_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_open_count"]], "orders_open_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_open_count"]], "orders_total_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_total_count"]], "orders_total_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_total_count"]], "position() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position"]], "position() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position"]], "position_closed_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position_closed_ids"]], "position_closed_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position_closed_ids"]], "position_exists() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position_exists"]], "position_exists() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position_exists"]], "position_for_order() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position_for_order"]], "position_for_order() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position_for_order"]], "position_id() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position_id"]], "position_id() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position_id"]], "position_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position_ids"]], "position_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position_ids"]], "position_open_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position_open_ids"]], "position_open_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position_open_ids"]], "position_snapshots() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position_snapshots"]], "position_snapshots() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position_snapshots"]], "positions() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.positions"]], "positions() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.positions"]], "positions_closed() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.positions_closed"]], "positions_closed() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.positions_closed"]], "positions_closed_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.positions_closed_count"]], "positions_closed_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.positions_closed_count"]], "positions_open() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.positions_open"]], "positions_open() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.positions_open"]], "positions_open_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.positions_open_count"]], "positions_open_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.positions_open_count"]], "positions_total_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.positions_total_count"]], "positions_total_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.positions_total_count"]], "price() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.price"]], "price() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.price"]], "quote_tick() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.quote_tick"]], "quote_tick() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.quote_tick"]], "quote_tick_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.quote_tick_count"]], "quote_tick_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.quote_tick_count"]], "quote_ticks() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.quote_ticks"]], "quote_ticks() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.quote_ticks"]], "reset() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.reset"]], "snapshot_position() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.snapshot_position"]], "strategy_id_for_order() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.strategy_id_for_order"]], "strategy_id_for_order() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.strategy_id_for_order"]], "strategy_id_for_position() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.strategy_id_for_position"]], "strategy_id_for_position() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.strategy_id_for_position"]], "strategy_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.strategy_ids"]], "strategy_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.strategy_ids"]], "synthetic() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.synthetic"]], "synthetic() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.synthetic"]], "synthetic_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.synthetic_ids"]], "synthetic_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.synthetic_ids"]], "synthetics() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.synthetics"]], "synthetics() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.synthetics"]], "tick_capacity (cache attribute)": [[7, "nautilus_trader.cache.cache.Cache.tick_capacity"]], "ticker() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.ticker"]], "ticker() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.ticker"]], "ticker_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.ticker_count"]], "ticker_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.ticker_count"]], "tickers() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.tickers"]], "tickers() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.tickers"]], "trade_tick() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.trade_tick"]], "trade_tick() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.trade_tick"]], "trade_tick_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.trade_tick_count"]], "trade_tick_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.trade_tick_count"]], "trade_ticks() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.trade_ticks"]], "trade_ticks() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.trade_ticks"]], "update_account() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.update_account"]], "update_account() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.update_account"]], "update_actor() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.update_actor"]], "update_actor() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.update_actor"]], "update_order() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.update_order"]], "update_order() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.update_order"]], "update_position() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.update_position"]], "update_position() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.update_position"]], "update_strategy() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.update_strategy"]], "update_strategy() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.update_strategy"]], "venue_order_id() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.venue_order_id"]], "venue_order_id() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.venue_order_id"]], "actor (class in nautilus_trader.common.actor)": [[8, "nautilus_trader.common.actor.Actor"]], "clientorderidgenerator (class in nautilus_trader.common.generators)": [[8, "nautilus_trader.common.generators.ClientOrderIdGenerator"]], "clock (class in nautilus_trader.common.clock)": [[8, "nautilus_trader.common.clock.Clock"]], "component (class in nautilus_trader.common.component)": [[8, "nautilus_trader.common.component.Component"]], "componentfsmfactory (class in nautilus_trader.common.component)": [[8, "nautilus_trader.common.component.ComponentFSMFactory"]], "identifiergenerator (class in nautilus_trader.common.generators)": [[8, "nautilus_trader.common.generators.IdentifierGenerator"]], "instrumentprovider (class in nautilus_trader.common.providers)": [[8, "nautilus_trader.common.providers.InstrumentProvider"]], "liveclock (class in nautilus_trader.common.clock)": [[8, "nautilus_trader.common.clock.LiveClock"]], "livetimer (class in nautilus_trader.common.timer)": [[8, "nautilus_trader.common.timer.LiveTimer"]], "logger (class in nautilus_trader.common.logging)": [[8, "nautilus_trader.common.logging.Logger"]], "loggeradapter (class in nautilus_trader.common.logging)": [[8, "nautilus_trader.common.logging.LoggerAdapter"]], "looptimer (class in nautilus_trader.common.timer)": [[8, "nautilus_trader.common.timer.LoopTimer"]], "orderfactory (class in nautilus_trader.common.factories)": [[8, "nautilus_trader.common.factories.OrderFactory"]], "orderlistidgenerator (class in nautilus_trader.common.generators)": [[8, "nautilus_trader.common.generators.OrderListIdGenerator"]], "positionidgenerator (class in nautilus_trader.common.generators)": [[8, "nautilus_trader.common.generators.PositionIdGenerator"]], "queue (class in nautilus_trader.common.queue)": [[8, "nautilus_trader.common.queue.Queue"]], "testclock (class in nautilus_trader.common.clock)": [[8, "nautilus_trader.common.clock.TestClock"]], "threadtimer (class in nautilus_trader.common.timer)": [[8, "nautilus_trader.common.timer.ThreadTimer"]], "throttler (class in nautilus_trader.common.throttler)": [[8, "nautilus_trader.common.throttler.Throttler"]], "timeevent (class in nautilus_trader.common.timer)": [[8, "nautilus_trader.common.timer.TimeEvent"]], "timeeventhandler (class in nautilus_trader.common.timer)": [[8, "nautilus_trader.common.timer.TimeEventHandler"]], "add() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.add"]], "add_bulk() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.add_bulk"]], "add_currency() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.add_currency"]], "add_synthetic() (actor method)": [[8, "nautilus_trader.common.actor.Actor.add_synthetic"]], "advance_time() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.advance_time"]], "bracket() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.bracket"]], "cache (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.cache"]], "callback (livetimer attribute)": [[8, "nautilus_trader.common.timer.LiveTimer.callback"]], "callback (looptimer attribute)": [[8, "nautilus_trader.common.timer.LoopTimer.callback"]], "callback (threadtimer attribute)": [[8, "nautilus_trader.common.timer.ThreadTimer.callback"]], "cancel() (livetimer method)": [[8, "nautilus_trader.common.timer.LiveTimer.cancel"]], "cancel() (looptimer method)": [[8, "nautilus_trader.common.timer.LoopTimer.cancel"]], "cancel() (threadtimer method)": [[8, "nautilus_trader.common.timer.ThreadTimer.cancel"]], "cancel_timer() (clock method)": [[8, "nautilus_trader.common.clock.Clock.cancel_timer"]], "cancel_timer() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.cancel_timer"]], "cancel_timer() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.cancel_timer"]], "cancel_timers() (clock method)": [[8, "nautilus_trader.common.clock.Clock.cancel_timers"]], "cancel_timers() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.cancel_timers"]], "cancel_timers() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.cancel_timers"]], "change_clock() (logger method)": [[8, "nautilus_trader.common.logging.Logger.change_clock"]], "clock (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.clock"]], "component (loggeradapter attribute)": [[8, "nautilus_trader.common.logging.LoggerAdapter.component"]], "config (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.config"]], "count (clientorderidgenerator attribute)": [[8, "nautilus_trader.common.generators.ClientOrderIdGenerator.count"]], "count (instrumentprovider property)": [[8, "nautilus_trader.common.providers.InstrumentProvider.count"]], "count (orderlistidgenerator attribute)": [[8, "nautilus_trader.common.generators.OrderListIdGenerator.count"]], "count (queue attribute)": [[8, "nautilus_trader.common.queue.Queue.count"]], "create_list() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.create_list"]], "critical() (loggeradapter method)": [[8, "nautilus_trader.common.logging.LoggerAdapter.critical"]], "currencies() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.currencies"]], "currency() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.currency"]], "debug() (loggeradapter method)": [[8, "nautilus_trader.common.logging.LoggerAdapter.debug"]], "degrade() (actor method)": [[8, "nautilus_trader.common.actor.Actor.degrade"]], "degrade() (component method)": [[8, "nautilus_trader.common.component.Component.degrade"]], "deregister_warning_event() (actor method)": [[8, "nautilus_trader.common.actor.Actor.deregister_warning_event"]], "dispose() (actor method)": [[8, "nautilus_trader.common.actor.Actor.dispose"]], "dispose() (component method)": [[8, "nautilus_trader.common.component.Component.dispose"]], "empty() (queue method)": [[8, "nautilus_trader.common.queue.Queue.empty"]], "error() (loggeradapter method)": [[8, "nautilus_trader.common.logging.LoggerAdapter.error"]], "event (timeeventhandler attribute)": [[8, "nautilus_trader.common.timer.TimeEventHandler.event"]], "exception() (loggeradapter method)": [[8, "nautilus_trader.common.logging.LoggerAdapter.exception"]], "fault() (actor method)": [[8, "nautilus_trader.common.actor.Actor.fault"]], "fault() (component method)": [[8, "nautilus_trader.common.component.Component.fault"]], "find() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.find"]], "full() (queue method)": [[8, "nautilus_trader.common.queue.Queue.full"]], "fully_qualified_name() (actor class method)": [[8, "nautilus_trader.common.actor.Actor.fully_qualified_name"]], "fully_qualified_name() (component class method)": [[8, "nautilus_trader.common.component.Component.fully_qualified_name"]], "generate() (clientorderidgenerator method)": [[8, "nautilus_trader.common.generators.ClientOrderIdGenerator.generate"]], "generate() (orderlistidgenerator method)": [[8, "nautilus_trader.common.generators.OrderListIdGenerator.generate"]], "generate() (positionidgenerator method)": [[8, "nautilus_trader.common.generators.PositionIdGenerator.generate"]], "generate_client_order_id() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.generate_client_order_id"]], "generate_order_list_id() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.generate_order_list_id"]], "get() (queue method)": [[8, "nautilus_trader.common.queue.Queue.get"]], "get_all() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.get_all"]], "get_count() (positionidgenerator method)": [[8, "nautilus_trader.common.generators.PositionIdGenerator.get_count"]], "get_logger() (loggeradapter method)": [[8, "nautilus_trader.common.logging.LoggerAdapter.get_logger"]], "get_nowait() (queue method)": [[8, "nautilus_trader.common.queue.Queue.get_nowait"]], "get_state_transition_table() (componentfsmfactory static method)": [[8, "nautilus_trader.common.component.ComponentFSMFactory.get_state_transition_table"]], "handle() (timeeventhandler method)": [[8, "nautilus_trader.common.timer.TimeEventHandler.handle"]], "handle_bar() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_bar"]], "handle_bars() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_bars"]], "handle_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_data"]], "handle_event() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_event"]], "handle_historical_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_historical_data"]], "handle_instrument() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_instrument"]], "handle_instrument_close() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_instrument_close"]], "handle_instrument_status_update() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_instrument_status_update"]], "handle_instruments() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_instruments"]], "handle_order_book() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_order_book"]], "handle_order_book_deltas() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_order_book_deltas"]], "handle_quote_tick() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_quote_tick"]], "handle_quote_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_quote_ticks"]], "handle_ticker() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_ticker"]], "handle_trade_tick() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_trade_tick"]], "handle_trade_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_trade_ticks"]], "handle_venue_status_update() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_venue_status_update"]], "has_pending_requests() (actor method)": [[8, "nautilus_trader.common.actor.Actor.has_pending_requests"]], "id (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.id"]], "id (component attribute)": [[8, "nautilus_trader.common.component.Component.id"]], "id (timeevent attribute)": [[8, "nautilus_trader.common.timer.TimeEvent.id"]], "info() (loggeradapter method)": [[8, "nautilus_trader.common.logging.LoggerAdapter.info"]], "initialize() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.initialize"]], "instance_id (logger attribute)": [[8, "nautilus_trader.common.logging.Logger.instance_id"]], "instance_id (loggeradapter attribute)": [[8, "nautilus_trader.common.logging.LoggerAdapter.instance_id"]], "interval (throttler attribute)": [[8, "nautilus_trader.common.throttler.Throttler.interval"]], "interval_ns (livetimer attribute)": [[8, "nautilus_trader.common.timer.LiveTimer.interval_ns"]], "interval_ns (looptimer attribute)": [[8, "nautilus_trader.common.timer.LoopTimer.interval_ns"]], "interval_ns (threadtimer attribute)": [[8, "nautilus_trader.common.timer.ThreadTimer.interval_ns"]], "is_bypassed (logger attribute)": [[8, "nautilus_trader.common.logging.Logger.is_bypassed"]], "is_bypassed (loggeradapter attribute)": [[8, "nautilus_trader.common.logging.LoggerAdapter.is_bypassed"]], "is_degraded (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.is_degraded"]], "is_degraded (component attribute)": [[8, "nautilus_trader.common.component.Component.is_degraded"]], "is_disposed (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.is_disposed"]], "is_disposed (component attribute)": [[8, "nautilus_trader.common.component.Component.is_disposed"]], "is_expired (livetimer attribute)": [[8, "nautilus_trader.common.timer.LiveTimer.is_expired"]], "is_expired (looptimer attribute)": [[8, "nautilus_trader.common.timer.LoopTimer.is_expired"]], "is_expired (threadtimer attribute)": [[8, "nautilus_trader.common.timer.ThreadTimer.is_expired"]], "is_faulted (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.is_faulted"]], "is_faulted (component attribute)": [[8, "nautilus_trader.common.component.Component.is_faulted"]], "is_initialized (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.is_initialized"]], "is_initialized (component attribute)": [[8, "nautilus_trader.common.component.Component.is_initialized"]], "is_limiting (throttler attribute)": [[8, "nautilus_trader.common.throttler.Throttler.is_limiting"]], "is_pending_request() (actor method)": [[8, "nautilus_trader.common.actor.Actor.is_pending_request"]], "is_running (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.is_running"]], "is_running (component attribute)": [[8, "nautilus_trader.common.component.Component.is_running"]], "is_stopped (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.is_stopped"]], "is_stopped (component attribute)": [[8, "nautilus_trader.common.component.Component.is_stopped"]], "iterate_next_time() (livetimer method)": [[8, "nautilus_trader.common.timer.LiveTimer.iterate_next_time"]], "iterate_next_time() (looptimer method)": [[8, "nautilus_trader.common.timer.LoopTimer.iterate_next_time"]], "iterate_next_time() (threadtimer method)": [[8, "nautilus_trader.common.timer.ThreadTimer.iterate_next_time"]], "limit (throttler attribute)": [[8, "nautilus_trader.common.throttler.Throttler.limit"]], "limit() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.limit"]], "limit_if_touched() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.limit_if_touched"]], "list_all() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.list_all"]], "load() (actor method)": [[8, "nautilus_trader.common.actor.Actor.load"]], "load() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.load"]], "load_all() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.load_all"]], "load_all_async() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.load_all_async"]], "load_async() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.load_async"]], "load_ids() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.load_ids"]], "load_ids_async() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.load_ids_async"]], "local_now() (clock method)": [[8, "nautilus_trader.common.clock.Clock.local_now"]], "local_now() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.local_now"]], "local_now() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.local_now"]], "log (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.log"]], "log_memory() (in module nautilus_trader.common.logging)": [[8, "nautilus_trader.common.logging.log_memory"]], "machine_id (logger attribute)": [[8, "nautilus_trader.common.logging.Logger.machine_id"]], "machine_id (loggeradapter attribute)": [[8, "nautilus_trader.common.logging.LoggerAdapter.machine_id"]], "market() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.market"]], "market_if_touched() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.market_if_touched"]], "market_to_limit() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.market_to_limit"]], "maxsize (queue attribute)": [[8, "nautilus_trader.common.queue.Queue.maxsize"]], "msgbus (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.msgbus"]], "name (livetimer attribute)": [[8, "nautilus_trader.common.timer.LiveTimer.name"]], "name (looptimer attribute)": [[8, "nautilus_trader.common.timer.LoopTimer.name"]], "name (threadtimer attribute)": [[8, "nautilus_trader.common.timer.ThreadTimer.name"]], "name (throttler attribute)": [[8, "nautilus_trader.common.throttler.Throttler.name"]], "name (timeevent attribute)": [[8, "nautilus_trader.common.timer.TimeEvent.name"]], "nautilus_header() (in module nautilus_trader.common.logging)": [[8, "nautilus_trader.common.logging.nautilus_header"]], "nautilus_trader.common": [[8, "module-nautilus_trader.common"]], "nautilus_trader.common.actor": [[8, "module-nautilus_trader.common.actor"]], "nautilus_trader.common.clock": [[8, "module-nautilus_trader.common.clock"]], "nautilus_trader.common.component": [[8, "module-nautilus_trader.common.component"]], "nautilus_trader.common.factories": [[8, "module-nautilus_trader.common.factories"]], "nautilus_trader.common.generators": [[8, "module-nautilus_trader.common.generators"]], "nautilus_trader.common.logging": [[8, "module-nautilus_trader.common.logging"]], "nautilus_trader.common.providers": [[8, "module-nautilus_trader.common.providers"]], "nautilus_trader.common.queue": [[8, "module-nautilus_trader.common.queue"]], "nautilus_trader.common.throttler": [[8, "module-nautilus_trader.common.throttler"]], "nautilus_trader.common.timer": [[8, "module-nautilus_trader.common.timer"]], "next_time_ns (livetimer attribute)": [[8, "nautilus_trader.common.timer.LiveTimer.next_time_ns"]], "next_time_ns (looptimer attribute)": [[8, "nautilus_trader.common.timer.LoopTimer.next_time_ns"]], "next_time_ns (threadtimer attribute)": [[8, "nautilus_trader.common.timer.ThreadTimer.next_time_ns"]], "next_time_ns() (clock method)": [[8, "nautilus_trader.common.clock.Clock.next_time_ns"]], "next_time_ns() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.next_time_ns"]], "next_time_ns() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.next_time_ns"]], "on_bar() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_bar"]], "on_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_data"]], "on_degrade() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_degrade"]], "on_dispose() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_dispose"]], "on_event() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_event"]], "on_fault() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_fault"]], "on_historical_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_historical_data"]], "on_instrument() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_instrument"]], "on_instrument_close() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_instrument_close"]], "on_instrument_status_update() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_instrument_status_update"]], "on_load() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_load"]], "on_order_book() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_order_book"]], "on_order_book_deltas() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_order_book_deltas"]], "on_quote_tick() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_quote_tick"]], "on_reset() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_reset"]], "on_resume() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_resume"]], "on_save() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_save"]], "on_start() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_start"]], "on_stop() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_stop"]], "on_ticker() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_ticker"]], "on_trade_tick() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_trade_tick"]], "on_venue_status_update() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_venue_status_update"]], "peek_back() (queue method)": [[8, "nautilus_trader.common.queue.Queue.peek_back"]], "peek_front() (queue method)": [[8, "nautilus_trader.common.queue.Queue.peek_front"]], "peek_index() (queue method)": [[8, "nautilus_trader.common.queue.Queue.peek_index"]], "pending_requests() (actor method)": [[8, "nautilus_trader.common.actor.Actor.pending_requests"]], "pop_event() (livetimer method)": [[8, "nautilus_trader.common.timer.LiveTimer.pop_event"]], "pop_event() (looptimer method)": [[8, "nautilus_trader.common.timer.LoopTimer.pop_event"]], "pop_event() (threadtimer method)": [[8, "nautilus_trader.common.timer.ThreadTimer.pop_event"]], "publish_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.publish_data"]], "publish_signal() (actor method)": [[8, "nautilus_trader.common.actor.Actor.publish_signal"]], "put() (queue method)": [[8, "nautilus_trader.common.queue.Queue.put"]], "put_nowait() (queue method)": [[8, "nautilus_trader.common.queue.Queue.put_nowait"]], "qsize (throttler attribute)": [[8, "nautilus_trader.common.throttler.Throttler.qsize"]], "qsize() (queue method)": [[8, "nautilus_trader.common.queue.Queue.qsize"]], "recv_count (throttler attribute)": [[8, "nautilus_trader.common.throttler.Throttler.recv_count"]], "register_base() (actor method)": [[8, "nautilus_trader.common.actor.Actor.register_base"]], "register_default_handler() (clock method)": [[8, "nautilus_trader.common.clock.Clock.register_default_handler"]], "register_default_handler() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.register_default_handler"]], "register_default_handler() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.register_default_handler"]], "register_warning_event() (actor method)": [[8, "nautilus_trader.common.actor.Actor.register_warning_event"]], "repeat() (livetimer method)": [[8, "nautilus_trader.common.timer.LiveTimer.repeat"]], "repeat() (looptimer method)": [[8, "nautilus_trader.common.timer.LoopTimer.repeat"]], "repeat() (threadtimer method)": [[8, "nautilus_trader.common.timer.ThreadTimer.repeat"]], "request_bars() (actor method)": [[8, "nautilus_trader.common.actor.Actor.request_bars"]], "request_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.request_data"]], "request_instrument() (actor method)": [[8, "nautilus_trader.common.actor.Actor.request_instrument"]], "request_instruments() (actor method)": [[8, "nautilus_trader.common.actor.Actor.request_instruments"]], "request_quote_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.request_quote_ticks"]], "request_trade_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.request_trade_ticks"]], "reset() (actor method)": [[8, "nautilus_trader.common.actor.Actor.reset"]], "reset() (clientorderidgenerator method)": [[8, "nautilus_trader.common.generators.ClientOrderIdGenerator.reset"]], "reset() (component method)": [[8, "nautilus_trader.common.component.Component.reset"]], "reset() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.reset"]], "reset() (orderlistidgenerator method)": [[8, "nautilus_trader.common.generators.OrderListIdGenerator.reset"]], "reset() (positionidgenerator method)": [[8, "nautilus_trader.common.generators.PositionIdGenerator.reset"]], "resume() (actor method)": [[8, "nautilus_trader.common.actor.Actor.resume"]], "resume() (component method)": [[8, "nautilus_trader.common.component.Component.resume"]], "save() (actor method)": [[8, "nautilus_trader.common.actor.Actor.save"]], "send() (throttler method)": [[8, "nautilus_trader.common.throttler.Throttler.send"]], "sent_count (throttler attribute)": [[8, "nautilus_trader.common.throttler.Throttler.sent_count"]], "set_client_order_id_count() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.set_client_order_id_count"]], "set_count() (clientorderidgenerator method)": [[8, "nautilus_trader.common.generators.ClientOrderIdGenerator.set_count"]], "set_count() (orderlistidgenerator method)": [[8, "nautilus_trader.common.generators.OrderListIdGenerator.set_count"]], "set_count() (positionidgenerator method)": [[8, "nautilus_trader.common.generators.PositionIdGenerator.set_count"]], "set_order_list_id_count() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.set_order_list_id_count"]], "set_time() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.set_time"]], "set_time_alert() (clock method)": [[8, "nautilus_trader.common.clock.Clock.set_time_alert"]], "set_time_alert() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.set_time_alert"]], "set_time_alert() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.set_time_alert"]], "set_time_alert_ns() (clock method)": [[8, "nautilus_trader.common.clock.Clock.set_time_alert_ns"]], "set_time_alert_ns() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.set_time_alert_ns"]], "set_time_alert_ns() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.set_time_alert_ns"]], "set_timer() (clock method)": [[8, "nautilus_trader.common.clock.Clock.set_timer"]], "set_timer() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.set_timer"]], "set_timer() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.set_timer"]], "set_timer_ns() (clock method)": [[8, "nautilus_trader.common.clock.Clock.set_timer_ns"]], "set_timer_ns() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.set_timer_ns"]], "set_timer_ns() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.set_timer_ns"]], "start() (actor method)": [[8, "nautilus_trader.common.actor.Actor.start"]], "start() (component method)": [[8, "nautilus_trader.common.component.Component.start"]], "start_time_ns (livetimer attribute)": [[8, "nautilus_trader.common.timer.LiveTimer.start_time_ns"]], "start_time_ns (looptimer attribute)": [[8, "nautilus_trader.common.timer.LoopTimer.start_time_ns"]], "start_time_ns (threadtimer attribute)": [[8, "nautilus_trader.common.timer.ThreadTimer.start_time_ns"]], "state (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.state"]], "state (component attribute)": [[8, "nautilus_trader.common.component.Component.state"]], "stop() (actor method)": [[8, "nautilus_trader.common.actor.Actor.stop"]], "stop() (component method)": [[8, "nautilus_trader.common.component.Component.stop"]], "stop_limit() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.stop_limit"]], "stop_market() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.stop_market"]], "stop_time_ns (livetimer attribute)": [[8, "nautilus_trader.common.timer.LiveTimer.stop_time_ns"]], "stop_time_ns (looptimer attribute)": [[8, "nautilus_trader.common.timer.LoopTimer.stop_time_ns"]], "stop_time_ns (threadtimer attribute)": [[8, "nautilus_trader.common.timer.ThreadTimer.stop_time_ns"]], "strategy_id (orderfactory attribute)": [[8, "nautilus_trader.common.factories.OrderFactory.strategy_id"]], "subscribe_bars() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_bars"]], "subscribe_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_data"]], "subscribe_instrument() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_instrument"]], "subscribe_instrument_close() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_instrument_close"]], "subscribe_instrument_status_updates() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_instrument_status_updates"]], "subscribe_instruments() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_instruments"]], "subscribe_order_book_deltas() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_quote_ticks"]], "subscribe_ticker() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_ticker"]], "subscribe_trade_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_trade_ticks"]], "subscribe_venue_status_updates() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_venue_status_updates"]], "timer_count (clock attribute)": [[8, "nautilus_trader.common.clock.Clock.timer_count"]], "timer_count (liveclock attribute)": [[8, "nautilus_trader.common.clock.LiveClock.timer_count"]], "timer_count (testclock attribute)": [[8, "nautilus_trader.common.clock.TestClock.timer_count"]], "timer_names (clock attribute)": [[8, "nautilus_trader.common.clock.Clock.timer_names"]], "timer_names (liveclock attribute)": [[8, "nautilus_trader.common.clock.LiveClock.timer_names"]], "timer_names (testclock attribute)": [[8, "nautilus_trader.common.clock.TestClock.timer_names"]], "timestamp() (clock method)": [[8, "nautilus_trader.common.clock.Clock.timestamp"]], "timestamp() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.timestamp"]], "timestamp() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.timestamp"]], "timestamp_ms() (clock method)": [[8, "nautilus_trader.common.clock.Clock.timestamp_ms"]], "timestamp_ms() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.timestamp_ms"]], "timestamp_ms() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.timestamp_ms"]], "timestamp_ns() (clock method)": [[8, "nautilus_trader.common.clock.Clock.timestamp_ns"]], "timestamp_ns() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.timestamp_ns"]], "timestamp_ns() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.timestamp_ns"]], "to_importable_config() (actor method)": [[8, "nautilus_trader.common.actor.Actor.to_importable_config"]], "to_list() (queue method)": [[8, "nautilus_trader.common.queue.Queue.to_list"]], "trader_id (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.trader_id"]], "trader_id (component attribute)": [[8, "nautilus_trader.common.component.Component.trader_id"]], "trader_id (logger attribute)": [[8, "nautilus_trader.common.logging.Logger.trader_id"]], "trader_id (loggeradapter attribute)": [[8, "nautilus_trader.common.logging.LoggerAdapter.trader_id"]], "trader_id (orderfactory attribute)": [[8, "nautilus_trader.common.factories.OrderFactory.trader_id"]], "trailing_stop_limit() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.trailing_stop_limit"]], "trailing_stop_market() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.trailing_stop_market"]], "ts_event (timeevent attribute)": [[8, "nautilus_trader.common.timer.TimeEvent.ts_event"]], "ts_init (timeevent attribute)": [[8, "nautilus_trader.common.timer.TimeEvent.ts_init"]], "type (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.type"]], "type (component attribute)": [[8, "nautilus_trader.common.component.Component.type"]], "unsubscribe_bars() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_bars"]], "unsubscribe_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_data"]], "unsubscribe_instrument() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_instrument"]], "unsubscribe_instrument_status_updates() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_instrument_status_updates"]], "unsubscribe_instruments() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_trade_ticks"]], "unsubscribe_venue_status_updates() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_venue_status_updates"]], "update_synthetic() (actor method)": [[8, "nautilus_trader.common.actor.Actor.update_synthetic"]], "used() (throttler method)": [[8, "nautilus_trader.common.throttler.Throttler.used"]], "utc_now() (clock method)": [[8, "nautilus_trader.common.clock.Clock.utc_now"]], "utc_now() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.utc_now"]], "utc_now() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.utc_now"]], "venue (instrumentprovider property)": [[8, "nautilus_trader.common.providers.InstrumentProvider.venue"]], "warning() (loggeradapter method)": [[8, "nautilus_trader.common.logging.LoggerAdapter.warning"]], "actorconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.ActorConfig"]], "actorfactory (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.ActorFactory"]], "backtestdataconfig (class in nautilus_trader.config.backtest)": [[9, "nautilus_trader.config.backtest.BacktestDataConfig"]], "backtestengineconfig (class in nautilus_trader.config.backtest)": [[9, "nautilus_trader.config.backtest.BacktestEngineConfig"]], "backtestrunconfig (class in nautilus_trader.config.backtest)": [[9, "nautilus_trader.config.backtest.BacktestRunConfig"]], "backtestvenueconfig (class in nautilus_trader.config.backtest)": [[9, "nautilus_trader.config.backtest.BacktestVenueConfig"]], "cacheconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.CacheConfig"]], "cachedatabaseconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.CacheDatabaseConfig"]], "datacatalogconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.DataCatalogConfig"]], "dataengineconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.DataEngineConfig"]], "execalgorithmconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.ExecAlgorithmConfig"]], "execalgorithmfactory (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.ExecAlgorithmFactory"]], "execengineconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.ExecEngineConfig"]], "importableactorconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.ImportableActorConfig"]], "importableconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.ImportableConfig"]], "importableexecalgorithmconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.ImportableExecAlgorithmConfig"]], "importablefactoryconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.ImportableFactoryConfig"]], "importablestrategyconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.ImportableStrategyConfig"]], "instrumentproviderconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.InstrumentProviderConfig"]], "livedataclientconfig (class in nautilus_trader.config.live)": [[9, "nautilus_trader.config.live.LiveDataClientConfig"]], "livedataengineconfig (class in nautilus_trader.config.live)": [[9, "nautilus_trader.config.live.LiveDataEngineConfig"]], "liveexecclientconfig (class in nautilus_trader.config.live)": [[9, "nautilus_trader.config.live.LiveExecClientConfig"]], "liveexecengineconfig (class in nautilus_trader.config.live)": [[9, "nautilus_trader.config.live.LiveExecEngineConfig"]], "liveriskengineconfig (class in nautilus_trader.config.live)": [[9, "nautilus_trader.config.live.LiveRiskEngineConfig"]], "loggingconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.LoggingConfig"]], "nautilusconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.NautilusConfig"]], "nautiluskernelconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.NautilusKernelConfig"]], "orderemulatorconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.OrderEmulatorConfig"]], "riskengineconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.RiskEngineConfig"]], "routingconfig (class in nautilus_trader.config.live)": [[9, "nautilus_trader.config.live.RoutingConfig"]], "strategyconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.StrategyConfig"]], "strategyfactory (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.StrategyFactory"]], "streamingconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.StreamingConfig"]], "tradingnodeconfig (class in nautilus_trader.config.live)": [[9, "nautilus_trader.config.live.TradingNodeConfig"]], "create() (actorfactory static method)": [[9, "nautilus_trader.config.common.ActorFactory.create"]], "create() (execalgorithmfactory static method)": [[9, "nautilus_trader.config.common.ExecAlgorithmFactory.create"]], "create() (strategyfactory static method)": [[9, "nautilus_trader.config.common.StrategyFactory.create"]], "dict() (actorconfig method)": [[9, "nautilus_trader.config.common.ActorConfig.dict"]], "dict() (backtestdataconfig method)": [[9, "nautilus_trader.config.backtest.BacktestDataConfig.dict"]], "dict() (backtestengineconfig method)": [[9, "nautilus_trader.config.backtest.BacktestEngineConfig.dict"]], "dict() (backtestrunconfig method)": [[9, "nautilus_trader.config.backtest.BacktestRunConfig.dict"]], "dict() (backtestvenueconfig method)": [[9, "nautilus_trader.config.backtest.BacktestVenueConfig.dict"]], "dict() (cacheconfig method)": [[9, "nautilus_trader.config.common.CacheConfig.dict"]], "dict() (cachedatabaseconfig method)": [[9, "nautilus_trader.config.common.CacheDatabaseConfig.dict"]], "dict() (datacatalogconfig method)": [[9, "nautilus_trader.config.common.DataCatalogConfig.dict"]], "dict() (dataengineconfig method)": [[9, "nautilus_trader.config.common.DataEngineConfig.dict"]], "dict() (execalgorithmconfig method)": [[9, "nautilus_trader.config.common.ExecAlgorithmConfig.dict"]], "dict() (execengineconfig method)": [[9, "nautilus_trader.config.common.ExecEngineConfig.dict"]], "dict() (importableactorconfig method)": [[9, "nautilus_trader.config.common.ImportableActorConfig.dict"]], "dict() (importableconfig method)": [[9, "nautilus_trader.config.common.ImportableConfig.dict"]], "dict() (importableexecalgorithmconfig method)": [[9, "nautilus_trader.config.common.ImportableExecAlgorithmConfig.dict"]], "dict() (importablefactoryconfig method)": [[9, "nautilus_trader.config.common.ImportableFactoryConfig.dict"]], "dict() (importablestrategyconfig method)": [[9, "nautilus_trader.config.common.ImportableStrategyConfig.dict"]], "dict() (instrumentproviderconfig method)": [[9, "nautilus_trader.config.common.InstrumentProviderConfig.dict"]], "dict() (livedataclientconfig method)": [[9, "nautilus_trader.config.live.LiveDataClientConfig.dict"]], "dict() (livedataengineconfig method)": [[9, "nautilus_trader.config.live.LiveDataEngineConfig.dict"]], "dict() (liveexecclientconfig method)": [[9, "nautilus_trader.config.live.LiveExecClientConfig.dict"]], "dict() (liveexecengineconfig method)": [[9, "nautilus_trader.config.live.LiveExecEngineConfig.dict"]], "dict() (liveriskengineconfig method)": [[9, "nautilus_trader.config.live.LiveRiskEngineConfig.dict"]], "dict() (loggingconfig method)": [[9, "nautilus_trader.config.common.LoggingConfig.dict"]], "dict() (nautilusconfig method)": [[9, "nautilus_trader.config.common.NautilusConfig.dict"]], "dict() (nautiluskernelconfig method)": [[9, "nautilus_trader.config.common.NautilusKernelConfig.dict"]], "dict() (orderemulatorconfig method)": [[9, "nautilus_trader.config.common.OrderEmulatorConfig.dict"]], "dict() (riskengineconfig method)": [[9, "nautilus_trader.config.common.RiskEngineConfig.dict"]], "dict() (routingconfig method)": [[9, "nautilus_trader.config.live.RoutingConfig.dict"]], "dict() (strategyconfig method)": [[9, "nautilus_trader.config.common.StrategyConfig.dict"]], "dict() (streamingconfig method)": [[9, "nautilus_trader.config.common.StreamingConfig.dict"]], "dict() (tradingnodeconfig method)": [[9, "nautilus_trader.config.live.TradingNodeConfig.dict"]], "fully_qualified_name() (actorconfig class method)": [[9, "nautilus_trader.config.common.ActorConfig.fully_qualified_name"]], "fully_qualified_name() (backtestdataconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestDataConfig.fully_qualified_name"]], "fully_qualified_name() (backtestengineconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestEngineConfig.fully_qualified_name"]], "fully_qualified_name() (backtestrunconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestRunConfig.fully_qualified_name"]], "fully_qualified_name() (backtestvenueconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestVenueConfig.fully_qualified_name"]], "fully_qualified_name() (cacheconfig class method)": [[9, "nautilus_trader.config.common.CacheConfig.fully_qualified_name"]], "fully_qualified_name() (cachedatabaseconfig class method)": [[9, "nautilus_trader.config.common.CacheDatabaseConfig.fully_qualified_name"]], "fully_qualified_name() (datacatalogconfig class method)": [[9, "nautilus_trader.config.common.DataCatalogConfig.fully_qualified_name"]], "fully_qualified_name() (dataengineconfig class method)": [[9, "nautilus_trader.config.common.DataEngineConfig.fully_qualified_name"]], "fully_qualified_name() (execalgorithmconfig class method)": [[9, "nautilus_trader.config.common.ExecAlgorithmConfig.fully_qualified_name"]], "fully_qualified_name() (execengineconfig class method)": [[9, "nautilus_trader.config.common.ExecEngineConfig.fully_qualified_name"]], "fully_qualified_name() (importableactorconfig class method)": [[9, "nautilus_trader.config.common.ImportableActorConfig.fully_qualified_name"]], "fully_qualified_name() (importableconfig class method)": [[9, "nautilus_trader.config.common.ImportableConfig.fully_qualified_name"]], "fully_qualified_name() (importableexecalgorithmconfig class method)": [[9, "nautilus_trader.config.common.ImportableExecAlgorithmConfig.fully_qualified_name"]], "fully_qualified_name() (importablefactoryconfig class method)": [[9, "nautilus_trader.config.common.ImportableFactoryConfig.fully_qualified_name"]], "fully_qualified_name() (importablestrategyconfig class method)": [[9, "nautilus_trader.config.common.ImportableStrategyConfig.fully_qualified_name"]], "fully_qualified_name() (instrumentproviderconfig class method)": [[9, "nautilus_trader.config.common.InstrumentProviderConfig.fully_qualified_name"]], "fully_qualified_name() (livedataclientconfig class method)": [[9, "nautilus_trader.config.live.LiveDataClientConfig.fully_qualified_name"]], "fully_qualified_name() (livedataengineconfig class method)": [[9, "nautilus_trader.config.live.LiveDataEngineConfig.fully_qualified_name"]], "fully_qualified_name() (liveexecclientconfig class method)": [[9, "nautilus_trader.config.live.LiveExecClientConfig.fully_qualified_name"]], "fully_qualified_name() (liveexecengineconfig class method)": [[9, "nautilus_trader.config.live.LiveExecEngineConfig.fully_qualified_name"]], "fully_qualified_name() (liveriskengineconfig class method)": [[9, "nautilus_trader.config.live.LiveRiskEngineConfig.fully_qualified_name"]], "fully_qualified_name() (loggingconfig class method)": [[9, "nautilus_trader.config.common.LoggingConfig.fully_qualified_name"]], "fully_qualified_name() (nautilusconfig class method)": [[9, "nautilus_trader.config.common.NautilusConfig.fully_qualified_name"]], "fully_qualified_name() (nautiluskernelconfig class method)": [[9, "nautilus_trader.config.common.NautilusKernelConfig.fully_qualified_name"]], "fully_qualified_name() (orderemulatorconfig class method)": [[9, "nautilus_trader.config.common.OrderEmulatorConfig.fully_qualified_name"]], "fully_qualified_name() (riskengineconfig class method)": [[9, "nautilus_trader.config.common.RiskEngineConfig.fully_qualified_name"]], "fully_qualified_name() (routingconfig class method)": [[9, "nautilus_trader.config.live.RoutingConfig.fully_qualified_name"]], "fully_qualified_name() (strategyconfig class method)": [[9, "nautilus_trader.config.common.StrategyConfig.fully_qualified_name"]], "fully_qualified_name() (streamingconfig class method)": [[9, "nautilus_trader.config.common.StreamingConfig.fully_qualified_name"]], "fully_qualified_name() (tradingnodeconfig class method)": [[9, "nautilus_trader.config.live.TradingNodeConfig.fully_qualified_name"]], "json() (actorconfig method)": [[9, "nautilus_trader.config.common.ActorConfig.json"]], "json() (backtestdataconfig method)": [[9, "nautilus_trader.config.backtest.BacktestDataConfig.json"]], "json() (backtestengineconfig method)": [[9, "nautilus_trader.config.backtest.BacktestEngineConfig.json"]], "json() (backtestrunconfig method)": [[9, "nautilus_trader.config.backtest.BacktestRunConfig.json"]], "json() (backtestvenueconfig method)": [[9, "nautilus_trader.config.backtest.BacktestVenueConfig.json"]], "json() (cacheconfig method)": [[9, "nautilus_trader.config.common.CacheConfig.json"]], "json() (cachedatabaseconfig method)": [[9, "nautilus_trader.config.common.CacheDatabaseConfig.json"]], "json() (datacatalogconfig method)": [[9, "nautilus_trader.config.common.DataCatalogConfig.json"]], "json() (dataengineconfig method)": [[9, "nautilus_trader.config.common.DataEngineConfig.json"]], "json() (execalgorithmconfig method)": [[9, "nautilus_trader.config.common.ExecAlgorithmConfig.json"]], "json() (execengineconfig method)": [[9, "nautilus_trader.config.common.ExecEngineConfig.json"]], "json() (importableactorconfig method)": [[9, "nautilus_trader.config.common.ImportableActorConfig.json"]], "json() (importableconfig method)": [[9, "nautilus_trader.config.common.ImportableConfig.json"]], "json() (importableexecalgorithmconfig method)": [[9, "nautilus_trader.config.common.ImportableExecAlgorithmConfig.json"]], "json() (importablefactoryconfig method)": [[9, "nautilus_trader.config.common.ImportableFactoryConfig.json"]], "json() (importablestrategyconfig method)": [[9, "nautilus_trader.config.common.ImportableStrategyConfig.json"]], "json() (instrumentproviderconfig method)": [[9, "nautilus_trader.config.common.InstrumentProviderConfig.json"]], "json() (livedataclientconfig method)": [[9, "nautilus_trader.config.live.LiveDataClientConfig.json"]], "json() (livedataengineconfig method)": [[9, "nautilus_trader.config.live.LiveDataEngineConfig.json"]], "json() (liveexecclientconfig method)": [[9, "nautilus_trader.config.live.LiveExecClientConfig.json"]], "json() (liveexecengineconfig method)": [[9, "nautilus_trader.config.live.LiveExecEngineConfig.json"]], "json() (liveriskengineconfig method)": [[9, "nautilus_trader.config.live.LiveRiskEngineConfig.json"]], "json() (loggingconfig method)": [[9, "nautilus_trader.config.common.LoggingConfig.json"]], "json() (nautilusconfig method)": [[9, "nautilus_trader.config.common.NautilusConfig.json"]], "json() (nautiluskernelconfig method)": [[9, "nautilus_trader.config.common.NautilusKernelConfig.json"]], "json() (orderemulatorconfig method)": [[9, "nautilus_trader.config.common.OrderEmulatorConfig.json"]], "json() (riskengineconfig method)": [[9, "nautilus_trader.config.common.RiskEngineConfig.json"]], "json() (routingconfig method)": [[9, "nautilus_trader.config.live.RoutingConfig.json"]], "json() (strategyconfig method)": [[9, "nautilus_trader.config.common.StrategyConfig.json"]], "json() (streamingconfig method)": [[9, "nautilus_trader.config.common.StreamingConfig.json"]], "json() (tradingnodeconfig method)": [[9, "nautilus_trader.config.live.TradingNodeConfig.json"]], "nautilus_trader.config": [[9, "module-nautilus_trader.config"]], "nautilus_trader.config.backtest": [[9, "module-nautilus_trader.config.backtest"]], "nautilus_trader.config.common": [[9, "module-nautilus_trader.config.common"]], "nautilus_trader.config.live": [[9, "module-nautilus_trader.config.live"]], "parse() (actorconfig class method)": [[9, "nautilus_trader.config.common.ActorConfig.parse"]], "parse() (backtestdataconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestDataConfig.parse"]], "parse() (backtestengineconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestEngineConfig.parse"]], "parse() (backtestrunconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestRunConfig.parse"]], "parse() (backtestvenueconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestVenueConfig.parse"]], "parse() (cacheconfig class method)": [[9, "nautilus_trader.config.common.CacheConfig.parse"]], "parse() (cachedatabaseconfig class method)": [[9, "nautilus_trader.config.common.CacheDatabaseConfig.parse"]], "parse() (datacatalogconfig class method)": [[9, "nautilus_trader.config.common.DataCatalogConfig.parse"]], "parse() (dataengineconfig class method)": [[9, "nautilus_trader.config.common.DataEngineConfig.parse"]], "parse() (execalgorithmconfig class method)": [[9, "nautilus_trader.config.common.ExecAlgorithmConfig.parse"]], "parse() (execengineconfig class method)": [[9, "nautilus_trader.config.common.ExecEngineConfig.parse"]], "parse() (importableactorconfig class method)": [[9, "nautilus_trader.config.common.ImportableActorConfig.parse"]], "parse() (importableconfig class method)": [[9, "nautilus_trader.config.common.ImportableConfig.parse"]], "parse() (importableexecalgorithmconfig class method)": [[9, "nautilus_trader.config.common.ImportableExecAlgorithmConfig.parse"]], "parse() (importablefactoryconfig class method)": [[9, "nautilus_trader.config.common.ImportableFactoryConfig.parse"]], "parse() (importablestrategyconfig class method)": [[9, "nautilus_trader.config.common.ImportableStrategyConfig.parse"]], "parse() (instrumentproviderconfig class method)": [[9, "nautilus_trader.config.common.InstrumentProviderConfig.parse"]], "parse() (livedataclientconfig class method)": [[9, "nautilus_trader.config.live.LiveDataClientConfig.parse"]], "parse() (livedataengineconfig class method)": [[9, "nautilus_trader.config.live.LiveDataEngineConfig.parse"]], "parse() (liveexecclientconfig class method)": [[9, "nautilus_trader.config.live.LiveExecClientConfig.parse"]], "parse() (liveexecengineconfig class method)": [[9, "nautilus_trader.config.live.LiveExecEngineConfig.parse"]], "parse() (liveriskengineconfig class method)": [[9, "nautilus_trader.config.live.LiveRiskEngineConfig.parse"]], "parse() (loggingconfig class method)": [[9, "nautilus_trader.config.common.LoggingConfig.parse"]], "parse() (nautilusconfig class method)": [[9, "nautilus_trader.config.common.NautilusConfig.parse"]], "parse() (nautiluskernelconfig class method)": [[9, "nautilus_trader.config.common.NautilusKernelConfig.parse"]], "parse() (orderemulatorconfig class method)": [[9, "nautilus_trader.config.common.OrderEmulatorConfig.parse"]], "parse() (riskengineconfig class method)": [[9, "nautilus_trader.config.common.RiskEngineConfig.parse"]], "parse() (routingconfig class method)": [[9, "nautilus_trader.config.live.RoutingConfig.parse"]], "parse() (strategyconfig class method)": [[9, "nautilus_trader.config.common.StrategyConfig.parse"]], "parse() (streamingconfig class method)": [[9, "nautilus_trader.config.common.StreamingConfig.parse"]], "parse() (tradingnodeconfig class method)": [[9, "nautilus_trader.config.live.TradingNodeConfig.parse"]], "parse_filters_expr() (in module nautilus_trader.config.backtest)": [[9, "nautilus_trader.config.backtest.parse_filters_expr"]], "validate() (actorconfig method)": [[9, "nautilus_trader.config.common.ActorConfig.validate"]], "validate() (backtestdataconfig method)": [[9, "nautilus_trader.config.backtest.BacktestDataConfig.validate"]], "validate() (backtestengineconfig method)": [[9, "nautilus_trader.config.backtest.BacktestEngineConfig.validate"]], "validate() (backtestrunconfig method)": [[9, "nautilus_trader.config.backtest.BacktestRunConfig.validate"]], "validate() (backtestvenueconfig method)": [[9, "nautilus_trader.config.backtest.BacktestVenueConfig.validate"]], "validate() (cacheconfig method)": [[9, "nautilus_trader.config.common.CacheConfig.validate"]], "validate() (cachedatabaseconfig method)": [[9, "nautilus_trader.config.common.CacheDatabaseConfig.validate"]], "validate() (datacatalogconfig method)": [[9, "nautilus_trader.config.common.DataCatalogConfig.validate"]], "validate() (dataengineconfig method)": [[9, "nautilus_trader.config.common.DataEngineConfig.validate"]], "validate() (execalgorithmconfig method)": [[9, "nautilus_trader.config.common.ExecAlgorithmConfig.validate"]], "validate() (execengineconfig method)": [[9, "nautilus_trader.config.common.ExecEngineConfig.validate"]], "validate() (importableactorconfig method)": [[9, "nautilus_trader.config.common.ImportableActorConfig.validate"]], "validate() (importableconfig method)": [[9, "nautilus_trader.config.common.ImportableConfig.validate"]], "validate() (importableexecalgorithmconfig method)": [[9, "nautilus_trader.config.common.ImportableExecAlgorithmConfig.validate"]], "validate() (importablefactoryconfig method)": [[9, "nautilus_trader.config.common.ImportableFactoryConfig.validate"]], "validate() (importablestrategyconfig method)": [[9, "nautilus_trader.config.common.ImportableStrategyConfig.validate"]], "validate() (instrumentproviderconfig method)": [[9, "nautilus_trader.config.common.InstrumentProviderConfig.validate"]], "validate() (livedataclientconfig method)": [[9, "nautilus_trader.config.live.LiveDataClientConfig.validate"]], "validate() (livedataengineconfig method)": [[9, "nautilus_trader.config.live.LiveDataEngineConfig.validate"]], "validate() (liveexecclientconfig method)": [[9, "nautilus_trader.config.live.LiveExecClientConfig.validate"]], "validate() (liveexecengineconfig method)": [[9, "nautilus_trader.config.live.LiveExecEngineConfig.validate"]], "validate() (liveriskengineconfig method)": [[9, "nautilus_trader.config.live.LiveRiskEngineConfig.validate"]], "validate() (loggingconfig method)": [[9, "nautilus_trader.config.common.LoggingConfig.validate"]], "validate() (nautilusconfig method)": [[9, "nautilus_trader.config.common.NautilusConfig.validate"]], "validate() (nautiluskernelconfig method)": [[9, "nautilus_trader.config.common.NautilusKernelConfig.validate"]], "validate() (orderemulatorconfig method)": [[9, "nautilus_trader.config.common.OrderEmulatorConfig.validate"]], "validate() (riskengineconfig method)": [[9, "nautilus_trader.config.common.RiskEngineConfig.validate"]], "validate() (routingconfig method)": [[9, "nautilus_trader.config.live.RoutingConfig.validate"]], "validate() (strategyconfig method)": [[9, "nautilus_trader.config.common.StrategyConfig.validate"]], "validate() (streamingconfig method)": [[9, "nautilus_trader.config.common.StreamingConfig.validate"]], "validate() (tradingnodeconfig method)": [[9, "nautilus_trader.config.live.TradingNodeConfig.validate"]], "command (class in nautilus_trader.core.message)": [[10, "nautilus_trader.core.message.Command"]], "document (class in nautilus_trader.core.message)": [[10, "nautilus_trader.core.message.Document"]], "event (class in nautilus_trader.core.message)": [[10, "nautilus_trader.core.message.Event"]], "finitestatemachine (class in nautilus_trader.core.fsm)": [[10, "nautilus_trader.core.fsm.FiniteStateMachine"]], "invalidstatetrigger": [[10, "nautilus_trader.core.fsm.InvalidStateTrigger"]], "request (class in nautilus_trader.core.message)": [[10, "nautilus_trader.core.message.Request"]], "response (class in nautilus_trader.core.message)": [[10, "nautilus_trader.core.message.Response"]], "uuid4 (class in nautilus_trader.core.uuid)": [[10, "nautilus_trader.core.uuid.UUID4"]], "add_note() (invalidstatetrigger method)": [[10, "nautilus_trader.core.fsm.InvalidStateTrigger.add_note"]], "as_utc_index() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.as_utc_index"]], "as_utc_timestamp() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.as_utc_timestamp"]], "basis_points_as_percentage() (in module nautilus_trader.core.stats)": [[10, "nautilus_trader.core.stats.basis_points_as_percentage"]], "callback (request attribute)": [[10, "nautilus_trader.core.message.Request.callback"]], "correlation_id (response attribute)": [[10, "nautilus_trader.core.message.Response.correlation_id"]], "dt_to_unix_nanos() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.dt_to_unix_nanos"]], "fast_mad() (in module nautilus_trader.core.stats)": [[10, "nautilus_trader.core.stats.fast_mad"]], "fast_mad_with_mean() (in module nautilus_trader.core.stats)": [[10, "nautilus_trader.core.stats.fast_mad_with_mean"]], "fast_mean() (in module nautilus_trader.core.stats)": [[10, "nautilus_trader.core.stats.fast_mean"]], "fast_mean_iterated() (in module nautilus_trader.core.stats)": [[10, "nautilus_trader.core.stats.fast_mean_iterated"]], "fast_std() (in module nautilus_trader.core.stats)": [[10, "nautilus_trader.core.stats.fast_std"]], "fast_std_with_mean() (in module nautilus_trader.core.stats)": [[10, "nautilus_trader.core.stats.fast_std_with_mean"]], "format_iso8601() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.format_iso8601"]], "id (command attribute)": [[10, "nautilus_trader.core.message.Command.id"]], "id (document attribute)": [[10, "nautilus_trader.core.message.Document.id"]], "id (event attribute)": [[10, "nautilus_trader.core.message.Event.id"]], "id (request attribute)": [[10, "nautilus_trader.core.message.Request.id"]], "id (response attribute)": [[10, "nautilus_trader.core.message.Response.id"]], "is_datetime_utc() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.is_datetime_utc"]], "is_tz_aware() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.is_tz_aware"]], "is_tz_naive() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.is_tz_naive"]], "maybe_dt_to_unix_nanos() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.maybe_dt_to_unix_nanos"]], "maybe_unix_nanos_to_dt() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.maybe_unix_nanos_to_dt"]], "micros_to_nanos() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.micros_to_nanos"]], "millis_to_nanos() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.millis_to_nanos"]], "nanos_to_micros() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.nanos_to_micros"]], "nanos_to_millis() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.nanos_to_millis"]], "nanos_to_secs() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.nanos_to_secs"]], "nautilus_trader.core": [[10, "module-nautilus_trader.core"]], "nautilus_trader.core.datetime": [[10, "module-nautilus_trader.core.datetime"]], "nautilus_trader.core.fsm": [[10, "module-nautilus_trader.core.fsm"]], "nautilus_trader.core.message": [[10, "module-nautilus_trader.core.message"]], "nautilus_trader.core.stats": [[10, "module-nautilus_trader.core.stats"]], "nautilus_trader.core.uuid": [[10, "module-nautilus_trader.core.uuid"]], "secs_to_millis() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.secs_to_millis"]], "secs_to_nanos() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.secs_to_nanos"]], "state (finitestatemachine attribute)": [[10, "nautilus_trader.core.fsm.FiniteStateMachine.state"]], "state_string (finitestatemachine attribute)": [[10, "nautilus_trader.core.fsm.FiniteStateMachine.state_string"]], "trigger() (finitestatemachine method)": [[10, "nautilus_trader.core.fsm.FiniteStateMachine.trigger"]], "ts_event (event attribute)": [[10, "nautilus_trader.core.message.Event.ts_event"]], "ts_init (command attribute)": [[10, "nautilus_trader.core.message.Command.ts_init"]], "ts_init (document attribute)": [[10, "nautilus_trader.core.message.Document.ts_init"]], "ts_init (event attribute)": [[10, "nautilus_trader.core.message.Event.ts_init"]], "ts_init (request attribute)": [[10, "nautilus_trader.core.message.Request.ts_init"]], "ts_init (response attribute)": [[10, "nautilus_trader.core.message.Response.ts_init"]], "unix_nanos_to_dt() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.unix_nanos_to_dt"]], "value (uuid4 attribute)": [[10, "nautilus_trader.core.uuid.UUID4.value"]], "with_traceback() (invalidstatetrigger method)": [[10, "nautilus_trader.core.fsm.InvalidStateTrigger.with_traceback"]], "baraggregator (class in nautilus_trader.data.aggregation)": [[11, "nautilus_trader.data.aggregation.BarAggregator"]], "barbuilder (class in nautilus_trader.data.aggregation)": [[11, "nautilus_trader.data.aggregation.BarBuilder"]], "dataclient (class in nautilus_trader.data.client)": [[11, "nautilus_trader.data.client.DataClient"]], "datacommand (class in nautilus_trader.data.messages)": [[11, "nautilus_trader.data.messages.DataCommand"]], "dataengine (class in nautilus_trader.data.engine)": [[11, "nautilus_trader.data.engine.DataEngine"]], "datarequest (class in nautilus_trader.data.messages)": [[11, "nautilus_trader.data.messages.DataRequest"]], "dataresponse (class in nautilus_trader.data.messages)": [[11, "nautilus_trader.data.messages.DataResponse"]], "marketdataclient (class in nautilus_trader.data.client)": [[11, "nautilus_trader.data.client.MarketDataClient"]], "subscribe (class in nautilus_trader.data.messages)": [[11, "nautilus_trader.data.messages.Subscribe"]], "tickbaraggregator (class in nautilus_trader.data.aggregation)": [[11, "nautilus_trader.data.aggregation.TickBarAggregator"]], "timebaraggregator (class in nautilus_trader.data.aggregation)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator"]], "unsubscribe (class in nautilus_trader.data.messages)": [[11, "nautilus_trader.data.messages.Unsubscribe"]], "valuebaraggregator (class in nautilus_trader.data.aggregation)": [[11, "nautilus_trader.data.aggregation.ValueBarAggregator"]], "volumebaraggregator (class in nautilus_trader.data.aggregation)": [[11, "nautilus_trader.data.aggregation.VolumeBarAggregator"]], "bar_type (baraggregator attribute)": [[11, "nautilus_trader.data.aggregation.BarAggregator.bar_type"]], "bar_type (tickbaraggregator attribute)": [[11, "nautilus_trader.data.aggregation.TickBarAggregator.bar_type"]], "bar_type (timebaraggregator attribute)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.bar_type"]], "bar_type (valuebaraggregator attribute)": [[11, "nautilus_trader.data.aggregation.ValueBarAggregator.bar_type"]], "bar_type (volumebaraggregator attribute)": [[11, "nautilus_trader.data.aggregation.VolumeBarAggregator.bar_type"]], "build() (barbuilder method)": [[11, "nautilus_trader.data.aggregation.BarBuilder.build"]], "build_now() (barbuilder method)": [[11, "nautilus_trader.data.aggregation.BarBuilder.build_now"]], "callback (datarequest attribute)": [[11, "nautilus_trader.data.messages.DataRequest.callback"]], "check_connected() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.check_connected"]], "check_disconnected() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.check_disconnected"]], "client_id (datacommand attribute)": [[11, "nautilus_trader.data.messages.DataCommand.client_id"]], "client_id (datarequest attribute)": [[11, "nautilus_trader.data.messages.DataRequest.client_id"]], "client_id (dataresponse attribute)": [[11, "nautilus_trader.data.messages.DataResponse.client_id"]], "client_id (subscribe attribute)": [[11, "nautilus_trader.data.messages.Subscribe.client_id"]], "client_id (unsubscribe attribute)": [[11, "nautilus_trader.data.messages.Unsubscribe.client_id"]], "command_count (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.command_count"]], "connect() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.connect"]], "correlation_id (dataresponse attribute)": [[11, "nautilus_trader.data.messages.DataResponse.correlation_id"]], "count (barbuilder attribute)": [[11, "nautilus_trader.data.aggregation.BarBuilder.count"]], "data (dataresponse attribute)": [[11, "nautilus_trader.data.messages.DataResponse.data"]], "data_count (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.data_count"]], "data_type (datacommand attribute)": [[11, "nautilus_trader.data.messages.DataCommand.data_type"]], "data_type (datarequest attribute)": [[11, "nautilus_trader.data.messages.DataRequest.data_type"]], "data_type (dataresponse attribute)": [[11, "nautilus_trader.data.messages.DataResponse.data_type"]], "data_type (subscribe attribute)": [[11, "nautilus_trader.data.messages.Subscribe.data_type"]], "data_type (unsubscribe attribute)": [[11, "nautilus_trader.data.messages.Unsubscribe.data_type"]], "debug (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.debug"]], "default_client (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.default_client"]], "degrade() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.degrade"]], "degrade() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.degrade"]], "degrade() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.degrade"]], "deregister_client() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.deregister_client"]], "disconnect() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.disconnect"]], "dispose() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.dispose"]], "dispose() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.dispose"]], "dispose() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.dispose"]], "execute() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.execute"]], "fault() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.fault"]], "fault() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.fault"]], "fault() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.fault"]], "fully_qualified_name() (dataclient class method)": [[11, "nautilus_trader.data.client.DataClient.fully_qualified_name"]], "fully_qualified_name() (dataengine class method)": [[11, "nautilus_trader.data.engine.DataEngine.fully_qualified_name"]], "fully_qualified_name() (marketdataclient class method)": [[11, "nautilus_trader.data.client.MarketDataClient.fully_qualified_name"]], "get_cumulative_value() (valuebaraggregator method)": [[11, "nautilus_trader.data.aggregation.ValueBarAggregator.get_cumulative_value"]], "get_start_time() (timebaraggregator method)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.get_start_time"]], "handle_quote_tick() (baraggregator method)": [[11, "nautilus_trader.data.aggregation.BarAggregator.handle_quote_tick"]], "handle_quote_tick() (tickbaraggregator method)": [[11, "nautilus_trader.data.aggregation.TickBarAggregator.handle_quote_tick"]], "handle_quote_tick() (timebaraggregator method)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.handle_quote_tick"]], "handle_quote_tick() (valuebaraggregator method)": [[11, "nautilus_trader.data.aggregation.ValueBarAggregator.handle_quote_tick"]], "handle_quote_tick() (volumebaraggregator method)": [[11, "nautilus_trader.data.aggregation.VolumeBarAggregator.handle_quote_tick"]], "handle_trade_tick() (baraggregator method)": [[11, "nautilus_trader.data.aggregation.BarAggregator.handle_trade_tick"]], "handle_trade_tick() (tickbaraggregator method)": [[11, "nautilus_trader.data.aggregation.TickBarAggregator.handle_trade_tick"]], "handle_trade_tick() (timebaraggregator method)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.handle_trade_tick"]], "handle_trade_tick() (valuebaraggregator method)": [[11, "nautilus_trader.data.aggregation.ValueBarAggregator.handle_trade_tick"]], "handle_trade_tick() (volumebaraggregator method)": [[11, "nautilus_trader.data.aggregation.VolumeBarAggregator.handle_trade_tick"]], "id (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.id"]], "id (datacommand attribute)": [[11, "nautilus_trader.data.messages.DataCommand.id"]], "id (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.id"]], "id (datarequest attribute)": [[11, "nautilus_trader.data.messages.DataRequest.id"]], "id (dataresponse attribute)": [[11, "nautilus_trader.data.messages.DataResponse.id"]], "id (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.id"]], "id (subscribe attribute)": [[11, "nautilus_trader.data.messages.Subscribe.id"]], "id (unsubscribe attribute)": [[11, "nautilus_trader.data.messages.Unsubscribe.id"]], "initialized (barbuilder attribute)": [[11, "nautilus_trader.data.aggregation.BarBuilder.initialized"]], "interval (timebaraggregator attribute)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.interval"]], "interval_ns (timebaraggregator attribute)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.interval_ns"]], "is_connected (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.is_connected"]], "is_connected (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.is_connected"]], "is_degraded (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.is_degraded"]], "is_degraded (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.is_degraded"]], "is_degraded (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.is_degraded"]], "is_disposed (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.is_disposed"]], "is_disposed (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.is_disposed"]], "is_disposed (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.is_disposed"]], "is_faulted (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.is_faulted"]], "is_faulted (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.is_faulted"]], "is_faulted (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.is_faulted"]], "is_initialized (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.is_initialized"]], "is_initialized (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.is_initialized"]], "is_initialized (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.is_initialized"]], "is_running (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.is_running"]], "is_running (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.is_running"]], "is_running (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.is_running"]], "is_stopped (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.is_stopped"]], "is_stopped (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.is_stopped"]], "is_stopped (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.is_stopped"]], "nautilus_trader.data": [[11, "module-nautilus_trader.data"]], "nautilus_trader.data.aggregation": [[11, "module-nautilus_trader.data.aggregation"]], "nautilus_trader.data.client": [[11, "module-nautilus_trader.data.client"]], "nautilus_trader.data.engine": [[11, "module-nautilus_trader.data.engine"]], "nautilus_trader.data.messages": [[11, "module-nautilus_trader.data.messages"]], "next_close_ns (timebaraggregator attribute)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.next_close_ns"]], "price_precision (barbuilder attribute)": [[11, "nautilus_trader.data.aggregation.BarBuilder.price_precision"]], "process() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.process"]], "register_catalog() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.register_catalog"]], "register_client() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.register_client"]], "register_default_client() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.register_default_client"]], "register_venue_routing() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.register_venue_routing"]], "registered_clients (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.registered_clients"]], "request() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.request"]], "request() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.request"]], "request() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.request"]], "request_bars() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.request_bars"]], "request_count (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.request_count"]], "request_instrument() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.request_instrument"]], "request_instruments() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.request_instruments"]], "request_quote_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.request_quote_ticks"]], "request_trade_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.request_trade_ticks"]], "reset() (barbuilder method)": [[11, "nautilus_trader.data.aggregation.BarBuilder.reset"]], "reset() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.reset"]], "reset() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.reset"]], "reset() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.reset"]], "response() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.response"]], "response_count (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.response_count"]], "resume() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.resume"]], "resume() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.resume"]], "resume() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.resume"]], "set_partial() (barbuilder method)": [[11, "nautilus_trader.data.aggregation.BarBuilder.set_partial"]], "set_partial() (timebaraggregator method)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.set_partial"]], "size_precision (barbuilder attribute)": [[11, "nautilus_trader.data.aggregation.BarBuilder.size_precision"]], "start() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.start"]], "start() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.start"]], "start() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.start"]], "state (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.state"]], "state (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.state"]], "state (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.state"]], "stop() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.stop"]], "stop() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.stop"]], "stop() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.stop"]], "stop() (timebaraggregator method)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.stop"]], "subscribe() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.subscribe"]], "subscribe() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe"]], "subscribe_bars() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_bars"]], "subscribe_instrument() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_instrument"]], "subscribe_instrument_close() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_instrument_close"]], "subscribe_instrument_status_updates() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_instrument_status_updates"]], "subscribe_instruments() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_instruments"]], "subscribe_order_book_deltas() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_quote_ticks"]], "subscribe_ticker() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_ticker"]], "subscribe_trade_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_trade_ticks"]], "subscribe_venue_status_updates() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_venue_status_updates"]], "subscribed_bars() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_bars"]], "subscribed_bars() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_bars"]], "subscribed_generic_data() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.subscribed_generic_data"]], "subscribed_generic_data() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_generic_data"]], "subscribed_generic_data() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_generic_data"]], "subscribed_instrument_close() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_instrument_close"]], "subscribed_instrument_close() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_instrument_close"]], "subscribed_instrument_status_updates() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_instrument_status_updates"]], "subscribed_instrument_status_updates() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_instrument_status_updates"]], "subscribed_instruments() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_instruments"]], "subscribed_instruments() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_instruments"]], "subscribed_order_book_deltas() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_order_book_deltas"]], "subscribed_order_book_deltas() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_order_book_deltas"]], "subscribed_order_book_snapshots() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_order_book_snapshots"]], "subscribed_order_book_snapshots() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_order_book_snapshots"]], "subscribed_quote_ticks() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_quote_ticks"]], "subscribed_quote_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_quote_ticks"]], "subscribed_synthetic_quotes() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_synthetic_quotes"]], "subscribed_synthetic_trades() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_synthetic_trades"]], "subscribed_tickers() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_tickers"]], "subscribed_tickers() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_tickers"]], "subscribed_trade_ticks() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_trade_ticks"]], "subscribed_trade_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_trade_ticks"]], "subscribed_venue_status_updates() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_venue_status_updates"]], "trader_id (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.trader_id"]], "trader_id (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.trader_id"]], "trader_id (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.trader_id"]], "ts_init (datacommand attribute)": [[11, "nautilus_trader.data.messages.DataCommand.ts_init"]], "ts_init (datarequest attribute)": [[11, "nautilus_trader.data.messages.DataRequest.ts_init"]], "ts_init (dataresponse attribute)": [[11, "nautilus_trader.data.messages.DataResponse.ts_init"]], "ts_init (subscribe attribute)": [[11, "nautilus_trader.data.messages.Subscribe.ts_init"]], "ts_init (unsubscribe attribute)": [[11, "nautilus_trader.data.messages.Unsubscribe.ts_init"]], "ts_last (barbuilder attribute)": [[11, "nautilus_trader.data.aggregation.BarBuilder.ts_last"]], "type (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.type"]], "type (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.type"]], "type (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.type"]], "unsubscribe() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.unsubscribe"]], "unsubscribe() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe"]], "unsubscribe_bars() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_bars"]], "unsubscribe_instrument() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_instrument"]], "unsubscribe_instrument_close() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_instrument_close"]], "unsubscribe_instrument_status_updates() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_instrument_status_updates"]], "unsubscribe_instruments() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_trade_ticks"]], "unsubscribe_venue_status_updates() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_venue_status_updates"]], "update() (barbuilder method)": [[11, "nautilus_trader.data.aggregation.BarBuilder.update"]], "venue (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.venue"]], "venue (datacommand attribute)": [[11, "nautilus_trader.data.messages.DataCommand.venue"]], "venue (datarequest attribute)": [[11, "nautilus_trader.data.messages.DataRequest.venue"]], "venue (dataresponse attribute)": [[11, "nautilus_trader.data.messages.DataResponse.venue"]], "venue (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.venue"]], "venue (subscribe attribute)": [[11, "nautilus_trader.data.messages.Subscribe.venue"]], "venue (unsubscribe attribute)": [[11, "nautilus_trader.data.messages.Unsubscribe.venue"]], "cancelallorders (class in nautilus_trader.execution.messages)": [[12, "nautilus_trader.execution.messages.CancelAllOrders"]], "cancelorder (class in nautilus_trader.execution.messages)": [[12, "nautilus_trader.execution.messages.CancelOrder"]], "execalgorithm (class in nautilus_trader.execution.algorithm)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm"]], "executionclient (class in nautilus_trader.execution.client)": [[12, "nautilus_trader.execution.client.ExecutionClient"]], "executionengine (class in nautilus_trader.execution.engine)": [[12, "nautilus_trader.execution.engine.ExecutionEngine"]], "executionmassstatus (class in nautilus_trader.execution.reports)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus"]], "executionreport (class in nautilus_trader.execution.reports)": [[12, "nautilus_trader.execution.reports.ExecutionReport"]], "matchingcore (class in nautilus_trader.execution.matching_core)": [[12, "nautilus_trader.execution.matching_core.MatchingCore"]], "modifyorder (class in nautilus_trader.execution.messages)": [[12, "nautilus_trader.execution.messages.ModifyOrder"]], "orderemulator (class in nautilus_trader.execution.emulator)": [[12, "nautilus_trader.execution.emulator.OrderEmulator"]], "orderstatusreport (class in nautilus_trader.execution.reports)": [[12, "nautilus_trader.execution.reports.OrderStatusReport"]], "positionstatusreport (class in nautilus_trader.execution.reports)": [[12, "nautilus_trader.execution.reports.PositionStatusReport"]], "queryorder (class in nautilus_trader.execution.messages)": [[12, "nautilus_trader.execution.messages.QueryOrder"]], "submitorder (class in nautilus_trader.execution.messages)": [[12, "nautilus_trader.execution.messages.SubmitOrder"]], "submitorderlist (class in nautilus_trader.execution.messages)": [[12, "nautilus_trader.execution.messages.SubmitOrderList"]], "tradereport (class in nautilus_trader.execution.reports)": [[12, "nautilus_trader.execution.reports.TradeReport"]], "tradingcommand (class in nautilus_trader.execution.messages)": [[12, "nautilus_trader.execution.messages.TradingCommand"]], "account_id (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.account_id"]], "account_type (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.account_type"]], "add_order() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.add_order"]], "add_order_reports() (executionmassstatus method)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.add_order_reports"]], "add_position_reports() (executionmassstatus method)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.add_position_reports"]], "add_synthetic() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.add_synthetic"]], "add_synthetic() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.add_synthetic"]], "add_trade_reports() (executionmassstatus method)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.add_trade_reports"]], "allow_cash_positions (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.allow_cash_positions"]], "ask (matchingcore attribute)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.ask"]], "base_currency (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.base_currency"]], "bid (matchingcore attribute)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.bid"]], "cache (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.cache"]], "cache (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.cache"]], "cancel_all_orders() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.cancel_all_orders"]], "cancel_order() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.cancel_order"]], "cancel_order() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.cancel_order"]], "check_connected() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.check_connected"]], "check_disconnected() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.check_disconnected"]], "check_integrity() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.check_integrity"]], "check_residuals() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.check_residuals"]], "client_id (cancelallorders attribute)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.client_id"]], "client_id (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.client_id"]], "client_id (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.client_id"]], "client_id (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.client_id"]], "client_id (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.client_id"]], "client_id (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.client_id"]], "client_id (tradingcommand attribute)": [[12, "nautilus_trader.execution.messages.TradingCommand.client_id"]], "client_order_id (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.client_order_id"]], "client_order_id (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.client_order_id"]], "client_order_id (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.client_order_id"]], "clock (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.clock"]], "clock (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.clock"]], "command_count (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.command_count"]], "config (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.config"]], "config (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.config"]], "connect() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.connect"]], "create_matching_core() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.create_matching_core"]], "debug (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.debug"]], "default_client (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.default_client"]], "degrade() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.degrade"]], "degrade() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.degrade"]], "degrade() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.degrade"]], "degrade() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.degrade"]], "delete_order() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.delete_order"]], "deregister_client() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.deregister_client"]], "deregister_warning_event() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.deregister_warning_event"]], "deregister_warning_event() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.deregister_warning_event"]], "disconnect() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.disconnect"]], "dispose() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.dispose"]], "dispose() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.dispose"]], "dispose() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.dispose"]], "dispose() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.dispose"]], "event_count (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.event_count"]], "exec_algorithm_id (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.exec_algorithm_id"]], "exec_algorithm_id (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.exec_algorithm_id"]], "execute() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.execute"]], "execute() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.execute"]], "execute() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.execute"]], "fault() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.fault"]], "fault() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.fault"]], "fault() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.fault"]], "fault() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.fault"]], "flush_db() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.flush_db"]], "from_dict() (cancelallorders static method)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.from_dict"]], "from_dict() (cancelorder static method)": [[12, "nautilus_trader.execution.messages.CancelOrder.from_dict"]], "from_dict() (modifyorder static method)": [[12, "nautilus_trader.execution.messages.ModifyOrder.from_dict"]], "from_dict() (queryorder static method)": [[12, "nautilus_trader.execution.messages.QueryOrder.from_dict"]], "from_dict() (submitorder static method)": [[12, "nautilus_trader.execution.messages.SubmitOrder.from_dict"]], "from_dict() (submitorderlist static method)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.from_dict"]], "fully_qualified_name() (execalgorithm class method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.fully_qualified_name"]], "fully_qualified_name() (executionclient class method)": [[12, "nautilus_trader.execution.client.ExecutionClient.fully_qualified_name"]], "fully_qualified_name() (executionengine class method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.fully_qualified_name"]], "fully_qualified_name() (orderemulator class method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.fully_qualified_name"]], "generate_account_state() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_account_state"]], "generate_order_accepted() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_accepted"]], "generate_order_cancel_rejected() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_cancel_rejected"]], "generate_order_canceled() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_canceled"]], "generate_order_expired() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_expired"]], "generate_order_filled() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_filled"]], "generate_order_modify_rejected() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_modify_rejected"]], "generate_order_rejected() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_rejected"]], "generate_order_submitted() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_submitted"]], "generate_order_triggered() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_triggered"]], "generate_order_updated() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_updated"]], "get_account() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.get_account"]], "get_external_order_claim() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.get_external_order_claim"]], "get_matching_core() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.get_matching_core"]], "get_order() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.get_order"]], "get_orders() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.get_orders"]], "get_orders_ask() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.get_orders_ask"]], "get_orders_bid() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.get_orders_bid"]], "get_submit_order_commands() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.get_submit_order_commands"]], "get_submit_order_list_commands() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.get_submit_order_list_commands"]], "handle_bar() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_bar"]], "handle_bar() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_bar"]], "handle_bars() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_bars"]], "handle_bars() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_bars"]], "handle_data() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_data"]], "handle_data() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_data"]], "handle_event() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_event"]], "handle_event() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_event"]], "handle_historical_data() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_historical_data"]], "handle_historical_data() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_historical_data"]], "handle_instrument() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_instrument"]], "handle_instrument() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_instrument"]], "handle_instrument_close() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_instrument_close"]], "handle_instrument_close() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_instrument_close"]], "handle_instrument_status_update() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_instrument_status_update"]], "handle_instrument_status_update() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_instrument_status_update"]], "handle_instruments() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_instruments"]], "handle_instruments() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_instruments"]], "handle_order_book() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_order_book"]], "handle_order_book() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_order_book"]], "handle_order_book_deltas() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_order_book_deltas"]], "handle_order_book_deltas() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_order_book_deltas"]], "handle_quote_tick() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_quote_tick"]], "handle_quote_tick() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_quote_tick"]], "handle_quote_ticks() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_quote_ticks"]], "handle_quote_ticks() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_quote_ticks"]], "handle_ticker() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_ticker"]], "handle_ticker() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_ticker"]], "handle_trade_tick() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_trade_tick"]], "handle_trade_tick() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_trade_tick"]], "handle_trade_ticks() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_trade_ticks"]], "handle_trade_ticks() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_trade_ticks"]], "handle_venue_status_update() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.handle_venue_status_update"]], "handle_venue_status_update() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.handle_venue_status_update"]], "has_emulated_order (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.has_emulated_order"]], "has_pending_requests() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.has_pending_requests"]], "has_pending_requests() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.has_pending_requests"]], "id (cancelallorders attribute)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.id"]], "id (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.id"]], "id (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.id"]], "id (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.id"]], "id (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.id"]], "id (executionmassstatus attribute)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.id"]], "id (executionreport attribute)": [[12, "nautilus_trader.execution.reports.ExecutionReport.id"]], "id (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.id"]], "id (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.id"]], "id (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.id"]], "id (positionstatusreport attribute)": [[12, "nautilus_trader.execution.reports.PositionStatusReport.id"]], "id (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.id"]], "id (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.id"]], "id (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.id"]], "id (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.id"]], "id (tradingcommand attribute)": [[12, "nautilus_trader.execution.messages.TradingCommand.id"]], "instrument_id (cancelallorders attribute)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.instrument_id"]], "instrument_id (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.instrument_id"]], "instrument_id (matchingcore attribute)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.instrument_id"]], "instrument_id (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.instrument_id"]], "instrument_id (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.instrument_id"]], "instrument_id (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.instrument_id"]], "instrument_id (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.instrument_id"]], "instrument_id (tradingcommand attribute)": [[12, "nautilus_trader.execution.messages.TradingCommand.instrument_id"]], "is_connected (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.is_connected"]], "is_degraded (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.is_degraded"]], "is_degraded (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.is_degraded"]], "is_degraded (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.is_degraded"]], "is_degraded (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.is_degraded"]], "is_disposed (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.is_disposed"]], "is_disposed (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.is_disposed"]], "is_disposed (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.is_disposed"]], "is_disposed (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.is_disposed"]], "is_faulted (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.is_faulted"]], "is_faulted (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.is_faulted"]], "is_faulted (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.is_faulted"]], "is_faulted (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.is_faulted"]], "is_initialized (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.is_initialized"]], "is_initialized (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.is_initialized"]], "is_initialized (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.is_initialized"]], "is_initialized (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.is_initialized"]], "is_limit_matched() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.is_limit_matched"]], "is_pending_request() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.is_pending_request"]], "is_pending_request() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.is_pending_request"]], "is_running (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.is_running"]], "is_running (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.is_running"]], "is_running (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.is_running"]], "is_running (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.is_running"]], "is_stop_triggered() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.is_stop_triggered"]], "is_stopped (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.is_stopped"]], "is_stopped (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.is_stopped"]], "is_stopped (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.is_stopped"]], "is_stopped (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.is_stopped"]], "is_touch_triggered() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.is_touch_triggered"]], "iterate() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.iterate"]], "last (matchingcore attribute)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.last"]], "load() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.load"]], "load() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.load"]], "load_cache() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.load_cache"]], "log (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.log"]], "log (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.log"]], "match_limit_if_touched_order() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.match_limit_if_touched_order"]], "match_limit_order() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.match_limit_order"]], "match_market_if_touched_order() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.match_market_if_touched_order"]], "match_order() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.match_order"]], "match_stop_limit_order() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.match_stop_limit_order"]], "match_stop_market_order() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.match_stop_market_order"]], "modify_order() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.modify_order"]], "modify_order() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.modify_order"]], "modify_order_in_place() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.modify_order_in_place"]], "msgbus (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.msgbus"]], "msgbus (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.msgbus"]], "nautilus_trader.execution": [[12, "module-nautilus_trader.execution"]], "nautilus_trader.execution.algorithm": [[12, "module-nautilus_trader.execution.algorithm"]], "nautilus_trader.execution.client": [[12, "module-nautilus_trader.execution.client"]], "nautilus_trader.execution.emulator": [[12, "module-nautilus_trader.execution.emulator"]], "nautilus_trader.execution.engine": [[12, "module-nautilus_trader.execution.engine"]], "nautilus_trader.execution.matching_core": [[12, "module-nautilus_trader.execution.matching_core"]], "nautilus_trader.execution.messages": [[12, "module-nautilus_trader.execution.messages"]], "nautilus_trader.execution.reports": [[12, "module-nautilus_trader.execution.reports"]], "oms_type (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.oms_type"]], "on_bar() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_bar"]], "on_bar() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_bar"]], "on_data() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_data"]], "on_data() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_data"]], "on_degrade() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_degrade"]], "on_degrade() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_degrade"]], "on_dispose() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_dispose"]], "on_dispose() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_dispose"]], "on_event() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_event"]], "on_event() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_event"]], "on_fault() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_fault"]], "on_fault() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_fault"]], "on_historical_data() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_historical_data"]], "on_historical_data() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_historical_data"]], "on_instrument() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_instrument"]], "on_instrument() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_instrument"]], "on_instrument_close() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_instrument_close"]], "on_instrument_close() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_instrument_close"]], "on_instrument_status_update() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_instrument_status_update"]], "on_instrument_status_update() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_instrument_status_update"]], "on_load() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_load"]], "on_load() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_load"]], "on_order() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_order"]], "on_order_book() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_order_book"]], "on_order_book() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_order_book"]], "on_order_book_deltas() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_order_book_deltas"]], "on_order_book_deltas() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_order_book_deltas"]], "on_order_event() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_order_event"]], "on_order_list() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_order_list"]], "on_quote_tick() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_quote_tick"]], "on_quote_tick() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_quote_tick"]], "on_reset() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_reset"]], "on_reset() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_reset"]], "on_resume() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_resume"]], "on_resume() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_resume"]], "on_save() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_save"]], "on_save() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_save"]], "on_start() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_start"]], "on_start() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_start"]], "on_stop() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_stop"]], "on_stop() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_stop"]], "on_ticker() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_ticker"]], "on_ticker() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_ticker"]], "on_trade_tick() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_trade_tick"]], "on_trade_tick() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_trade_tick"]], "on_venue_status_update() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.on_venue_status_update"]], "on_venue_status_update() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.on_venue_status_update"]], "order (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.order"]], "order_exists() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.order_exists"]], "order_list (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.order_list"]], "order_reports() (executionmassstatus method)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.order_reports"]], "order_side (cancelallorders attribute)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.order_side"]], "pending_requests() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.pending_requests"]], "pending_requests() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.pending_requests"]], "portfolio (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.portfolio"]], "position_id (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.position_id"]], "position_id (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.position_id"]], "position_id_count() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.position_id_count"]], "position_reports() (executionmassstatus method)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.position_reports"]], "price (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.price"]], "price_increment (matchingcore attribute)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.price_increment"]], "price_precision (matchingcore attribute)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.price_precision"]], "process() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.process"]], "publish_data() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.publish_data"]], "publish_data() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.publish_data"]], "publish_signal() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.publish_signal"]], "publish_signal() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.publish_signal"]], "quantity (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.quantity"]], "query_order() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.query_order"]], "reconcile_mass_status() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.reconcile_mass_status"]], "reconcile_report() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.reconcile_report"]], "reconcile_state() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.reconcile_state"]], "reconciliation (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.reconciliation"]], "register() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.register"]], "register_base() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.register_base"]], "register_base() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.register_base"]], "register_client() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.register_client"]], "register_default_client() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.register_default_client"]], "register_external_order_claims() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.register_external_order_claims"]], "register_oms_type() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.register_oms_type"]], "register_venue_routing() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.register_venue_routing"]], "register_warning_event() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.register_warning_event"]], "register_warning_event() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.register_warning_event"]], "registered_clients (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.registered_clients"]], "report_count (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.report_count"]], "request_bars() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.request_bars"]], "request_bars() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.request_bars"]], "request_data() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.request_data"]], "request_data() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.request_data"]], "request_instrument() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.request_instrument"]], "request_instrument() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.request_instrument"]], "request_instruments() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.request_instruments"]], "request_instruments() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.request_instruments"]], "request_quote_ticks() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.request_quote_ticks"]], "request_quote_ticks() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.request_quote_ticks"]], "request_trade_ticks() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.request_trade_ticks"]], "request_trade_ticks() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.request_trade_ticks"]], "reset() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.reset"]], "reset() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.reset"]], "reset() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.reset"]], "reset() (matchingcore method)": [[12, "nautilus_trader.execution.matching_core.MatchingCore.reset"]], "reset() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.reset"]], "resume() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.resume"]], "resume() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.resume"]], "resume() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.resume"]], "resume() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.resume"]], "save() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.save"]], "save() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.save"]], "spawn_limit() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.spawn_limit"]], "spawn_market() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.spawn_market"]], "spawn_market_to_limit() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.spawn_market_to_limit"]], "start() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.start"]], "start() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.start"]], "start() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.start"]], "start() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.start"]], "state (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.state"]], "state (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.state"]], "state (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.state"]], "state (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.state"]], "stop() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.stop"]], "stop() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.stop"]], "stop() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.stop"]], "stop() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.stop"]], "strategy_id (cancelallorders attribute)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.strategy_id"]], "strategy_id (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.strategy_id"]], "strategy_id (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.strategy_id"]], "strategy_id (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.strategy_id"]], "strategy_id (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.strategy_id"]], "strategy_id (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.strategy_id"]], "strategy_id (tradingcommand attribute)": [[12, "nautilus_trader.execution.messages.TradingCommand.strategy_id"]], "submit_order() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.submit_order"]], "submit_order() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.submit_order"]], "submit_order_list() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.submit_order_list"]], "subscribe_bars() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.subscribe_bars"]], "subscribe_bars() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.subscribe_bars"]], "subscribe_data() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.subscribe_data"]], "subscribe_data() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.subscribe_data"]], "subscribe_instrument() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.subscribe_instrument"]], "subscribe_instrument() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.subscribe_instrument"]], "subscribe_instrument_close() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.subscribe_instrument_close"]], "subscribe_instrument_close() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.subscribe_instrument_close"]], "subscribe_instrument_status_updates() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.subscribe_instrument_status_updates"]], "subscribe_instrument_status_updates() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.subscribe_instrument_status_updates"]], "subscribe_instruments() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.subscribe_instruments"]], "subscribe_instruments() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.subscribe_instruments"]], "subscribe_order_book_deltas() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.subscribe_order_book_deltas"]], "subscribe_order_book_deltas() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.subscribe_order_book_snapshots"]], "subscribe_order_book_snapshots() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.subscribe_quote_ticks"]], "subscribe_quote_ticks() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.subscribe_quote_ticks"]], "subscribe_ticker() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.subscribe_ticker"]], "subscribe_ticker() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.subscribe_ticker"]], "subscribe_trade_ticks() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.subscribe_trade_ticks"]], "subscribe_trade_ticks() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.subscribe_trade_ticks"]], "subscribe_venue_status_updates() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.subscribe_venue_status_updates"]], "subscribe_venue_status_updates() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.subscribe_venue_status_updates"]], "subscribed_quotes (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.subscribed_quotes"]], "subscribed_trades (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.subscribed_trades"]], "to_dict() (cancelallorders static method)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.to_dict"]], "to_dict() (cancelorder static method)": [[12, "nautilus_trader.execution.messages.CancelOrder.to_dict"]], "to_dict() (modifyorder static method)": [[12, "nautilus_trader.execution.messages.ModifyOrder.to_dict"]], "to_dict() (queryorder static method)": [[12, "nautilus_trader.execution.messages.QueryOrder.to_dict"]], "to_dict() (submitorder static method)": [[12, "nautilus_trader.execution.messages.SubmitOrder.to_dict"]], "to_dict() (submitorderlist static method)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.to_dict"]], "to_importable_config() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.to_importable_config"]], "to_importable_config() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.to_importable_config"]], "trade_reports() (executionmassstatus method)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.trade_reports"]], "trader_id (cancelallorders attribute)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.trader_id"]], "trader_id (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.trader_id"]], "trader_id (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.trader_id"]], "trader_id (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.trader_id"]], "trader_id (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.trader_id"]], "trader_id (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.trader_id"]], "trader_id (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.trader_id"]], "trader_id (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.trader_id"]], "trader_id (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.trader_id"]], "trader_id (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.trader_id"]], "trader_id (tradingcommand attribute)": [[12, "nautilus_trader.execution.messages.TradingCommand.trader_id"]], "trigger_price (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.trigger_price"]], "ts_init (cancelallorders attribute)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.ts_init"]], "ts_init (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.ts_init"]], "ts_init (executionmassstatus attribute)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.ts_init"]], "ts_init (executionreport attribute)": [[12, "nautilus_trader.execution.reports.ExecutionReport.ts_init"]], "ts_init (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.ts_init"]], "ts_init (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.ts_init"]], "ts_init (positionstatusreport attribute)": [[12, "nautilus_trader.execution.reports.PositionStatusReport.ts_init"]], "ts_init (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.ts_init"]], "ts_init (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.ts_init"]], "ts_init (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.ts_init"]], "ts_init (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.ts_init"]], "ts_init (tradingcommand attribute)": [[12, "nautilus_trader.execution.messages.TradingCommand.ts_init"]], "type (execalgorithm attribute)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.type"]], "type (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.type"]], "type (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.type"]], "type (orderemulator attribute)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.type"]], "unsubscribe_bars() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.unsubscribe_bars"]], "unsubscribe_bars() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.unsubscribe_bars"]], "unsubscribe_data() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.unsubscribe_data"]], "unsubscribe_data() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.unsubscribe_data"]], "unsubscribe_instrument() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.unsubscribe_instrument"]], "unsubscribe_instrument() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.unsubscribe_instrument"]], "unsubscribe_instrument_status_updates() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.unsubscribe_instrument_status_updates"]], "unsubscribe_instrument_status_updates() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.unsubscribe_instrument_status_updates"]], "unsubscribe_instruments() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.unsubscribe_instruments"]], "unsubscribe_instruments() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_deltas() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.unsubscribe_order_book_snapshots"]], "unsubscribe_order_book_snapshots() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.unsubscribe_quote_ticks"]], "unsubscribe_quote_ticks() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.unsubscribe_ticker"]], "unsubscribe_ticker() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.unsubscribe_trade_ticks"]], "unsubscribe_trade_ticks() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.unsubscribe_trade_ticks"]], "unsubscribe_venue_status_updates() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.unsubscribe_venue_status_updates"]], "unsubscribe_venue_status_updates() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.unsubscribe_venue_status_updates"]], "update_synthetic() (execalgorithm method)": [[12, "nautilus_trader.execution.algorithm.ExecAlgorithm.update_synthetic"]], "update_synthetic() (orderemulator method)": [[12, "nautilus_trader.execution.emulator.OrderEmulator.update_synthetic"]], "venue (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.venue"]], "venue_order_id (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.venue_order_id"]], "venue_order_id (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.venue_order_id"]], "venue_order_id (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.venue_order_id"]], "adaptivemovingaverage (class in nautilus_trader.indicators.average.ama)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage"]], "averagetruerange (class in nautilus_trader.indicators.atr)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange"]], "bollingerbands (class in nautilus_trader.indicators.bollinger_bands)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands"]], "donchianchannel (class in nautilus_trader.indicators.donchian_channel)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel"]], "efficiencyratio (class in nautilus_trader.indicators.efficiency_ratio)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio"]], "exponentialmovingaverage (class in nautilus_trader.indicators.average.ema)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage"]], "fuzzycandle (class in nautilus_trader.indicators.fuzzy_candlesticks)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandle"]], "fuzzycandlesticks (class in nautilus_trader.indicators.fuzzy_candlesticks)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks"]], "hullmovingaverage (class in nautilus_trader.indicators.average.hma)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage"]], "indicator (class in nautilus_trader.indicators.base.indicator)": [[14, "nautilus_trader.indicators.base.indicator.Indicator"]], "keltnerchannel (class in nautilus_trader.indicators.keltner_channel)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel"]], "keltnerposition (class in nautilus_trader.indicators.keltner_position)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition"]], "movingaverage (class in nautilus_trader.indicators.average.moving_average)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage"]], "movingaverageconvergencedivergence (class in nautilus_trader.indicators.macd)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence"]], "movingaveragefactory (class in nautilus_trader.indicators.average.ma_factory)": [[14, "nautilus_trader.indicators.average.ma_factory.MovingAverageFactory"]], "movingaveragetype (class in nautilus_trader.indicators.average.moving_average)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverageType"]], "onbalancevolume (class in nautilus_trader.indicators.obv)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume"]], "pressure (class in nautilus_trader.indicators.pressure)": [[14, "nautilus_trader.indicators.pressure.Pressure"]], "rateofchange (class in nautilus_trader.indicators.roc)": [[14, "nautilus_trader.indicators.roc.RateOfChange"]], "relativestrengthindex (class in nautilus_trader.indicators.rsi)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex"]], "simplemovingaverage (class in nautilus_trader.indicators.average.sma)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage"]], "spreadanalyzer (class in nautilus_trader.indicators.spread_analyzer)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer"]], "stochastics (class in nautilus_trader.indicators.stochastics)": [[14, "nautilus_trader.indicators.stochastics.Stochastics"]], "swings (class in nautilus_trader.indicators.swings)": [[14, "nautilus_trader.indicators.swings.Swings"]], "volatilityratio (class in nautilus_trader.indicators.volatility_ratio)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio"]], "volumeweightedaverageprice (class in nautilus_trader.indicators.vwap)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice"]], "weightedmovingaverage (class in nautilus_trader.indicators.average.wma)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage"]], "alpha (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.alpha"]], "alpha_diff (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.alpha_diff"]], "alpha_fast (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.alpha_fast"]], "alpha_slow (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.alpha_slow"]], "average (spreadanalyzer attribute)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.average"]], "body_size (fuzzycandle attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandle.body_size"]], "capacity (spreadanalyzer attribute)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.capacity"]], "changed (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.changed"]], "count (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.count"]], "count (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.count"]], "count (hullmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.count"]], "count (movingaverage attribute)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.count"]], "count (simplemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.count"]], "count (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.count"]], "create() (movingaveragefactory static method)": [[14, "nautilus_trader.indicators.average.ma_factory.MovingAverageFactory.create"]], "current (spreadanalyzer attribute)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.current"]], "direction (fuzzycandle attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandle.direction"]], "direction (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.direction"]], "duration (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.duration"]], "fast_period (movingaverageconvergencedivergence attribute)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.fast_period"]], "fast_period (volatilityratio attribute)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.fast_period"]], "handle_bar() (adaptivemovingaverage method)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.handle_bar"]], "handle_bar() (averagetruerange method)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.handle_bar"]], "handle_bar() (bollingerbands method)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.handle_bar"]], "handle_bar() (donchianchannel method)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.handle_bar"]], "handle_bar() (efficiencyratio method)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.handle_bar"]], "handle_bar() (exponentialmovingaverage method)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.handle_bar"]], "handle_bar() (fuzzycandlesticks method)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.handle_bar"]], "handle_bar() (hullmovingaverage method)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.handle_bar"]], "handle_bar() (indicator method)": [[14, "nautilus_trader.indicators.base.indicator.Indicator.handle_bar"]], "handle_bar() (keltnerchannel method)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.handle_bar"]], "handle_bar() (keltnerposition method)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.handle_bar"]], "handle_bar() (movingaverage method)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.handle_bar"]], "handle_bar() (movingaverageconvergencedivergence method)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.handle_bar"]], "handle_bar() (onbalancevolume method)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.handle_bar"]], "handle_bar() (pressure method)": [[14, "nautilus_trader.indicators.pressure.Pressure.handle_bar"]], "handle_bar() (rateofchange method)": [[14, "nautilus_trader.indicators.roc.RateOfChange.handle_bar"]], "handle_bar() (relativestrengthindex method)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.handle_bar"]], "handle_bar() (simplemovingaverage method)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.handle_bar"]], "handle_bar() (spreadanalyzer method)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.handle_bar"]], "handle_bar() (stochastics method)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.handle_bar"]], "handle_bar() (swings method)": [[14, "nautilus_trader.indicators.swings.Swings.handle_bar"]], "handle_bar() (volatilityratio method)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.handle_bar"]], "handle_bar() (volumeweightedaverageprice method)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.handle_bar"]], "handle_bar() (weightedmovingaverage method)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.handle_bar"]], "handle_quote_tick() (adaptivemovingaverage method)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.handle_quote_tick"]], "handle_quote_tick() (averagetruerange method)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.handle_quote_tick"]], "handle_quote_tick() (bollingerbands method)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.handle_quote_tick"]], "handle_quote_tick() (donchianchannel method)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.handle_quote_tick"]], "handle_quote_tick() (efficiencyratio method)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.handle_quote_tick"]], "handle_quote_tick() (exponentialmovingaverage method)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.handle_quote_tick"]], "handle_quote_tick() (fuzzycandlesticks method)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.handle_quote_tick"]], "handle_quote_tick() (hullmovingaverage method)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.handle_quote_tick"]], "handle_quote_tick() (indicator method)": [[14, "nautilus_trader.indicators.base.indicator.Indicator.handle_quote_tick"]], "handle_quote_tick() (keltnerchannel method)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.handle_quote_tick"]], "handle_quote_tick() (keltnerposition method)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.handle_quote_tick"]], "handle_quote_tick() (movingaverage method)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.handle_quote_tick"]], "handle_quote_tick() (movingaverageconvergencedivergence method)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.handle_quote_tick"]], "handle_quote_tick() (onbalancevolume method)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.handle_quote_tick"]], "handle_quote_tick() (pressure method)": [[14, "nautilus_trader.indicators.pressure.Pressure.handle_quote_tick"]], "handle_quote_tick() (rateofchange method)": [[14, "nautilus_trader.indicators.roc.RateOfChange.handle_quote_tick"]], "handle_quote_tick() (relativestrengthindex method)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.handle_quote_tick"]], "handle_quote_tick() (simplemovingaverage method)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.handle_quote_tick"]], "handle_quote_tick() (spreadanalyzer method)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.handle_quote_tick"]], "handle_quote_tick() (stochastics method)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.handle_quote_tick"]], "handle_quote_tick() (swings method)": [[14, "nautilus_trader.indicators.swings.Swings.handle_quote_tick"]], "handle_quote_tick() (volatilityratio method)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.handle_quote_tick"]], "handle_quote_tick() (volumeweightedaverageprice method)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.handle_quote_tick"]], "handle_quote_tick() (weightedmovingaverage method)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.handle_quote_tick"]], "handle_trade_tick() (adaptivemovingaverage method)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.handle_trade_tick"]], "handle_trade_tick() (averagetruerange method)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.handle_trade_tick"]], "handle_trade_tick() (bollingerbands method)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.handle_trade_tick"]], "handle_trade_tick() (donchianchannel method)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.handle_trade_tick"]], "handle_trade_tick() (efficiencyratio method)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.handle_trade_tick"]], "handle_trade_tick() (exponentialmovingaverage method)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.handle_trade_tick"]], "handle_trade_tick() (fuzzycandlesticks method)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.handle_trade_tick"]], "handle_trade_tick() (hullmovingaverage method)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.handle_trade_tick"]], "handle_trade_tick() (indicator method)": [[14, "nautilus_trader.indicators.base.indicator.Indicator.handle_trade_tick"]], "handle_trade_tick() (keltnerchannel method)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.handle_trade_tick"]], "handle_trade_tick() (keltnerposition method)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.handle_trade_tick"]], "handle_trade_tick() (movingaverage method)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.handle_trade_tick"]], "handle_trade_tick() (movingaverageconvergencedivergence method)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.handle_trade_tick"]], "handle_trade_tick() (onbalancevolume method)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.handle_trade_tick"]], "handle_trade_tick() (pressure method)": [[14, "nautilus_trader.indicators.pressure.Pressure.handle_trade_tick"]], "handle_trade_tick() (rateofchange method)": [[14, "nautilus_trader.indicators.roc.RateOfChange.handle_trade_tick"]], "handle_trade_tick() (relativestrengthindex method)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.handle_trade_tick"]], "handle_trade_tick() (simplemovingaverage method)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.handle_trade_tick"]], "handle_trade_tick() (spreadanalyzer method)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.handle_trade_tick"]], "handle_trade_tick() (stochastics method)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.handle_trade_tick"]], "handle_trade_tick() (swings method)": [[14, "nautilus_trader.indicators.swings.Swings.handle_trade_tick"]], "handle_trade_tick() (volatilityratio method)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.handle_trade_tick"]], "handle_trade_tick() (volumeweightedaverageprice method)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.handle_trade_tick"]], "handle_trade_tick() (weightedmovingaverage method)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.handle_trade_tick"]], "has_inputs (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.has_inputs"]], "has_inputs (averagetruerange attribute)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.has_inputs"]], "has_inputs (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.has_inputs"]], "has_inputs (donchianchannel attribute)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.has_inputs"]], "has_inputs (efficiencyratio attribute)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.has_inputs"]], "has_inputs (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.has_inputs"]], "has_inputs (fuzzycandlesticks attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.has_inputs"]], "has_inputs (hullmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.has_inputs"]], "has_inputs (indicator attribute)": [[14, "nautilus_trader.indicators.base.indicator.Indicator.has_inputs"]], "has_inputs (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.has_inputs"]], "has_inputs (keltnerposition attribute)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.has_inputs"]], "has_inputs (movingaverage attribute)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.has_inputs"]], "has_inputs (movingaverageconvergencedivergence attribute)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.has_inputs"]], "has_inputs (onbalancevolume attribute)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.has_inputs"]], "has_inputs (pressure attribute)": [[14, "nautilus_trader.indicators.pressure.Pressure.has_inputs"]], "has_inputs (rateofchange attribute)": [[14, "nautilus_trader.indicators.roc.RateOfChange.has_inputs"]], "has_inputs (relativestrengthindex attribute)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.has_inputs"]], "has_inputs (simplemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.has_inputs"]], "has_inputs (spreadanalyzer attribute)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.has_inputs"]], "has_inputs (stochastics attribute)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.has_inputs"]], "has_inputs (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.has_inputs"]], "has_inputs (volatilityratio attribute)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.has_inputs"]], "has_inputs (volumeweightedaverageprice attribute)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.has_inputs"]], "has_inputs (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.has_inputs"]], "high_datetime (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.high_datetime"]], "high_price (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.high_price"]], "initialized (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.initialized"]], "initialized (averagetruerange attribute)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.initialized"]], "initialized (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.initialized"]], "initialized (donchianchannel attribute)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.initialized"]], "initialized (efficiencyratio attribute)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.initialized"]], "initialized (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.initialized"]], "initialized (fuzzycandlesticks attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.initialized"]], "initialized (hullmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.initialized"]], "initialized (indicator attribute)": [[14, "nautilus_trader.indicators.base.indicator.Indicator.initialized"]], "initialized (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.initialized"]], "initialized (keltnerposition attribute)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.initialized"]], "initialized (movingaverage attribute)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.initialized"]], "initialized (movingaverageconvergencedivergence attribute)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.initialized"]], "initialized (onbalancevolume attribute)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.initialized"]], "initialized (pressure attribute)": [[14, "nautilus_trader.indicators.pressure.Pressure.initialized"]], "initialized (rateofchange attribute)": [[14, "nautilus_trader.indicators.roc.RateOfChange.initialized"]], "initialized (relativestrengthindex attribute)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.initialized"]], "initialized (simplemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.initialized"]], "initialized (spreadanalyzer attribute)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.initialized"]], "initialized (stochastics attribute)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.initialized"]], "initialized (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.initialized"]], "initialized (volatilityratio attribute)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.initialized"]], "initialized (volumeweightedaverageprice attribute)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.initialized"]], "initialized (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.initialized"]], "instrument_id (spreadanalyzer attribute)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.instrument_id"]], "k (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.k"]], "k_multiplier (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.k_multiplier"]], "k_multiplier (keltnerposition attribute)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.k_multiplier"]], "length (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.length"]], "low_datetime (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.low_datetime"]], "low_price (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.low_price"]], "lower (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.lower"]], "lower (donchianchannel attribute)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.lower"]], "lower (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.lower"]], "lower_wick_size (fuzzycandle attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandle.lower_wick_size"]], "middle (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.middle"]], "middle (donchianchannel attribute)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.middle"]], "middle (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.middle"]], "name (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.name"]], "name (averagetruerange attribute)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.name"]], "name (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.name"]], "name (donchianchannel attribute)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.name"]], "name (efficiencyratio attribute)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.name"]], "name (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.name"]], "name (fuzzycandlesticks attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.name"]], "name (hullmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.name"]], "name (indicator attribute)": [[14, "nautilus_trader.indicators.base.indicator.Indicator.name"]], "name (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.name"]], "name (keltnerposition attribute)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.name"]], "name (movingaverage attribute)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.name"]], "name (movingaverageconvergencedivergence attribute)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.name"]], "name (onbalancevolume attribute)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.name"]], "name (pressure attribute)": [[14, "nautilus_trader.indicators.pressure.Pressure.name"]], "name (rateofchange attribute)": [[14, "nautilus_trader.indicators.roc.RateOfChange.name"]], "name (relativestrengthindex attribute)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.name"]], "name (simplemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.name"]], "name (spreadanalyzer attribute)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.name"]], "name (stochastics attribute)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.name"]], "name (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.name"]], "name (volatilityratio attribute)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.name"]], "name (volumeweightedaverageprice attribute)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.name"]], "name (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.name"]], "nautilus_trader.indicators": [[14, "module-nautilus_trader.indicators"]], "nautilus_trader.indicators.atr": [[14, "module-nautilus_trader.indicators.atr"]], "nautilus_trader.indicators.average.ama": [[14, "module-nautilus_trader.indicators.average.ama"]], "nautilus_trader.indicators.average.ema": [[14, "module-nautilus_trader.indicators.average.ema"]], "nautilus_trader.indicators.average.hma": [[14, "module-nautilus_trader.indicators.average.hma"]], "nautilus_trader.indicators.average.ma_factory": [[14, "module-nautilus_trader.indicators.average.ma_factory"]], "nautilus_trader.indicators.average.moving_average": [[14, "module-nautilus_trader.indicators.average.moving_average"]], "nautilus_trader.indicators.average.sma": [[14, "module-nautilus_trader.indicators.average.sma"]], "nautilus_trader.indicators.average.wma": [[14, "module-nautilus_trader.indicators.average.wma"]], "nautilus_trader.indicators.base.indicator": [[14, "module-nautilus_trader.indicators.base.indicator"]], "nautilus_trader.indicators.bollinger_bands": [[14, "module-nautilus_trader.indicators.bollinger_bands"]], "nautilus_trader.indicators.donchian_channel": [[14, "module-nautilus_trader.indicators.donchian_channel"]], "nautilus_trader.indicators.efficiency_ratio": [[14, "module-nautilus_trader.indicators.efficiency_ratio"]], "nautilus_trader.indicators.fuzzy_candlesticks": [[14, "module-nautilus_trader.indicators.fuzzy_candlesticks"]], "nautilus_trader.indicators.keltner_channel": [[14, "module-nautilus_trader.indicators.keltner_channel"]], "nautilus_trader.indicators.keltner_position": [[14, "module-nautilus_trader.indicators.keltner_position"]], "nautilus_trader.indicators.macd": [[14, "module-nautilus_trader.indicators.macd"]], "nautilus_trader.indicators.obv": [[14, "module-nautilus_trader.indicators.obv"]], "nautilus_trader.indicators.pressure": [[14, "module-nautilus_trader.indicators.pressure"]], "nautilus_trader.indicators.roc": [[14, "module-nautilus_trader.indicators.roc"]], "nautilus_trader.indicators.rsi": [[14, "module-nautilus_trader.indicators.rsi"]], "nautilus_trader.indicators.spread_analyzer": [[14, "module-nautilus_trader.indicators.spread_analyzer"]], "nautilus_trader.indicators.stochastics": [[14, "module-nautilus_trader.indicators.stochastics"]], "nautilus_trader.indicators.swings": [[14, "module-nautilus_trader.indicators.swings"]], "nautilus_trader.indicators.volatility_ratio": [[14, "module-nautilus_trader.indicators.volatility_ratio"]], "nautilus_trader.indicators.vwap": [[14, "module-nautilus_trader.indicators.vwap"]], "period (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.period"]], "period (averagetruerange attribute)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.period"]], "period (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.period"]], "period (donchianchannel attribute)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.period"]], "period (efficiencyratio attribute)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.period"]], "period (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.period"]], "period (fuzzycandlesticks attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.period"]], "period (hullmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.period"]], "period (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.period"]], "period (keltnerposition attribute)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.period"]], "period (movingaverage attribute)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.period"]], "period (onbalancevolume attribute)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.period"]], "period (pressure attribute)": [[14, "nautilus_trader.indicators.pressure.Pressure.period"]], "period (rateofchange attribute)": [[14, "nautilus_trader.indicators.roc.RateOfChange.period"]], "period (relativestrengthindex attribute)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.period"]], "period (simplemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.period"]], "period (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.period"]], "period (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.period"]], "period_alpha_fast (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.period_alpha_fast"]], "period_alpha_slow (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.period_alpha_slow"]], "period_d (stochastics attribute)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.period_d"]], "period_er (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.period_er"]], "period_k (stochastics attribute)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.period_k"]], "price_type (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.price_type"]], "price_type (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.price_type"]], "price_type (hullmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.price_type"]], "price_type (movingaverage attribute)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.price_type"]], "price_type (movingaverageconvergencedivergence attribute)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.price_type"]], "price_type (simplemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.price_type"]], "price_type (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.price_type"]], "reset() (adaptivemovingaverage method)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.reset"]], "reset() (averagetruerange method)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.reset"]], "reset() (bollingerbands method)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.reset"]], "reset() (donchianchannel method)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.reset"]], "reset() (efficiencyratio method)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.reset"]], "reset() (exponentialmovingaverage method)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.reset"]], "reset() (fuzzycandlesticks method)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.reset"]], "reset() (hullmovingaverage method)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.reset"]], "reset() (indicator method)": [[14, "nautilus_trader.indicators.base.indicator.Indicator.reset"]], "reset() (keltnerchannel method)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.reset"]], "reset() (keltnerposition method)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.reset"]], "reset() (movingaverage method)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.reset"]], "reset() (movingaverageconvergencedivergence method)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.reset"]], "reset() (onbalancevolume method)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.reset"]], "reset() (pressure method)": [[14, "nautilus_trader.indicators.pressure.Pressure.reset"]], "reset() (rateofchange method)": [[14, "nautilus_trader.indicators.roc.RateOfChange.reset"]], "reset() (relativestrengthindex method)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.reset"]], "reset() (simplemovingaverage method)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.reset"]], "reset() (spreadanalyzer method)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.reset"]], "reset() (stochastics method)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.reset"]], "reset() (swings method)": [[14, "nautilus_trader.indicators.swings.Swings.reset"]], "reset() (volatilityratio method)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.reset"]], "reset() (volumeweightedaverageprice method)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.reset"]], "reset() (weightedmovingaverage method)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.reset"]], "since_high (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.since_high"]], "since_low (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.since_low"]], "size (fuzzycandle attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandle.size"]], "slow_period (movingaverageconvergencedivergence attribute)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.slow_period"]], "slow_period (volatilityratio attribute)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.slow_period"]], "update_raw() (adaptivemovingaverage method)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.update_raw"]], "update_raw() (averagetruerange method)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.update_raw"]], "update_raw() (bollingerbands method)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.update_raw"]], "update_raw() (donchianchannel method)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.update_raw"]], "update_raw() (efficiencyratio method)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.update_raw"]], "update_raw() (exponentialmovingaverage method)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.update_raw"]], "update_raw() (fuzzycandlesticks method)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.update_raw"]], "update_raw() (hullmovingaverage method)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.update_raw"]], "update_raw() (keltnerchannel method)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.update_raw"]], "update_raw() (keltnerposition method)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.update_raw"]], "update_raw() (movingaverage method)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.update_raw"]], "update_raw() (movingaverageconvergencedivergence method)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.update_raw"]], "update_raw() (onbalancevolume method)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.update_raw"]], "update_raw() (pressure method)": [[14, "nautilus_trader.indicators.pressure.Pressure.update_raw"]], "update_raw() (rateofchange method)": [[14, "nautilus_trader.indicators.roc.RateOfChange.update_raw"]], "update_raw() (relativestrengthindex method)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.update_raw"]], "update_raw() (simplemovingaverage method)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.update_raw"]], "update_raw() (stochastics method)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.update_raw"]], "update_raw() (swings method)": [[14, "nautilus_trader.indicators.swings.Swings.update_raw"]], "update_raw() (volatilityratio method)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.update_raw"]], "update_raw() (volumeweightedaverageprice method)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.update_raw"]], "update_raw() (weightedmovingaverage method)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.update_raw"]], "upper (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.upper"]], "upper (donchianchannel attribute)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.upper"]], "upper (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.upper"]], "upper_wick_size (fuzzycandle attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandle.upper_wick_size"]], "value (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.value"]], "value (averagetruerange attribute)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.value"]], "value (efficiencyratio attribute)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.value"]], "value (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.value"]], "value (fuzzycandlesticks attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.value"]], "value (hullmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.value"]], "value (keltnerposition attribute)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.value"]], "value (movingaverage attribute)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.value"]], "value (movingaverageconvergencedivergence attribute)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.value"]], "value (onbalancevolume attribute)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.value"]], "value (pressure attribute)": [[14, "nautilus_trader.indicators.pressure.Pressure.value"]], "value (rateofchange attribute)": [[14, "nautilus_trader.indicators.roc.RateOfChange.value"]], "value (relativestrengthindex attribute)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.value"]], "value (simplemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.value"]], "value (volatilityratio attribute)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.value"]], "value (volumeweightedaverageprice attribute)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.value"]], "value (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.value"]], "value_cumulative (pressure attribute)": [[14, "nautilus_trader.indicators.pressure.Pressure.value_cumulative"]], "value_d (stochastics attribute)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.value_d"]], "value_k (stochastics attribute)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.value_k"]], "vector (fuzzycandlesticks attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.vector"]], "weights (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.weights"]], "rediscachedatabase (class in nautilus_trader.infrastructure.cache)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase"]], "add() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add"]], "add_account() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add_account"]], "add_currency() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add_currency"]], "add_instrument() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add_instrument"]], "add_order() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add_order"]], "add_position() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add_position"]], "add_submit_order_command() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add_submit_order_command"]], "add_submit_order_list_command() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add_submit_order_list_command"]], "add_synthetic() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add_synthetic"]], "delete_actor() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.delete_actor"]], "delete_strategy() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.delete_strategy"]], "flush() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.flush"]], "load() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load"]], "load_account() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_account"]], "load_accounts() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_accounts"]], "load_actor() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_actor"]], "load_currencies() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_currencies"]], "load_currency() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_currency"]], "load_instrument() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_instrument"]], "load_instruments() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_instruments"]], "load_order() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_order"]], "load_orders() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_orders"]], "load_position() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_position"]], "load_positions() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_positions"]], "load_strategy() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_strategy"]], "load_submit_order_command() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_submit_order_command"]], "load_submit_order_commands() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_submit_order_commands"]], "load_submit_order_list_command() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_submit_order_list_command"]], "load_submit_order_list_commands() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_submit_order_list_commands"]], "load_synthetic() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_synthetic"]], "load_synthetics() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_synthetics"]], "nautilus_trader.infrastructure": [[15, "module-nautilus_trader.infrastructure"]], "nautilus_trader.infrastructure.cache": [[15, "module-nautilus_trader.infrastructure.cache"]], "update_account() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.update_account"]], "update_actor() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.update_actor"]], "update_order() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.update_order"]], "update_position() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.update_position"]], "update_strategy() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.update_strategy"]], "livedataclient (class in nautilus_trader.live.data_client)": [[16, "nautilus_trader.live.data_client.LiveDataClient"]], "livedataengine (class in nautilus_trader.live.data_engine)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine"]], "liveexecutionclient (class in nautilus_trader.live.execution_client)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient"]], "liveexecutionengine (class in nautilus_trader.live.execution_engine)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine"]], "livemarketdataclient (class in nautilus_trader.live.data_client)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient"]], "liveriskengine (class in nautilus_trader.live.risk_engine)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine"]], "tradingnode (class in nautilus_trader.live.node)": [[16, "nautilus_trader.live.node.TradingNode"]], "tradingnodebuilder (class in nautilus_trader.live.node_builder)": [[16, "nautilus_trader.live.node_builder.TradingNodeBuilder"]], "account_id (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.account_id"]], "account_type (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.account_type"]], "add_data_client_factory() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.add_data_client_factory"]], "add_data_client_factory() (tradingnodebuilder method)": [[16, "nautilus_trader.live.node_builder.TradingNodeBuilder.add_data_client_factory"]], "add_exec_client_factory() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.add_exec_client_factory"]], "add_exec_client_factory() (tradingnodebuilder method)": [[16, "nautilus_trader.live.node_builder.TradingNodeBuilder.add_exec_client_factory"]], "allow_cash_positions (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.allow_cash_positions"]], "base_currency (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.base_currency"]], "build() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.build"]], "build_data_clients() (tradingnodebuilder method)": [[16, "nautilus_trader.live.node_builder.TradingNodeBuilder.build_data_clients"]], "build_exec_clients() (tradingnodebuilder method)": [[16, "nautilus_trader.live.node_builder.TradingNodeBuilder.build_exec_clients"]], "cache (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.cache"]], "cancel_all_orders() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.cancel_all_orders"]], "cancel_order() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.cancel_order"]], "check_connected() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.check_connected"]], "check_connected() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.check_connected"]], "check_disconnected() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.check_disconnected"]], "check_disconnected() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.check_disconnected"]], "check_integrity() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.check_integrity"]], "check_residuals() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.check_residuals"]], "cmd_qsize() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.cmd_qsize"]], "cmd_qsize() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.cmd_qsize"]], "cmd_qsize() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.cmd_qsize"]], "command_count (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.command_count"]], "command_count (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.command_count"]], "command_count (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.command_count"]], "connect() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.connect"]], "connect() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.connect"]], "connect() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.connect"]], "connect() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.connect"]], "connect() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.connect"]], "create_task() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.create_task"]], "create_task() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.create_task"]], "create_task() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.create_task"]], "data_count (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.data_count"]], "data_qsize() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.data_qsize"]], "debug (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.debug"]], "debug (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.debug"]], "debug (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.debug"]], "default_client (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.default_client"]], "default_client (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.default_client"]], "degrade() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.degrade"]], "degrade() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.degrade"]], "degrade() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.degrade"]], "degrade() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.degrade"]], "degrade() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.degrade"]], "degrade() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.degrade"]], "deregister_client() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.deregister_client"]], "deregister_client() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.deregister_client"]], "disconnect() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.disconnect"]], "disconnect() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.disconnect"]], "disconnect() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.disconnect"]], "disconnect() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.disconnect"]], "disconnect() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.disconnect"]], "dispose() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.dispose"]], "dispose() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.dispose"]], "dispose() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.dispose"]], "dispose() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.dispose"]], "dispose() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.dispose"]], "dispose() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.dispose"]], "dispose() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.dispose"]], "event_count (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.event_count"]], "event_count (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.event_count"]], "evt_qsize() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.evt_qsize"]], "evt_qsize() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.evt_qsize"]], "execute() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.execute"]], "execute() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.execute"]], "execute() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.execute"]], "fault() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.fault"]], "fault() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.fault"]], "fault() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.fault"]], "fault() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.fault"]], "fault() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.fault"]], "fault() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.fault"]], "flush_db() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.flush_db"]], "fully_qualified_name() (livedataclient class method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.fully_qualified_name"]], "fully_qualified_name() (livedataengine class method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.fully_qualified_name"]], "fully_qualified_name() (liveexecutionclient class method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.fully_qualified_name"]], "fully_qualified_name() (liveexecutionengine class method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.fully_qualified_name"]], "fully_qualified_name() (livemarketdataclient class method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.fully_qualified_name"]], "fully_qualified_name() (liveriskengine class method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.fully_qualified_name"]], "generate_account_state() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_account_state"]], "generate_mass_status() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_mass_status"]], "generate_order_accepted() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_accepted"]], "generate_order_cancel_rejected() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_cancel_rejected"]], "generate_order_canceled() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_canceled"]], "generate_order_expired() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_expired"]], "generate_order_filled() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_filled"]], "generate_order_modify_rejected() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_modify_rejected"]], "generate_order_rejected() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_rejected"]], "generate_order_status_report() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_status_report"]], "generate_order_status_reports() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_status_reports"]], "generate_order_submitted() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_submitted"]], "generate_order_triggered() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_triggered"]], "generate_order_updated() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_updated"]], "generate_position_status_reports() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_position_status_reports"]], "generate_trade_reports() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_trade_reports"]], "get_account() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.get_account"]], "get_cmd_queue_task() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.get_cmd_queue_task"]], "get_cmd_queue_task() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.get_cmd_queue_task"]], "get_cmd_queue_task() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.get_cmd_queue_task"]], "get_data_queue_task() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.get_data_queue_task"]], "get_event_loop() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.get_event_loop"]], "get_evt_queue_task() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.get_evt_queue_task"]], "get_evt_queue_task() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.get_evt_queue_task"]], "get_external_order_claim() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.get_external_order_claim"]], "get_inflight_check_task() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.get_inflight_check_task"]], "get_logger() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.get_logger"]], "get_req_queue_task() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.get_req_queue_task"]], "get_res_queue_task() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.get_res_queue_task"]], "id (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.id"]], "id (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.id"]], "id (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.id"]], "id (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.id"]], "id (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.id"]], "id (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.id"]], "instance_id (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.instance_id"]], "is_built (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.is_built"]], "is_bypassed (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.is_bypassed"]], "is_connected (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.is_connected"]], "is_connected (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.is_connected"]], "is_connected (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.is_connected"]], "is_degraded (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.is_degraded"]], "is_degraded (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.is_degraded"]], "is_degraded (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.is_degraded"]], "is_degraded (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.is_degraded"]], "is_degraded (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.is_degraded"]], "is_degraded (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.is_degraded"]], "is_disposed (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.is_disposed"]], "is_disposed (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.is_disposed"]], "is_disposed (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.is_disposed"]], "is_disposed (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.is_disposed"]], "is_disposed (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.is_disposed"]], "is_disposed (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.is_disposed"]], "is_faulted (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.is_faulted"]], "is_faulted (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.is_faulted"]], "is_faulted (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.is_faulted"]], "is_faulted (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.is_faulted"]], "is_faulted (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.is_faulted"]], "is_faulted (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.is_faulted"]], "is_initialized (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.is_initialized"]], "is_initialized (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.is_initialized"]], "is_initialized (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.is_initialized"]], "is_initialized (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.is_initialized"]], "is_initialized (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.is_initialized"]], "is_initialized (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.is_initialized"]], "is_running (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.is_running"]], "is_running (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.is_running"]], "is_running (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.is_running"]], "is_running (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.is_running"]], "is_running (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.is_running"]], "is_running (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.is_running"]], "is_running (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.is_running"]], "is_stopped (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.is_stopped"]], "is_stopped (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.is_stopped"]], "is_stopped (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.is_stopped"]], "is_stopped (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.is_stopped"]], "is_stopped (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.is_stopped"]], "is_stopped (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.is_stopped"]], "kill() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.kill"]], "kill() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.kill"]], "kill() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.kill"]], "load_cache() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.load_cache"]], "machine_id (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.machine_id"]], "max_notional_per_order() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.max_notional_per_order"]], "max_notionals_per_order() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.max_notionals_per_order"]], "max_order_modify_rate() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.max_order_modify_rate"]], "max_order_submit_rate() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.max_order_submit_rate"]], "modify_order() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.modify_order"]], "nautilus_trader.live": [[16, "module-nautilus_trader.live"]], "nautilus_trader.live.data_client": [[16, "module-nautilus_trader.live.data_client"]], "nautilus_trader.live.data_engine": [[16, "module-nautilus_trader.live.data_engine"]], "nautilus_trader.live.execution_client": [[16, "module-nautilus_trader.live.execution_client"]], "nautilus_trader.live.execution_engine": [[16, "module-nautilus_trader.live.execution_engine"]], "nautilus_trader.live.node": [[16, "module-nautilus_trader.live.node"]], "nautilus_trader.live.node_builder": [[16, "module-nautilus_trader.live.node_builder"]], "nautilus_trader.live.risk_engine": [[16, "module-nautilus_trader.live.risk_engine"]], "oms_type (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.oms_type"]], "portfolio (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.portfolio"]], "position_id_count() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.position_id_count"]], "process() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.process"]], "process() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.process"]], "process() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.process"]], "query_order() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.query_order"]], "reconcile_mass_status() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.reconcile_mass_status"]], "reconcile_report() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.reconcile_report"]], "reconcile_state() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.reconcile_state"]], "reconciliation (liveexecutionengine property)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.reconciliation"]], "register_catalog() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.register_catalog"]], "register_client() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.register_client"]], "register_client() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.register_client"]], "register_default_client() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.register_default_client"]], "register_default_client() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.register_default_client"]], "register_external_order_claims() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.register_external_order_claims"]], "register_oms_type() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.register_oms_type"]], "register_venue_routing() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.register_venue_routing"]], "register_venue_routing() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.register_venue_routing"]], "registered_clients (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.registered_clients"]], "registered_clients (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.registered_clients"]], "report_count (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.report_count"]], "req_qsize() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.req_qsize"]], "request() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.request"]], "request() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.request"]], "request() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.request"]], "request_bars() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.request_bars"]], "request_count (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.request_count"]], "request_instrument() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.request_instrument"]], "request_instruments() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.request_instruments"]], "request_quote_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.request_quote_ticks"]], "request_trade_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.request_trade_ticks"]], "res_qsize() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.res_qsize"]], "reset() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.reset"]], "reset() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.reset"]], "reset() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.reset"]], "reset() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.reset"]], "reset() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.reset"]], "reset() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.reset"]], "response() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.response"]], "response_count (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.response_count"]], "resume() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.resume"]], "resume() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.resume"]], "resume() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.resume"]], "resume() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.resume"]], "resume() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.resume"]], "resume() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.resume"]], "run() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.run"]], "run_after_delay() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.run_after_delay"]], "run_after_delay() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.run_after_delay"]], "run_after_delay() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.run_after_delay"]], "run_async() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.run_async"]], "set_max_notional_per_order() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.set_max_notional_per_order"]], "set_trading_state() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.set_trading_state"]], "start() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.start"]], "start() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.start"]], "start() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.start"]], "start() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.start"]], "start() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.start"]], "start() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.start"]], "state (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.state"]], "state (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.state"]], "state (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.state"]], "state (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.state"]], "state (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.state"]], "state (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.state"]], "stop() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.stop"]], "stop() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.stop"]], "stop() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.stop"]], "stop() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.stop"]], "stop() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.stop"]], "stop() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.stop"]], "stop() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.stop"]], "stop_async() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.stop_async"]], "submit_order() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.submit_order"]], "submit_order_list() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.submit_order_list"]], "subscribe() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.subscribe"]], "subscribe() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe"]], "subscribe_bars() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_bars"]], "subscribe_instrument() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_instrument"]], "subscribe_instrument_close() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_instrument_close"]], "subscribe_instrument_status_updates() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_instrument_status_updates"]], "subscribe_instruments() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_instruments"]], "subscribe_order_book_deltas() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_quote_ticks"]], "subscribe_ticker() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_ticker"]], "subscribe_trade_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_trade_ticks"]], "subscribe_venue_status_updates() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_venue_status_updates"]], "subscribed_bars() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_bars"]], "subscribed_bars() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_bars"]], "subscribed_generic_data() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.subscribed_generic_data"]], "subscribed_generic_data() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_generic_data"]], "subscribed_generic_data() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_generic_data"]], "subscribed_instrument_close() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_instrument_close"]], "subscribed_instrument_close() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_instrument_close"]], "subscribed_instrument_status_updates() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_instrument_status_updates"]], "subscribed_instrument_status_updates() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_instrument_status_updates"]], "subscribed_instruments() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_instruments"]], "subscribed_instruments() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_instruments"]], "subscribed_order_book_deltas() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_order_book_deltas"]], "subscribed_order_book_deltas() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_order_book_deltas"]], "subscribed_order_book_snapshots() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_order_book_snapshots"]], "subscribed_order_book_snapshots() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_order_book_snapshots"]], "subscribed_quote_ticks() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_quote_ticks"]], "subscribed_quote_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_quote_ticks"]], "subscribed_synthetic_quotes() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_synthetic_quotes"]], "subscribed_synthetic_trades() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_synthetic_trades"]], "subscribed_tickers() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_tickers"]], "subscribed_tickers() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_tickers"]], "subscribed_trade_ticks() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_trade_ticks"]], "subscribed_trade_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_trade_ticks"]], "subscribed_venue_status_updates() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_venue_status_updates"]], "trader (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.trader"]], "trader_id (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.trader_id"]], "trader_id (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.trader_id"]], "trader_id (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.trader_id"]], "trader_id (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.trader_id"]], "trader_id (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.trader_id"]], "trader_id (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.trader_id"]], "trader_id (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.trader_id"]], "trading_state (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.trading_state"]], "type (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.type"]], "type (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.type"]], "type (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.type"]], "type (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.type"]], "type (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.type"]], "type (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.type"]], "unsubscribe() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.unsubscribe"]], "unsubscribe() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe"]], "unsubscribe_bars() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_bars"]], "unsubscribe_instrument() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_instrument"]], "unsubscribe_instrument_close() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_instrument_close"]], "unsubscribe_instrument_status_updates() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_instrument_status_updates"]], "unsubscribe_instruments() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_trade_ticks"]], "unsubscribe_venue_status_updates() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_venue_status_updates"]], "venue (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.venue"]], "venue (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.venue"]], "venue (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.venue"]], "currency (class in nautilus_trader.model.currency)": [[17, "nautilus_trader.model.currency.Currency"]], "code (currency attribute)": [[17, "nautilus_trader.model.currency.Currency.code"]], "currency_type (currency attribute)": [[17, "nautilus_trader.model.currency.Currency.currency_type"]], "from_internal_map() (currency static method)": [[17, "nautilus_trader.model.currency.Currency.from_internal_map"]], "from_str() (currency static method)": [[17, "nautilus_trader.model.currency.Currency.from_str"]], "is_crypto() (currency static method)": [[17, "nautilus_trader.model.currency.Currency.is_crypto"]], "is_fiat() (currency static method)": [[17, "nautilus_trader.model.currency.Currency.is_fiat"]], "iso4217 (currency attribute)": [[17, "nautilus_trader.model.currency.Currency.iso4217"]], "name (currency attribute)": [[17, "nautilus_trader.model.currency.Currency.name"]], "nautilus_trader.model.currency": [[17, "module-nautilus_trader.model.currency"]], "precision (currency attribute)": [[17, "nautilus_trader.model.currency.Currency.precision"]], "register() (currency static method)": [[17, "nautilus_trader.model.currency.Currency.register"]], "bar (class in nautilus_trader.model.data.bar)": [[18, "nautilus_trader.model.data.bar.Bar"]], "barspecification (class in nautilus_trader.model.data.bar)": [[18, "nautilus_trader.model.data.bar.BarSpecification"]], "bartype (class in nautilus_trader.model.data.bar)": [[18, "nautilus_trader.model.data.bar.BarType"]], "bookorder (class in nautilus_trader.model.data.book)": [[18, "nautilus_trader.model.data.book.BookOrder"]], "datatype (class in nautilus_trader.model.data.base)": [[18, "nautilus_trader.model.data.base.DataType"]], "genericdata (class in nautilus_trader.model.data.base)": [[18, "nautilus_trader.model.data.base.GenericData"]], "instrumentclose (class in nautilus_trader.model.data.venue)": [[18, "nautilus_trader.model.data.venue.InstrumentClose"]], "instrumentstatusupdate (class in nautilus_trader.model.data.venue)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate"]], "orderbookdelta (class in nautilus_trader.model.data.book)": [[18, "nautilus_trader.model.data.book.OrderBookDelta"]], "orderbookdeltas (class in nautilus_trader.model.data.book)": [[18, "nautilus_trader.model.data.book.OrderBookDeltas"]], "quotetick (class in nautilus_trader.model.data.tick)": [[18, "nautilus_trader.model.data.tick.QuoteTick"]], "statusupdate (class in nautilus_trader.model.data.venue)": [[18, "nautilus_trader.model.data.venue.StatusUpdate"]], "ticker (class in nautilus_trader.model.data.ticker)": [[18, "nautilus_trader.model.data.ticker.Ticker"]], "tradetick (class in nautilus_trader.model.data.tick)": [[18, "nautilus_trader.model.data.tick.TradeTick"]], "venuestatusupdate (class in nautilus_trader.model.data.venue)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate"]], "action (orderbookdelta attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDelta.action"]], "aggregation (barspecification attribute)": [[18, "nautilus_trader.model.data.bar.BarSpecification.aggregation"]], "aggregation_source (bartype attribute)": [[18, "nautilus_trader.model.data.bar.BarType.aggregation_source"]], "aggressor_side (tradetick attribute)": [[18, "nautilus_trader.model.data.tick.TradeTick.aggressor_side"]], "ask (quotetick attribute)": [[18, "nautilus_trader.model.data.tick.QuoteTick.ask"]], "ask_size (quotetick attribute)": [[18, "nautilus_trader.model.data.tick.QuoteTick.ask_size"]], "bar_type (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.bar_type"]], "bid (quotetick attribute)": [[18, "nautilus_trader.model.data.tick.QuoteTick.bid"]], "bid_size (quotetick attribute)": [[18, "nautilus_trader.model.data.tick.QuoteTick.bid_size"]], "capsule_from_list() (quotetick static method)": [[18, "nautilus_trader.model.data.tick.QuoteTick.capsule_from_list"]], "capsule_from_list() (tradetick static method)": [[18, "nautilus_trader.model.data.tick.TradeTick.capsule_from_list"]], "check_information_aggregated() (barspecification static method)": [[18, "nautilus_trader.model.data.bar.BarSpecification.check_information_aggregated"]], "check_threshold_aggregated() (barspecification static method)": [[18, "nautilus_trader.model.data.bar.BarSpecification.check_threshold_aggregated"]], "check_time_aggregated() (barspecification static method)": [[18, "nautilus_trader.model.data.bar.BarSpecification.check_time_aggregated"]], "clear() (orderbookdelta static method)": [[18, "nautilus_trader.model.data.book.OrderBookDelta.clear"]], "close (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.close"]], "close_price (instrumentclose attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentClose.close_price"]], "close_type (instrumentclose attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentClose.close_type"]], "data (genericdata attribute)": [[18, "nautilus_trader.model.data.base.GenericData.data"]], "data_type (genericdata attribute)": [[18, "nautilus_trader.model.data.base.GenericData.data_type"]], "deltas (orderbookdeltas attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDeltas.deltas"]], "exposure() (bookorder method)": [[18, "nautilus_trader.model.data.book.BookOrder.exposure"]], "extract_price() (quotetick method)": [[18, "nautilus_trader.model.data.tick.QuoteTick.extract_price"]], "extract_volume() (quotetick method)": [[18, "nautilus_trader.model.data.tick.QuoteTick.extract_volume"]], "flags (orderbookdelta attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDelta.flags"]], "from_dict() (bar static method)": [[18, "nautilus_trader.model.data.bar.Bar.from_dict"]], "from_dict() (bookorder static method)": [[18, "nautilus_trader.model.data.book.BookOrder.from_dict"]], "from_dict() (instrumentclose static method)": [[18, "nautilus_trader.model.data.venue.InstrumentClose.from_dict"]], "from_dict() (instrumentstatusupdate static method)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate.from_dict"]], "from_dict() (orderbookdelta static method)": [[18, "nautilus_trader.model.data.book.OrderBookDelta.from_dict"]], "from_dict() (orderbookdeltas static method)": [[18, "nautilus_trader.model.data.book.OrderBookDeltas.from_dict"]], "from_dict() (quotetick static method)": [[18, "nautilus_trader.model.data.tick.QuoteTick.from_dict"]], "from_dict() (ticker static method)": [[18, "nautilus_trader.model.data.ticker.Ticker.from_dict"]], "from_dict() (tradetick static method)": [[18, "nautilus_trader.model.data.tick.TradeTick.from_dict"]], "from_dict() (venuestatusupdate static method)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate.from_dict"]], "from_raw() (quotetick static method)": [[18, "nautilus_trader.model.data.tick.QuoteTick.from_raw"]], "from_raw() (tradetick static method)": [[18, "nautilus_trader.model.data.tick.TradeTick.from_raw"]], "from_str() (barspecification static method)": [[18, "nautilus_trader.model.data.bar.BarSpecification.from_str"]], "from_str() (bartype static method)": [[18, "nautilus_trader.model.data.bar.BarType.from_str"]], "from_timedelta() (barspecification static method)": [[18, "nautilus_trader.model.data.bar.BarSpecification.from_timedelta"]], "fully_qualified_name() (bar class method)": [[18, "nautilus_trader.model.data.bar.Bar.fully_qualified_name"]], "fully_qualified_name() (genericdata class method)": [[18, "nautilus_trader.model.data.base.GenericData.fully_qualified_name"]], "fully_qualified_name() (instrumentclose class method)": [[18, "nautilus_trader.model.data.venue.InstrumentClose.fully_qualified_name"]], "fully_qualified_name() (instrumentstatusupdate class method)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate.fully_qualified_name"]], "fully_qualified_name() (orderbookdelta class method)": [[18, "nautilus_trader.model.data.book.OrderBookDelta.fully_qualified_name"]], "fully_qualified_name() (orderbookdeltas class method)": [[18, "nautilus_trader.model.data.book.OrderBookDeltas.fully_qualified_name"]], "fully_qualified_name() (quotetick class method)": [[18, "nautilus_trader.model.data.tick.QuoteTick.fully_qualified_name"]], "fully_qualified_name() (statusupdate class method)": [[18, "nautilus_trader.model.data.venue.StatusUpdate.fully_qualified_name"]], "fully_qualified_name() (ticker class method)": [[18, "nautilus_trader.model.data.ticker.Ticker.fully_qualified_name"]], "fully_qualified_name() (tradetick class method)": [[18, "nautilus_trader.model.data.tick.TradeTick.fully_qualified_name"]], "fully_qualified_name() (venuestatusupdate class method)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate.fully_qualified_name"]], "high (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.high"]], "instrument_id (bartype attribute)": [[18, "nautilus_trader.model.data.bar.BarType.instrument_id"]], "instrument_id (instrumentclose attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentClose.instrument_id"]], "instrument_id (instrumentstatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate.instrument_id"]], "instrument_id (orderbookdelta attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDelta.instrument_id"]], "instrument_id (orderbookdeltas attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDeltas.instrument_id"]], "instrument_id (quotetick attribute)": [[18, "nautilus_trader.model.data.tick.QuoteTick.instrument_id"]], "instrument_id (ticker attribute)": [[18, "nautilus_trader.model.data.ticker.Ticker.instrument_id"]], "instrument_id (tradetick attribute)": [[18, "nautilus_trader.model.data.tick.TradeTick.instrument_id"]], "is_add (orderbookdelta attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDelta.is_add"]], "is_clear (orderbookdelta attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDelta.is_clear"]], "is_delete (orderbookdelta attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDelta.is_delete"]], "is_externally_aggregated() (bartype method)": [[18, "nautilus_trader.model.data.bar.BarType.is_externally_aggregated"]], "is_information_aggregated() (barspecification method)": [[18, "nautilus_trader.model.data.bar.BarSpecification.is_information_aggregated"]], "is_internally_aggregated() (bartype method)": [[18, "nautilus_trader.model.data.bar.BarType.is_internally_aggregated"]], "is_revision (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.is_revision"]], "is_single_price() (bar method)": [[18, "nautilus_trader.model.data.bar.Bar.is_single_price"]], "is_snapshot (orderbookdeltas attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDeltas.is_snapshot"]], "is_threshold_aggregated() (barspecification method)": [[18, "nautilus_trader.model.data.bar.BarSpecification.is_threshold_aggregated"]], "is_time_aggregated() (barspecification method)": [[18, "nautilus_trader.model.data.bar.BarSpecification.is_time_aggregated"]], "is_update (orderbookdelta attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDelta.is_update"]], "list_from_capsule() (quotetick static method)": [[18, "nautilus_trader.model.data.tick.QuoteTick.list_from_capsule"]], "list_from_capsule() (tradetick static method)": [[18, "nautilus_trader.model.data.tick.TradeTick.list_from_capsule"]], "low (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.low"]], "metadata (datatype attribute)": [[18, "nautilus_trader.model.data.base.DataType.metadata"]], "nautilus_trader.model.data": [[18, "module-nautilus_trader.model.data"]], "nautilus_trader.model.data.bar": [[18, "module-nautilus_trader.model.data.bar"]], "nautilus_trader.model.data.base": [[18, "module-nautilus_trader.model.data.base"]], "nautilus_trader.model.data.book": [[18, "module-nautilus_trader.model.data.book"]], "nautilus_trader.model.data.tick": [[18, "module-nautilus_trader.model.data.tick"]], "nautilus_trader.model.data.ticker": [[18, "module-nautilus_trader.model.data.ticker"]], "nautilus_trader.model.data.venue": [[18, "module-nautilus_trader.model.data.venue"]], "open (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.open"]], "order (orderbookdelta attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDelta.order"]], "order_id (bookorder attribute)": [[18, "nautilus_trader.model.data.book.BookOrder.order_id"]], "price (bookorder attribute)": [[18, "nautilus_trader.model.data.book.BookOrder.price"]], "price (tradetick attribute)": [[18, "nautilus_trader.model.data.tick.TradeTick.price"]], "price_type (barspecification attribute)": [[18, "nautilus_trader.model.data.bar.BarSpecification.price_type"]], "sequence (orderbookdelta attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDelta.sequence"]], "sequence (orderbookdeltas attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDeltas.sequence"]], "side (bookorder attribute)": [[18, "nautilus_trader.model.data.book.BookOrder.side"]], "signed_size() (bookorder method)": [[18, "nautilus_trader.model.data.book.BookOrder.signed_size"]], "size (bookorder attribute)": [[18, "nautilus_trader.model.data.book.BookOrder.size"]], "size (tradetick attribute)": [[18, "nautilus_trader.model.data.tick.TradeTick.size"]], "spec (bartype attribute)": [[18, "nautilus_trader.model.data.bar.BarType.spec"]], "status (instrumentstatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate.status"]], "status (venuestatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate.status"]], "step (barspecification attribute)": [[18, "nautilus_trader.model.data.bar.BarSpecification.step"]], "timedelta (barspecification attribute)": [[18, "nautilus_trader.model.data.bar.BarSpecification.timedelta"]], "to_dict() (bar static method)": [[18, "nautilus_trader.model.data.bar.Bar.to_dict"]], "to_dict() (bookorder static method)": [[18, "nautilus_trader.model.data.book.BookOrder.to_dict"]], "to_dict() (instrumentclose static method)": [[18, "nautilus_trader.model.data.venue.InstrumentClose.to_dict"]], "to_dict() (instrumentstatusupdate static method)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate.to_dict"]], "to_dict() (orderbookdelta static method)": [[18, "nautilus_trader.model.data.book.OrderBookDelta.to_dict"]], "to_dict() (orderbookdeltas static method)": [[18, "nautilus_trader.model.data.book.OrderBookDeltas.to_dict"]], "to_dict() (quotetick static method)": [[18, "nautilus_trader.model.data.tick.QuoteTick.to_dict"]], "to_dict() (ticker static method)": [[18, "nautilus_trader.model.data.ticker.Ticker.to_dict"]], "to_dict() (tradetick static method)": [[18, "nautilus_trader.model.data.tick.TradeTick.to_dict"]], "to_dict() (venuestatusupdate static method)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate.to_dict"]], "topic (datatype attribute)": [[18, "nautilus_trader.model.data.base.DataType.topic"]], "trade_id (tradetick attribute)": [[18, "nautilus_trader.model.data.tick.TradeTick.trade_id"]], "ts_event (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.ts_event"]], "ts_event (genericdata attribute)": [[18, "nautilus_trader.model.data.base.GenericData.ts_event"]], "ts_event (instrumentclose attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentClose.ts_event"]], "ts_event (instrumentstatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate.ts_event"]], "ts_event (orderbookdelta attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDelta.ts_event"]], "ts_event (orderbookdeltas attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDeltas.ts_event"]], "ts_event (quotetick attribute)": [[18, "nautilus_trader.model.data.tick.QuoteTick.ts_event"]], "ts_event (statusupdate attribute)": [[18, "nautilus_trader.model.data.venue.StatusUpdate.ts_event"]], "ts_event (ticker attribute)": [[18, "nautilus_trader.model.data.ticker.Ticker.ts_event"]], "ts_event (tradetick attribute)": [[18, "nautilus_trader.model.data.tick.TradeTick.ts_event"]], "ts_event (venuestatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate.ts_event"]], "ts_init (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.ts_init"]], "ts_init (genericdata attribute)": [[18, "nautilus_trader.model.data.base.GenericData.ts_init"]], "ts_init (instrumentclose attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentClose.ts_init"]], "ts_init (instrumentstatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate.ts_init"]], "ts_init (orderbookdelta attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDelta.ts_init"]], "ts_init (orderbookdeltas attribute)": [[18, "nautilus_trader.model.data.book.OrderBookDeltas.ts_init"]], "ts_init (quotetick attribute)": [[18, "nautilus_trader.model.data.tick.QuoteTick.ts_init"]], "ts_init (statusupdate attribute)": [[18, "nautilus_trader.model.data.venue.StatusUpdate.ts_init"]], "ts_init (ticker attribute)": [[18, "nautilus_trader.model.data.ticker.Ticker.ts_init"]], "ts_init (tradetick attribute)": [[18, "nautilus_trader.model.data.tick.TradeTick.ts_init"]], "ts_init (venuestatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate.ts_init"]], "type (datatype attribute)": [[18, "nautilus_trader.model.data.base.DataType.type"]], "venue (venuestatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate.venue"]], "volume (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.volume"]], "accountstate (class in nautilus_trader.model.events.account)": [[19, "nautilus_trader.model.events.account.AccountState"]], "orderaccepted (class in nautilus_trader.model.events.order)": [[19, "nautilus_trader.model.events.order.OrderAccepted"]], "ordercancelrejected (class in nautilus_trader.model.events.order)": [[19, "nautilus_trader.model.events.order.OrderCancelRejected"]], "ordercanceled (class in nautilus_trader.model.events.order)": [[19, "nautilus_trader.model.events.order.OrderCanceled"]], "orderdenied (class in nautilus_trader.model.events.order)": [[19, "nautilus_trader.model.events.order.OrderDenied"]], "orderevent (class in nautilus_trader.model.events.order)": [[19, "nautilus_trader.model.events.order.OrderEvent"]], "orderexpired (class in nautilus_trader.model.events.order)": [[19, "nautilus_trader.model.events.order.OrderExpired"]], "orderfilled (class in nautilus_trader.model.events.order)": [[19, "nautilus_trader.model.events.order.OrderFilled"]], "orderinitialized (class in nautilus_trader.model.events.order)": [[19, "nautilus_trader.model.events.order.OrderInitialized"]], "ordermodifyrejected (class in nautilus_trader.model.events.order)": [[19, "nautilus_trader.model.events.order.OrderModifyRejected"]], "orderpendingcancel (class in nautilus_trader.model.events.order)": [[19, "nautilus_trader.model.events.order.OrderPendingCancel"]], "orderpendingupdate (class in nautilus_trader.model.events.order)": [[19, "nautilus_trader.model.events.order.OrderPendingUpdate"]], "orderrejected (class in nautilus_trader.model.events.order)": [[19, "nautilus_trader.model.events.order.OrderRejected"]], "ordersubmitted (class in nautilus_trader.model.events.order)": [[19, "nautilus_trader.model.events.order.OrderSubmitted"]], "ordertriggered (class in nautilus_trader.model.events.order)": [[19, "nautilus_trader.model.events.order.OrderTriggered"]], "orderupdated (class in nautilus_trader.model.events.order)": [[19, "nautilus_trader.model.events.order.OrderUpdated"]], "positionchanged (class in nautilus_trader.model.events.position)": [[19, "nautilus_trader.model.events.position.PositionChanged"]], "positionclosed (class in nautilus_trader.model.events.position)": [[19, "nautilus_trader.model.events.position.PositionClosed"]], "positionevent (class in nautilus_trader.model.events.position)": [[19, "nautilus_trader.model.events.position.PositionEvent"]], "positionopened (class in nautilus_trader.model.events.position)": [[19, "nautilus_trader.model.events.position.PositionOpened"]], "account_id (accountstate attribute)": [[19, "nautilus_trader.model.events.account.AccountState.account_id"]], "account_id (orderaccepted attribute)": [[19, "nautilus_trader.model.events.order.OrderAccepted.account_id"]], "account_id (ordercancelrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderCancelRejected.account_id"]], "account_id (ordercanceled attribute)": [[19, "nautilus_trader.model.events.order.OrderCanceled.account_id"]], "account_id (orderdenied attribute)": [[19, "nautilus_trader.model.events.order.OrderDenied.account_id"]], "account_id (orderevent attribute)": [[19, "nautilus_trader.model.events.order.OrderEvent.account_id"]], "account_id (orderexpired attribute)": [[19, "nautilus_trader.model.events.order.OrderExpired.account_id"]], "account_id (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.account_id"]], "account_id (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.account_id"]], "account_id (ordermodifyrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderModifyRejected.account_id"]], "account_id (orderpendingcancel attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingCancel.account_id"]], "account_id (orderpendingupdate attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingUpdate.account_id"]], "account_id (orderrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderRejected.account_id"]], "account_id (ordersubmitted attribute)": [[19, "nautilus_trader.model.events.order.OrderSubmitted.account_id"]], "account_id (ordertriggered attribute)": [[19, "nautilus_trader.model.events.order.OrderTriggered.account_id"]], "account_id (orderupdated attribute)": [[19, "nautilus_trader.model.events.order.OrderUpdated.account_id"]], "account_id (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.account_id"]], "account_id (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.account_id"]], "account_id (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.account_id"]], "account_id (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.account_id"]], "account_type (accountstate attribute)": [[19, "nautilus_trader.model.events.account.AccountState.account_type"]], "avg_px_close (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.avg_px_close"]], "avg_px_close (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.avg_px_close"]], "avg_px_close (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.avg_px_close"]], "avg_px_close (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.avg_px_close"]], "avg_px_open (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.avg_px_open"]], "avg_px_open (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.avg_px_open"]], "avg_px_open (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.avg_px_open"]], "avg_px_open (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.avg_px_open"]], "balances (accountstate attribute)": [[19, "nautilus_trader.model.events.account.AccountState.balances"]], "base_currency (accountstate attribute)": [[19, "nautilus_trader.model.events.account.AccountState.base_currency"]], "client_order_id (orderaccepted attribute)": [[19, "nautilus_trader.model.events.order.OrderAccepted.client_order_id"]], "client_order_id (ordercancelrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderCancelRejected.client_order_id"]], "client_order_id (ordercanceled attribute)": [[19, "nautilus_trader.model.events.order.OrderCanceled.client_order_id"]], "client_order_id (orderdenied attribute)": [[19, "nautilus_trader.model.events.order.OrderDenied.client_order_id"]], "client_order_id (orderevent attribute)": [[19, "nautilus_trader.model.events.order.OrderEvent.client_order_id"]], "client_order_id (orderexpired attribute)": [[19, "nautilus_trader.model.events.order.OrderExpired.client_order_id"]], "client_order_id (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.client_order_id"]], "client_order_id (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.client_order_id"]], "client_order_id (ordermodifyrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderModifyRejected.client_order_id"]], "client_order_id (orderpendingcancel attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingCancel.client_order_id"]], "client_order_id (orderpendingupdate attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingUpdate.client_order_id"]], "client_order_id (orderrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderRejected.client_order_id"]], "client_order_id (ordersubmitted attribute)": [[19, "nautilus_trader.model.events.order.OrderSubmitted.client_order_id"]], "client_order_id (ordertriggered attribute)": [[19, "nautilus_trader.model.events.order.OrderTriggered.client_order_id"]], "client_order_id (orderupdated attribute)": [[19, "nautilus_trader.model.events.order.OrderUpdated.client_order_id"]], "closing_order_id (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.closing_order_id"]], "closing_order_id (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.closing_order_id"]], "closing_order_id (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.closing_order_id"]], "closing_order_id (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.closing_order_id"]], "commission (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.commission"]], "contingency_type (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.contingency_type"]], "create() (positionchanged static method)": [[19, "nautilus_trader.model.events.position.PositionChanged.create"]], "create() (positionclosed static method)": [[19, "nautilus_trader.model.events.position.PositionClosed.create"]], "create() (positionopened static method)": [[19, "nautilus_trader.model.events.position.PositionOpened.create"]], "currency (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.currency"]], "currency (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.currency"]], "currency (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.currency"]], "currency (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.currency"]], "currency (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.currency"]], "duration_ns (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.duration_ns"]], "duration_ns (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.duration_ns"]], "duration_ns (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.duration_ns"]], "duration_ns (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.duration_ns"]], "emulation_trigger (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.emulation_trigger"]], "entry (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.entry"]], "entry (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.entry"]], "entry (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.entry"]], "entry (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.entry"]], "exec_algorithm_id (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.exec_algorithm_id"]], "exec_algorithm_params (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.exec_algorithm_params"]], "exec_spawn_id (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.exec_spawn_id"]], "from_dict() (accountstate static method)": [[19, "nautilus_trader.model.events.account.AccountState.from_dict"]], "from_dict() (orderaccepted static method)": [[19, "nautilus_trader.model.events.order.OrderAccepted.from_dict"]], "from_dict() (ordercancelrejected static method)": [[19, "nautilus_trader.model.events.order.OrderCancelRejected.from_dict"]], "from_dict() (ordercanceled static method)": [[19, "nautilus_trader.model.events.order.OrderCanceled.from_dict"]], "from_dict() (orderdenied static method)": [[19, "nautilus_trader.model.events.order.OrderDenied.from_dict"]], "from_dict() (orderexpired static method)": [[19, "nautilus_trader.model.events.order.OrderExpired.from_dict"]], "from_dict() (orderfilled static method)": [[19, "nautilus_trader.model.events.order.OrderFilled.from_dict"]], "from_dict() (orderinitialized static method)": [[19, "nautilus_trader.model.events.order.OrderInitialized.from_dict"]], "from_dict() (ordermodifyrejected static method)": [[19, "nautilus_trader.model.events.order.OrderModifyRejected.from_dict"]], "from_dict() (orderpendingcancel static method)": [[19, "nautilus_trader.model.events.order.OrderPendingCancel.from_dict"]], "from_dict() (orderpendingupdate static method)": [[19, "nautilus_trader.model.events.order.OrderPendingUpdate.from_dict"]], "from_dict() (orderrejected static method)": [[19, "nautilus_trader.model.events.order.OrderRejected.from_dict"]], "from_dict() (ordersubmitted static method)": [[19, "nautilus_trader.model.events.order.OrderSubmitted.from_dict"]], "from_dict() (ordertriggered static method)": [[19, "nautilus_trader.model.events.order.OrderTriggered.from_dict"]], "from_dict() (orderupdated static method)": [[19, "nautilus_trader.model.events.order.OrderUpdated.from_dict"]], "from_dict() (positionchanged static method)": [[19, "nautilus_trader.model.events.position.PositionChanged.from_dict"]], "from_dict() (positionclosed static method)": [[19, "nautilus_trader.model.events.position.PositionClosed.from_dict"]], "from_dict() (positionopened static method)": [[19, "nautilus_trader.model.events.position.PositionOpened.from_dict"]], "id (accountstate attribute)": [[19, "nautilus_trader.model.events.account.AccountState.id"]], "id (orderaccepted attribute)": [[19, "nautilus_trader.model.events.order.OrderAccepted.id"]], "id (ordercancelrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderCancelRejected.id"]], "id (ordercanceled attribute)": [[19, "nautilus_trader.model.events.order.OrderCanceled.id"]], "id (orderdenied attribute)": [[19, "nautilus_trader.model.events.order.OrderDenied.id"]], "id (orderevent attribute)": [[19, "nautilus_trader.model.events.order.OrderEvent.id"]], "id (orderexpired attribute)": [[19, "nautilus_trader.model.events.order.OrderExpired.id"]], "id (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.id"]], "id (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.id"]], "id (ordermodifyrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderModifyRejected.id"]], "id (orderpendingcancel attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingCancel.id"]], "id (orderpendingupdate attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingUpdate.id"]], "id (orderrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderRejected.id"]], "id (ordersubmitted attribute)": [[19, "nautilus_trader.model.events.order.OrderSubmitted.id"]], "id (ordertriggered attribute)": [[19, "nautilus_trader.model.events.order.OrderTriggered.id"]], "id (orderupdated attribute)": [[19, "nautilus_trader.model.events.order.OrderUpdated.id"]], "id (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.id"]], "id (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.id"]], "id (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.id"]], "id (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.id"]], "info (accountstate attribute)": [[19, "nautilus_trader.model.events.account.AccountState.info"]], "info (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.info"]], "instrument_id (orderaccepted attribute)": [[19, "nautilus_trader.model.events.order.OrderAccepted.instrument_id"]], "instrument_id (ordercancelrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderCancelRejected.instrument_id"]], "instrument_id (ordercanceled attribute)": [[19, "nautilus_trader.model.events.order.OrderCanceled.instrument_id"]], "instrument_id (orderdenied attribute)": [[19, "nautilus_trader.model.events.order.OrderDenied.instrument_id"]], "instrument_id (orderevent attribute)": [[19, "nautilus_trader.model.events.order.OrderEvent.instrument_id"]], "instrument_id (orderexpired attribute)": [[19, "nautilus_trader.model.events.order.OrderExpired.instrument_id"]], "instrument_id (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.instrument_id"]], "instrument_id (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.instrument_id"]], "instrument_id (ordermodifyrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderModifyRejected.instrument_id"]], "instrument_id (orderpendingcancel attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingCancel.instrument_id"]], "instrument_id (orderpendingupdate attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingUpdate.instrument_id"]], "instrument_id (orderrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderRejected.instrument_id"]], "instrument_id (ordersubmitted attribute)": [[19, "nautilus_trader.model.events.order.OrderSubmitted.instrument_id"]], "instrument_id (ordertriggered attribute)": [[19, "nautilus_trader.model.events.order.OrderTriggered.instrument_id"]], "instrument_id (orderupdated attribute)": [[19, "nautilus_trader.model.events.order.OrderUpdated.instrument_id"]], "instrument_id (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.instrument_id"]], "instrument_id (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.instrument_id"]], "instrument_id (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.instrument_id"]], "instrument_id (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.instrument_id"]], "is_buy (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.is_buy"]], "is_reported (accountstate attribute)": [[19, "nautilus_trader.model.events.account.AccountState.is_reported"]], "is_sell (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.is_sell"]], "last_px (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.last_px"]], "last_px (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.last_px"]], "last_px (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.last_px"]], "last_px (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.last_px"]], "last_px (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.last_px"]], "last_qty (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.last_qty"]], "last_qty (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.last_qty"]], "last_qty (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.last_qty"]], "last_qty (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.last_qty"]], "last_qty (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.last_qty"]], "linked_order_ids (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.linked_order_ids"]], "liquidity_side (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.liquidity_side"]], "margins (accountstate attribute)": [[19, "nautilus_trader.model.events.account.AccountState.margins"]], "nautilus_trader.model.events": [[19, "module-nautilus_trader.model.events"]], "nautilus_trader.model.events.account": [[19, "module-nautilus_trader.model.events.account"]], "nautilus_trader.model.events.order": [[19, "module-nautilus_trader.model.events.order"]], "nautilus_trader.model.events.position": [[19, "module-nautilus_trader.model.events.position"]], "opening_order_id (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.opening_order_id"]], "opening_order_id (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.opening_order_id"]], "opening_order_id (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.opening_order_id"]], "opening_order_id (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.opening_order_id"]], "options (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.options"]], "order_list_id (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.order_list_id"]], "order_side (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.order_side"]], "order_type (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.order_type"]], "order_type (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.order_type"]], "parent_order_id (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.parent_order_id"]], "peak_qty (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.peak_qty"]], "peak_qty (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.peak_qty"]], "peak_qty (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.peak_qty"]], "peak_qty (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.peak_qty"]], "position_id (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.position_id"]], "position_id (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.position_id"]], "position_id (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.position_id"]], "position_id (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.position_id"]], "position_id (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.position_id"]], "post_only (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.post_only"]], "price (orderupdated attribute)": [[19, "nautilus_trader.model.events.order.OrderUpdated.price"]], "quantity (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.quantity"]], "quantity (orderupdated attribute)": [[19, "nautilus_trader.model.events.order.OrderUpdated.quantity"]], "quantity (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.quantity"]], "quantity (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.quantity"]], "quantity (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.quantity"]], "quantity (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.quantity"]], "quote_quantity (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.quote_quantity"]], "realized_pnl (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.realized_pnl"]], "realized_pnl (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.realized_pnl"]], "realized_pnl (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.realized_pnl"]], "realized_pnl (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.realized_pnl"]], "realized_return (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.realized_return"]], "realized_return (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.realized_return"]], "realized_return (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.realized_return"]], "realized_return (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.realized_return"]], "reason (ordercancelrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderCancelRejected.reason"]], "reason (orderdenied attribute)": [[19, "nautilus_trader.model.events.order.OrderDenied.reason"]], "reason (ordermodifyrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderModifyRejected.reason"]], "reason (orderrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderRejected.reason"]], "reconciliation (orderaccepted attribute)": [[19, "nautilus_trader.model.events.order.OrderAccepted.reconciliation"]], "reconciliation (ordercancelrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderCancelRejected.reconciliation"]], "reconciliation (ordercanceled attribute)": [[19, "nautilus_trader.model.events.order.OrderCanceled.reconciliation"]], "reconciliation (orderdenied attribute)": [[19, "nautilus_trader.model.events.order.OrderDenied.reconciliation"]], "reconciliation (orderevent attribute)": [[19, "nautilus_trader.model.events.order.OrderEvent.reconciliation"]], "reconciliation (orderexpired attribute)": [[19, "nautilus_trader.model.events.order.OrderExpired.reconciliation"]], "reconciliation (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.reconciliation"]], "reconciliation (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.reconciliation"]], "reconciliation (ordermodifyrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderModifyRejected.reconciliation"]], "reconciliation (orderpendingcancel attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingCancel.reconciliation"]], "reconciliation (orderpendingupdate attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingUpdate.reconciliation"]], "reconciliation (orderrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderRejected.reconciliation"]], "reconciliation (ordersubmitted attribute)": [[19, "nautilus_trader.model.events.order.OrderSubmitted.reconciliation"]], "reconciliation (ordertriggered attribute)": [[19, "nautilus_trader.model.events.order.OrderTriggered.reconciliation"]], "reconciliation (orderupdated attribute)": [[19, "nautilus_trader.model.events.order.OrderUpdated.reconciliation"]], "reduce_only (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.reduce_only"]], "side (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.side"]], "side (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.side"]], "side (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.side"]], "side (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.side"]], "side (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.side"]], "signed_qty (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.signed_qty"]], "signed_qty (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.signed_qty"]], "signed_qty (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.signed_qty"]], "signed_qty (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.signed_qty"]], "strategy_id (orderaccepted attribute)": [[19, "nautilus_trader.model.events.order.OrderAccepted.strategy_id"]], "strategy_id (ordercancelrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderCancelRejected.strategy_id"]], "strategy_id (ordercanceled attribute)": [[19, "nautilus_trader.model.events.order.OrderCanceled.strategy_id"]], "strategy_id (orderdenied attribute)": [[19, "nautilus_trader.model.events.order.OrderDenied.strategy_id"]], "strategy_id (orderevent attribute)": [[19, "nautilus_trader.model.events.order.OrderEvent.strategy_id"]], "strategy_id (orderexpired attribute)": [[19, "nautilus_trader.model.events.order.OrderExpired.strategy_id"]], "strategy_id (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.strategy_id"]], "strategy_id (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.strategy_id"]], "strategy_id (ordermodifyrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderModifyRejected.strategy_id"]], "strategy_id (orderpendingcancel attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingCancel.strategy_id"]], "strategy_id (orderpendingupdate attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingUpdate.strategy_id"]], "strategy_id (orderrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderRejected.strategy_id"]], "strategy_id (ordersubmitted attribute)": [[19, "nautilus_trader.model.events.order.OrderSubmitted.strategy_id"]], "strategy_id (ordertriggered attribute)": [[19, "nautilus_trader.model.events.order.OrderTriggered.strategy_id"]], "strategy_id (orderupdated attribute)": [[19, "nautilus_trader.model.events.order.OrderUpdated.strategy_id"]], "strategy_id (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.strategy_id"]], "strategy_id (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.strategy_id"]], "strategy_id (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.strategy_id"]], "strategy_id (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.strategy_id"]], "tags (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.tags"]], "time_in_force (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.time_in_force"]], "to_dict() (accountstate static method)": [[19, "nautilus_trader.model.events.account.AccountState.to_dict"]], "to_dict() (orderaccepted static method)": [[19, "nautilus_trader.model.events.order.OrderAccepted.to_dict"]], "to_dict() (ordercancelrejected static method)": [[19, "nautilus_trader.model.events.order.OrderCancelRejected.to_dict"]], "to_dict() (ordercanceled static method)": [[19, "nautilus_trader.model.events.order.OrderCanceled.to_dict"]], "to_dict() (orderdenied static method)": [[19, "nautilus_trader.model.events.order.OrderDenied.to_dict"]], "to_dict() (orderexpired static method)": [[19, "nautilus_trader.model.events.order.OrderExpired.to_dict"]], "to_dict() (orderfilled static method)": [[19, "nautilus_trader.model.events.order.OrderFilled.to_dict"]], "to_dict() (orderinitialized static method)": [[19, "nautilus_trader.model.events.order.OrderInitialized.to_dict"]], "to_dict() (ordermodifyrejected static method)": [[19, "nautilus_trader.model.events.order.OrderModifyRejected.to_dict"]], "to_dict() (orderpendingcancel static method)": [[19, "nautilus_trader.model.events.order.OrderPendingCancel.to_dict"]], "to_dict() (orderpendingupdate static method)": [[19, "nautilus_trader.model.events.order.OrderPendingUpdate.to_dict"]], "to_dict() (orderrejected static method)": [[19, "nautilus_trader.model.events.order.OrderRejected.to_dict"]], "to_dict() (ordersubmitted static method)": [[19, "nautilus_trader.model.events.order.OrderSubmitted.to_dict"]], "to_dict() (ordertriggered static method)": [[19, "nautilus_trader.model.events.order.OrderTriggered.to_dict"]], "to_dict() (orderupdated static method)": [[19, "nautilus_trader.model.events.order.OrderUpdated.to_dict"]], "to_dict() (positionchanged static method)": [[19, "nautilus_trader.model.events.position.PositionChanged.to_dict"]], "to_dict() (positionclosed static method)": [[19, "nautilus_trader.model.events.position.PositionClosed.to_dict"]], "to_dict() (positionopened static method)": [[19, "nautilus_trader.model.events.position.PositionOpened.to_dict"]], "trade_id (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.trade_id"]], "trader_id (orderaccepted attribute)": [[19, "nautilus_trader.model.events.order.OrderAccepted.trader_id"]], "trader_id (ordercancelrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderCancelRejected.trader_id"]], "trader_id (ordercanceled attribute)": [[19, "nautilus_trader.model.events.order.OrderCanceled.trader_id"]], "trader_id (orderdenied attribute)": [[19, "nautilus_trader.model.events.order.OrderDenied.trader_id"]], "trader_id (orderevent attribute)": [[19, "nautilus_trader.model.events.order.OrderEvent.trader_id"]], "trader_id (orderexpired attribute)": [[19, "nautilus_trader.model.events.order.OrderExpired.trader_id"]], "trader_id (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.trader_id"]], "trader_id (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.trader_id"]], "trader_id (ordermodifyrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderModifyRejected.trader_id"]], "trader_id (orderpendingcancel attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingCancel.trader_id"]], "trader_id (orderpendingupdate attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingUpdate.trader_id"]], "trader_id (orderrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderRejected.trader_id"]], "trader_id (ordersubmitted attribute)": [[19, "nautilus_trader.model.events.order.OrderSubmitted.trader_id"]], "trader_id (ordertriggered attribute)": [[19, "nautilus_trader.model.events.order.OrderTriggered.trader_id"]], "trader_id (orderupdated attribute)": [[19, "nautilus_trader.model.events.order.OrderUpdated.trader_id"]], "trader_id (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.trader_id"]], "trader_id (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.trader_id"]], "trader_id (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.trader_id"]], "trader_id (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.trader_id"]], "trigger_instrument_id (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.trigger_instrument_id"]], "trigger_price (orderupdated attribute)": [[19, "nautilus_trader.model.events.order.OrderUpdated.trigger_price"]], "ts_closed (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.ts_closed"]], "ts_closed (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.ts_closed"]], "ts_closed (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.ts_closed"]], "ts_closed (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.ts_closed"]], "ts_event (accountstate attribute)": [[19, "nautilus_trader.model.events.account.AccountState.ts_event"]], "ts_event (orderaccepted attribute)": [[19, "nautilus_trader.model.events.order.OrderAccepted.ts_event"]], "ts_event (ordercancelrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderCancelRejected.ts_event"]], "ts_event (ordercanceled attribute)": [[19, "nautilus_trader.model.events.order.OrderCanceled.ts_event"]], "ts_event (orderdenied attribute)": [[19, "nautilus_trader.model.events.order.OrderDenied.ts_event"]], "ts_event (orderevent attribute)": [[19, "nautilus_trader.model.events.order.OrderEvent.ts_event"]], "ts_event (orderexpired attribute)": [[19, "nautilus_trader.model.events.order.OrderExpired.ts_event"]], "ts_event (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.ts_event"]], "ts_event (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.ts_event"]], "ts_event (ordermodifyrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderModifyRejected.ts_event"]], "ts_event (orderpendingcancel attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingCancel.ts_event"]], "ts_event (orderpendingupdate attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingUpdate.ts_event"]], "ts_event (orderrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderRejected.ts_event"]], "ts_event (ordersubmitted attribute)": [[19, "nautilus_trader.model.events.order.OrderSubmitted.ts_event"]], "ts_event (ordertriggered attribute)": [[19, "nautilus_trader.model.events.order.OrderTriggered.ts_event"]], "ts_event (orderupdated attribute)": [[19, "nautilus_trader.model.events.order.OrderUpdated.ts_event"]], "ts_event (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.ts_event"]], "ts_event (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.ts_event"]], "ts_event (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.ts_event"]], "ts_event (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.ts_event"]], "ts_init (accountstate attribute)": [[19, "nautilus_trader.model.events.account.AccountState.ts_init"]], "ts_init (orderaccepted attribute)": [[19, "nautilus_trader.model.events.order.OrderAccepted.ts_init"]], "ts_init (ordercancelrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderCancelRejected.ts_init"]], "ts_init (ordercanceled attribute)": [[19, "nautilus_trader.model.events.order.OrderCanceled.ts_init"]], "ts_init (orderdenied attribute)": [[19, "nautilus_trader.model.events.order.OrderDenied.ts_init"]], "ts_init (orderevent attribute)": [[19, "nautilus_trader.model.events.order.OrderEvent.ts_init"]], "ts_init (orderexpired attribute)": [[19, "nautilus_trader.model.events.order.OrderExpired.ts_init"]], "ts_init (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.ts_init"]], "ts_init (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.ts_init"]], "ts_init (ordermodifyrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderModifyRejected.ts_init"]], "ts_init (orderpendingcancel attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingCancel.ts_init"]], "ts_init (orderpendingupdate attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingUpdate.ts_init"]], "ts_init (orderrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderRejected.ts_init"]], "ts_init (ordersubmitted attribute)": [[19, "nautilus_trader.model.events.order.OrderSubmitted.ts_init"]], "ts_init (ordertriggered attribute)": [[19, "nautilus_trader.model.events.order.OrderTriggered.ts_init"]], "ts_init (orderupdated attribute)": [[19, "nautilus_trader.model.events.order.OrderUpdated.ts_init"]], "ts_init (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.ts_init"]], "ts_init (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.ts_init"]], "ts_init (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.ts_init"]], "ts_init (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.ts_init"]], "ts_opened (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.ts_opened"]], "ts_opened (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.ts_opened"]], "ts_opened (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.ts_opened"]], "ts_opened (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.ts_opened"]], "unrealized_pnl (positionchanged attribute)": [[19, "nautilus_trader.model.events.position.PositionChanged.unrealized_pnl"]], "unrealized_pnl (positionclosed attribute)": [[19, "nautilus_trader.model.events.position.PositionClosed.unrealized_pnl"]], "unrealized_pnl (positionevent attribute)": [[19, "nautilus_trader.model.events.position.PositionEvent.unrealized_pnl"]], "unrealized_pnl (positionopened attribute)": [[19, "nautilus_trader.model.events.position.PositionOpened.unrealized_pnl"]], "venue_order_id (orderaccepted attribute)": [[19, "nautilus_trader.model.events.order.OrderAccepted.venue_order_id"]], "venue_order_id (ordercancelrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderCancelRejected.venue_order_id"]], "venue_order_id (ordercanceled attribute)": [[19, "nautilus_trader.model.events.order.OrderCanceled.venue_order_id"]], "venue_order_id (orderdenied attribute)": [[19, "nautilus_trader.model.events.order.OrderDenied.venue_order_id"]], "venue_order_id (orderevent attribute)": [[19, "nautilus_trader.model.events.order.OrderEvent.venue_order_id"]], "venue_order_id (orderexpired attribute)": [[19, "nautilus_trader.model.events.order.OrderExpired.venue_order_id"]], "venue_order_id (orderfilled attribute)": [[19, "nautilus_trader.model.events.order.OrderFilled.venue_order_id"]], "venue_order_id (orderinitialized attribute)": [[19, "nautilus_trader.model.events.order.OrderInitialized.venue_order_id"]], "venue_order_id (ordermodifyrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderModifyRejected.venue_order_id"]], "venue_order_id (orderpendingcancel attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingCancel.venue_order_id"]], "venue_order_id (orderpendingupdate attribute)": [[19, "nautilus_trader.model.events.order.OrderPendingUpdate.venue_order_id"]], "venue_order_id (orderrejected attribute)": [[19, "nautilus_trader.model.events.order.OrderRejected.venue_order_id"]], "venue_order_id (ordersubmitted attribute)": [[19, "nautilus_trader.model.events.order.OrderSubmitted.venue_order_id"]], "venue_order_id (ordertriggered attribute)": [[19, "nautilus_trader.model.events.order.OrderTriggered.venue_order_id"]], "venue_order_id (orderupdated attribute)": [[19, "nautilus_trader.model.events.order.OrderUpdated.venue_order_id"]], "accountid (class in nautilus_trader.model.identifiers)": [[20, "nautilus_trader.model.identifiers.AccountId"]], "clientid (class in nautilus_trader.model.identifiers)": [[20, "nautilus_trader.model.identifiers.ClientId"]], "clientorderid (class in nautilus_trader.model.identifiers)": [[20, "nautilus_trader.model.identifiers.ClientOrderId"]], "componentid (class in nautilus_trader.model.identifiers)": [[20, "nautilus_trader.model.identifiers.ComponentId"]], "execalgorithmid (class in nautilus_trader.model.identifiers)": [[20, "nautilus_trader.model.identifiers.ExecAlgorithmId"]], "identifier (class in nautilus_trader.model.identifiers)": [[20, "nautilus_trader.model.identifiers.Identifier"]], "instrumentid (class in nautilus_trader.model.identifiers)": [[20, "nautilus_trader.model.identifiers.InstrumentId"]], "orderlistid (class in nautilus_trader.model.identifiers)": [[20, "nautilus_trader.model.identifiers.OrderListId"]], "positionid (class in nautilus_trader.model.identifiers)": [[20, "nautilus_trader.model.identifiers.PositionId"]], "strategyid (class in nautilus_trader.model.identifiers)": [[20, "nautilus_trader.model.identifiers.StrategyId"]], "symbol (class in nautilus_trader.model.identifiers)": [[20, "nautilus_trader.model.identifiers.Symbol"]], "tradeid (class in nautilus_trader.model.identifiers)": [[20, "nautilus_trader.model.identifiers.TradeId"]], "traderid (class in nautilus_trader.model.identifiers)": [[20, "nautilus_trader.model.identifiers.TraderId"]], "venue (class in nautilus_trader.model.identifiers)": [[20, "nautilus_trader.model.identifiers.Venue"]], "venueorderid (class in nautilus_trader.model.identifiers)": [[20, "nautilus_trader.model.identifiers.VenueOrderId"]], "from_str() (instrumentid static method)": [[20, "nautilus_trader.model.identifiers.InstrumentId.from_str"]], "get_id() (accountid method)": [[20, "nautilus_trader.model.identifiers.AccountId.get_id"]], "get_issuer() (accountid method)": [[20, "nautilus_trader.model.identifiers.AccountId.get_issuer"]], "get_tag() (strategyid method)": [[20, "nautilus_trader.model.identifiers.StrategyId.get_tag"]], "get_tag() (traderid method)": [[20, "nautilus_trader.model.identifiers.TraderId.get_tag"]], "is_external() (strategyid method)": [[20, "nautilus_trader.model.identifiers.StrategyId.is_external"]], "is_synthetic() (instrumentid method)": [[20, "nautilus_trader.model.identifiers.InstrumentId.is_synthetic"]], "is_synthetic() (venue method)": [[20, "nautilus_trader.model.identifiers.Venue.is_synthetic"]], "is_this_trader() (clientorderid method)": [[20, "nautilus_trader.model.identifiers.ClientOrderId.is_this_trader"]], "nautilus_trader.model.identifiers": [[20, "module-nautilus_trader.model.identifiers"]], "symbol (instrumentid attribute)": [[20, "nautilus_trader.model.identifiers.InstrumentId.symbol"]], "value (accountid attribute)": [[20, "nautilus_trader.model.identifiers.AccountId.value"]], "value (clientid attribute)": [[20, "nautilus_trader.model.identifiers.ClientId.value"]], "value (clientorderid attribute)": [[20, "nautilus_trader.model.identifiers.ClientOrderId.value"]], "value (componentid attribute)": [[20, "nautilus_trader.model.identifiers.ComponentId.value"]], "value (execalgorithmid attribute)": [[20, "nautilus_trader.model.identifiers.ExecAlgorithmId.value"]], "value (identifier attribute)": [[20, "nautilus_trader.model.identifiers.Identifier.value"]], "value (instrumentid attribute)": [[20, "nautilus_trader.model.identifiers.InstrumentId.value"]], "value (orderlistid attribute)": [[20, "nautilus_trader.model.identifiers.OrderListId.value"]], "value (positionid attribute)": [[20, "nautilus_trader.model.identifiers.PositionId.value"]], "value (strategyid attribute)": [[20, "nautilus_trader.model.identifiers.StrategyId.value"]], "value (symbol attribute)": [[20, "nautilus_trader.model.identifiers.Symbol.value"]], "value (tradeid attribute)": [[20, "nautilus_trader.model.identifiers.TradeId.value"]], "value (traderid attribute)": [[20, "nautilus_trader.model.identifiers.TraderId.value"]], "value (venue attribute)": [[20, "nautilus_trader.model.identifiers.Venue.value"]], "value (venueorderid attribute)": [[20, "nautilus_trader.model.identifiers.VenueOrderId.value"]], "venue (instrumentid attribute)": [[20, "nautilus_trader.model.identifiers.InstrumentId.venue"]], "nautilus_trader.model": [[21, "module-nautilus_trader.model"]], "bettinginstrument (class in nautilus_trader.model.instruments.betting)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument"]], "cryptofuture (class in nautilus_trader.model.instruments.crypto_future)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture"]], "cryptoperpetual (class in nautilus_trader.model.instruments.crypto_perpetual)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual"]], "currencypair (class in nautilus_trader.model.instruments.currency_pair)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair"]], "equity (class in nautilus_trader.model.instruments.equity)": [[22, "nautilus_trader.model.instruments.equity.Equity"]], "futurescontract (class in nautilus_trader.model.instruments.futures_contract)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract"]], "instrument (class in nautilus_trader.model.instruments.base)": [[22, "nautilus_trader.model.instruments.base.Instrument"]], "optionscontract (class in nautilus_trader.model.instruments.options_contract)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract"]], "syntheticinstrument (class in nautilus_trader.model.instruments.synthetic)": [[22, "nautilus_trader.model.instruments.synthetic.SyntheticInstrument"]], "asset_class (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.asset_class"]], "asset_class (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.asset_class"]], "asset_class (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.asset_class"]], "asset_class (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.asset_class"]], "asset_class (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.asset_class"]], "asset_class (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.asset_class"]], "asset_class (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.asset_class"]], "asset_class (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.asset_class"]], "asset_type (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.asset_type"]], "asset_type (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.asset_type"]], "asset_type (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.asset_type"]], "asset_type (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.asset_type"]], "asset_type (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.asset_type"]], "asset_type (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.asset_type"]], "asset_type (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.asset_type"]], "asset_type (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.asset_type"]], "base_currency (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.base_currency"]], "base_currency (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.base_currency"]], "base_from_dict() (bettinginstrument static method)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.base_from_dict"]], "base_from_dict() (cryptofuture static method)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.base_from_dict"]], "base_from_dict() (cryptoperpetual static method)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.base_from_dict"]], "base_from_dict() (currencypair static method)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.base_from_dict"]], "base_from_dict() (equity static method)": [[22, "nautilus_trader.model.instruments.equity.Equity.base_from_dict"]], "base_from_dict() (futurescontract static method)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.base_from_dict"]], "base_from_dict() (instrument static method)": [[22, "nautilus_trader.model.instruments.base.Instrument.base_from_dict"]], "base_from_dict() (optionscontract static method)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.base_from_dict"]], "base_to_dict() (bettinginstrument static method)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.base_to_dict"]], "base_to_dict() (cryptofuture static method)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.base_to_dict"]], "base_to_dict() (cryptoperpetual static method)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.base_to_dict"]], "base_to_dict() (currencypair static method)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.base_to_dict"]], "base_to_dict() (equity static method)": [[22, "nautilus_trader.model.instruments.equity.Equity.base_to_dict"]], "base_to_dict() (futurescontract static method)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.base_to_dict"]], "base_to_dict() (instrument static method)": [[22, "nautilus_trader.model.instruments.base.Instrument.base_to_dict"]], "base_to_dict() (optionscontract static method)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.base_to_dict"]], "calculate() (syntheticinstrument method)": [[22, "nautilus_trader.model.instruments.synthetic.SyntheticInstrument.calculate"]], "calculate_base_quantity() (bettinginstrument method)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.calculate_base_quantity"]], "calculate_base_quantity() (cryptofuture method)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.calculate_base_quantity"]], "calculate_base_quantity() (cryptoperpetual method)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.calculate_base_quantity"]], "calculate_base_quantity() (currencypair method)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.calculate_base_quantity"]], "calculate_base_quantity() (equity method)": [[22, "nautilus_trader.model.instruments.equity.Equity.calculate_base_quantity"]], "calculate_base_quantity() (futurescontract method)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.calculate_base_quantity"]], "calculate_base_quantity() (instrument method)": [[22, "nautilus_trader.model.instruments.base.Instrument.calculate_base_quantity"]], "calculate_base_quantity() (optionscontract method)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.calculate_base_quantity"]], "change_formula() (syntheticinstrument method)": [[22, "nautilus_trader.model.instruments.synthetic.SyntheticInstrument.change_formula"]], "components (syntheticinstrument attribute)": [[22, "nautilus_trader.model.instruments.synthetic.SyntheticInstrument.components"]], "expiry_date (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.expiry_date"]], "expiry_date (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.expiry_date"]], "formula (syntheticinstrument attribute)": [[22, "nautilus_trader.model.instruments.synthetic.SyntheticInstrument.formula"]], "from_dict() (bettinginstrument static method)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.from_dict"]], "from_dict() (cryptofuture static method)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.from_dict"]], "from_dict() (cryptoperpetual static method)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.from_dict"]], "from_dict() (currencypair static method)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.from_dict"]], "from_dict() (equity static method)": [[22, "nautilus_trader.model.instruments.equity.Equity.from_dict"]], "from_dict() (futurescontract static method)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.from_dict"]], "from_dict() (optionscontract static method)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.from_dict"]], "from_dict() (syntheticinstrument static method)": [[22, "nautilus_trader.model.instruments.synthetic.SyntheticInstrument.from_dict"]], "fully_qualified_name() (bettinginstrument class method)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.fully_qualified_name"]], "fully_qualified_name() (cryptofuture class method)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.fully_qualified_name"]], "fully_qualified_name() (cryptoperpetual class method)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.fully_qualified_name"]], "fully_qualified_name() (currencypair class method)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.fully_qualified_name"]], "fully_qualified_name() (equity class method)": [[22, "nautilus_trader.model.instruments.equity.Equity.fully_qualified_name"]], "fully_qualified_name() (futurescontract class method)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.fully_qualified_name"]], "fully_qualified_name() (instrument class method)": [[22, "nautilus_trader.model.instruments.base.Instrument.fully_qualified_name"]], "fully_qualified_name() (optionscontract class method)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.fully_qualified_name"]], "fully_qualified_name() (syntheticinstrument class method)": [[22, "nautilus_trader.model.instruments.synthetic.SyntheticInstrument.fully_qualified_name"]], "get_base_currency() (bettinginstrument method)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.get_base_currency"]], "get_base_currency() (cryptofuture method)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.get_base_currency"]], "get_base_currency() (cryptoperpetual method)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.get_base_currency"]], "get_base_currency() (currencypair method)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.get_base_currency"]], "get_base_currency() (equity method)": [[22, "nautilus_trader.model.instruments.equity.Equity.get_base_currency"]], "get_base_currency() (futurescontract method)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.get_base_currency"]], "get_base_currency() (instrument method)": [[22, "nautilus_trader.model.instruments.base.Instrument.get_base_currency"]], "get_base_currency() (optionscontract method)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.get_base_currency"]], "get_settlement_currency() (bettinginstrument method)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.get_settlement_currency"]], "get_settlement_currency() (cryptofuture method)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.get_settlement_currency"]], "get_settlement_currency() (cryptoperpetual method)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.get_settlement_currency"]], "get_settlement_currency() (currencypair method)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.get_settlement_currency"]], "get_settlement_currency() (equity method)": [[22, "nautilus_trader.model.instruments.equity.Equity.get_settlement_currency"]], "get_settlement_currency() (futurescontract method)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.get_settlement_currency"]], "get_settlement_currency() (instrument method)": [[22, "nautilus_trader.model.instruments.base.Instrument.get_settlement_currency"]], "get_settlement_currency() (optionscontract method)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.get_settlement_currency"]], "id (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.id"]], "id (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.id"]], "id (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.id"]], "id (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.id"]], "id (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.id"]], "id (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.id"]], "id (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.id"]], "id (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.id"]], "id (syntheticinstrument attribute)": [[22, "nautilus_trader.model.instruments.synthetic.SyntheticInstrument.id"]], "info (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.info"]], "info (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.info"]], "info (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.info"]], "info (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.info"]], "info (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.info"]], "info (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.info"]], "info (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.info"]], "info (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.info"]], "is_inverse (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.is_inverse"]], "is_inverse (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.is_inverse"]], "is_inverse (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.is_inverse"]], "is_inverse (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.is_inverse"]], "is_inverse (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.is_inverse"]], "is_inverse (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.is_inverse"]], "is_inverse (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.is_inverse"]], "is_inverse (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.is_inverse"]], "is_quanto (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.is_quanto"]], "lot_size (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.lot_size"]], "lot_size (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.lot_size"]], "lot_size (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.lot_size"]], "lot_size (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.lot_size"]], "lot_size (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.lot_size"]], "lot_size (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.lot_size"]], "lot_size (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.lot_size"]], "lot_size (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.lot_size"]], "make_price() (bettinginstrument method)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.make_price"]], "make_price() (cryptofuture method)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.make_price"]], "make_price() (cryptoperpetual method)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.make_price"]], "make_price() (currencypair method)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.make_price"]], "make_price() (equity method)": [[22, "nautilus_trader.model.instruments.equity.Equity.make_price"]], "make_price() (futurescontract method)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.make_price"]], "make_price() (instrument method)": [[22, "nautilus_trader.model.instruments.base.Instrument.make_price"]], "make_price() (optionscontract method)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.make_price"]], "make_qty() (bettinginstrument method)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.make_qty"]], "make_qty() (cryptofuture method)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.make_qty"]], "make_qty() (cryptoperpetual method)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.make_qty"]], "make_qty() (currencypair method)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.make_qty"]], "make_qty() (equity method)": [[22, "nautilus_trader.model.instruments.equity.Equity.make_qty"]], "make_qty() (futurescontract method)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.make_qty"]], "make_qty() (instrument method)": [[22, "nautilus_trader.model.instruments.base.Instrument.make_qty"]], "make_qty() (optionscontract method)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.make_qty"]], "make_symbol() (in module nautilus_trader.model.instruments.betting)": [[22, "nautilus_trader.model.instruments.betting.make_symbol"]], "maker_fee (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.maker_fee"]], "maker_fee (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.maker_fee"]], "maker_fee (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.maker_fee"]], "maker_fee (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.maker_fee"]], "maker_fee (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.maker_fee"]], "maker_fee (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.maker_fee"]], "maker_fee (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.maker_fee"]], "maker_fee (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.maker_fee"]], "margin_init (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.margin_init"]], "margin_init (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.margin_init"]], "margin_init (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.margin_init"]], "margin_init (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.margin_init"]], "margin_init (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.margin_init"]], "margin_init (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.margin_init"]], "margin_init (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.margin_init"]], "margin_init (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.margin_init"]], "margin_maint (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.margin_maint"]], "margin_maint (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.margin_maint"]], "margin_maint (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.margin_maint"]], "margin_maint (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.margin_maint"]], "margin_maint (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.margin_maint"]], "margin_maint (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.margin_maint"]], "margin_maint (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.margin_maint"]], "margin_maint (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.margin_maint"]], "max_notional (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.max_notional"]], "max_notional (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.max_notional"]], "max_notional (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.max_notional"]], "max_notional (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.max_notional"]], "max_notional (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.max_notional"]], "max_notional (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.max_notional"]], "max_notional (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.max_notional"]], "max_notional (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.max_notional"]], "max_price (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.max_price"]], "max_price (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.max_price"]], "max_price (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.max_price"]], "max_price (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.max_price"]], "max_price (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.max_price"]], "max_price (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.max_price"]], "max_price (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.max_price"]], "max_price (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.max_price"]], "max_quantity (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.max_quantity"]], "max_quantity (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.max_quantity"]], "max_quantity (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.max_quantity"]], "max_quantity (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.max_quantity"]], "max_quantity (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.max_quantity"]], "max_quantity (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.max_quantity"]], "max_quantity (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.max_quantity"]], "max_quantity (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.max_quantity"]], "min_notional (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.min_notional"]], "min_notional (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.min_notional"]], "min_notional (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.min_notional"]], "min_notional (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.min_notional"]], "min_notional (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.min_notional"]], "min_notional (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.min_notional"]], "min_notional (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.min_notional"]], "min_notional (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.min_notional"]], "min_price (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.min_price"]], "min_price (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.min_price"]], "min_price (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.min_price"]], "min_price (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.min_price"]], "min_price (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.min_price"]], "min_price (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.min_price"]], "min_price (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.min_price"]], "min_price (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.min_price"]], "min_quantity (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.min_quantity"]], "min_quantity (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.min_quantity"]], "min_quantity (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.min_quantity"]], "min_quantity (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.min_quantity"]], "min_quantity (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.min_quantity"]], "min_quantity (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.min_quantity"]], "min_quantity (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.min_quantity"]], "min_quantity (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.min_quantity"]], "multiplier (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.multiplier"]], "multiplier (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.multiplier"]], "multiplier (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.multiplier"]], "multiplier (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.multiplier"]], "multiplier (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.multiplier"]], "multiplier (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.multiplier"]], "multiplier (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.multiplier"]], "multiplier (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.multiplier"]], "native_symbol (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.native_symbol"]], "native_symbol (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.native_symbol"]], "native_symbol (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.native_symbol"]], "native_symbol (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.native_symbol"]], "native_symbol (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.native_symbol"]], "native_symbol (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.native_symbol"]], "native_symbol (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.native_symbol"]], "native_symbol (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.native_symbol"]], "nautilus_trader.model.instruments": [[22, "module-nautilus_trader.model.instruments"]], "nautilus_trader.model.instruments.base": [[22, "module-nautilus_trader.model.instruments.base"]], "nautilus_trader.model.instruments.betting": [[22, "module-nautilus_trader.model.instruments.betting"]], "nautilus_trader.model.instruments.crypto_future": [[22, "module-nautilus_trader.model.instruments.crypto_future"]], "nautilus_trader.model.instruments.crypto_perpetual": [[22, "module-nautilus_trader.model.instruments.crypto_perpetual"]], "nautilus_trader.model.instruments.currency_pair": [[22, "module-nautilus_trader.model.instruments.currency_pair"]], "nautilus_trader.model.instruments.equity": [[22, "module-nautilus_trader.model.instruments.equity"]], "nautilus_trader.model.instruments.futures_contract": [[22, "module-nautilus_trader.model.instruments.futures_contract"]], "nautilus_trader.model.instruments.options_contract": [[22, "module-nautilus_trader.model.instruments.options_contract"]], "nautilus_trader.model.instruments.synthetic": [[22, "module-nautilus_trader.model.instruments.synthetic"]], "next_ask_price() (bettinginstrument method)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.next_ask_price"]], "next_ask_price() (cryptofuture method)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.next_ask_price"]], "next_ask_price() (cryptoperpetual method)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.next_ask_price"]], "next_ask_price() (currencypair method)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.next_ask_price"]], "next_ask_price() (equity method)": [[22, "nautilus_trader.model.instruments.equity.Equity.next_ask_price"]], "next_ask_price() (futurescontract method)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.next_ask_price"]], "next_ask_price() (instrument method)": [[22, "nautilus_trader.model.instruments.base.Instrument.next_ask_price"]], "next_ask_price() (optionscontract method)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.next_ask_price"]], "next_bid_price() (bettinginstrument method)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.next_bid_price"]], "next_bid_price() (cryptofuture method)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.next_bid_price"]], "next_bid_price() (cryptoperpetual method)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.next_bid_price"]], "next_bid_price() (currencypair method)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.next_bid_price"]], "next_bid_price() (equity method)": [[22, "nautilus_trader.model.instruments.equity.Equity.next_bid_price"]], "next_bid_price() (futurescontract method)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.next_bid_price"]], "next_bid_price() (instrument method)": [[22, "nautilus_trader.model.instruments.base.Instrument.next_bid_price"]], "next_bid_price() (optionscontract method)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.next_bid_price"]], "notional_value() (bettinginstrument method)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.notional_value"]], "notional_value() (cryptofuture method)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.notional_value"]], "notional_value() (cryptoperpetual method)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.notional_value"]], "notional_value() (currencypair method)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.notional_value"]], "notional_value() (equity method)": [[22, "nautilus_trader.model.instruments.equity.Equity.notional_value"]], "notional_value() (futurescontract method)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.notional_value"]], "notional_value() (instrument method)": [[22, "nautilus_trader.model.instruments.base.Instrument.notional_value"]], "notional_value() (optionscontract method)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.notional_value"]], "price_increment (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.price_increment"]], "price_increment (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.price_increment"]], "price_increment (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.price_increment"]], "price_increment (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.price_increment"]], "price_increment (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.price_increment"]], "price_increment (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.price_increment"]], "price_increment (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.price_increment"]], "price_increment (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.price_increment"]], "price_increment (syntheticinstrument attribute)": [[22, "nautilus_trader.model.instruments.synthetic.SyntheticInstrument.price_increment"]], "price_precision (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.price_precision"]], "price_precision (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.price_precision"]], "price_precision (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.price_precision"]], "price_precision (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.price_precision"]], "price_precision (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.price_precision"]], "price_precision (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.price_precision"]], "price_precision (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.price_precision"]], "price_precision (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.price_precision"]], "price_precision (syntheticinstrument attribute)": [[22, "nautilus_trader.model.instruments.synthetic.SyntheticInstrument.price_precision"]], "quote_currency (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.quote_currency"]], "quote_currency (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.quote_currency"]], "quote_currency (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.quote_currency"]], "quote_currency (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.quote_currency"]], "quote_currency (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.quote_currency"]], "quote_currency (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.quote_currency"]], "quote_currency (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.quote_currency"]], "quote_currency (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.quote_currency"]], "settlement_currency (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.settlement_currency"]], "settlement_currency (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.settlement_currency"]], "size_increment (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.size_increment"]], "size_increment (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.size_increment"]], "size_increment (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.size_increment"]], "size_increment (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.size_increment"]], "size_increment (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.size_increment"]], "size_increment (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.size_increment"]], "size_increment (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.size_increment"]], "size_increment (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.size_increment"]], "size_precision (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.size_precision"]], "size_precision (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.size_precision"]], "size_precision (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.size_precision"]], "size_precision (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.size_precision"]], "size_precision (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.size_precision"]], "size_precision (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.size_precision"]], "size_precision (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.size_precision"]], "size_precision (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.size_precision"]], "symbol (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.symbol"]], "symbol (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.symbol"]], "symbol (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.symbol"]], "symbol (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.symbol"]], "symbol (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.symbol"]], "symbol (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.symbol"]], "symbol (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.symbol"]], "symbol (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.symbol"]], "taker_fee (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.taker_fee"]], "taker_fee (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.taker_fee"]], "taker_fee (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.taker_fee"]], "taker_fee (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.taker_fee"]], "taker_fee (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.taker_fee"]], "taker_fee (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.taker_fee"]], "taker_fee (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.taker_fee"]], "taker_fee (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.taker_fee"]], "tick_scheme_name (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.tick_scheme_name"]], "tick_scheme_name (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.tick_scheme_name"]], "tick_scheme_name (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.tick_scheme_name"]], "tick_scheme_name (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.tick_scheme_name"]], "tick_scheme_name (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.tick_scheme_name"]], "tick_scheme_name (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.tick_scheme_name"]], "tick_scheme_name (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.tick_scheme_name"]], "tick_scheme_name (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.tick_scheme_name"]], "to_dict() (bettinginstrument static method)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.to_dict"]], "to_dict() (cryptofuture static method)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.to_dict"]], "to_dict() (cryptoperpetual static method)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.to_dict"]], "to_dict() (currencypair static method)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.to_dict"]], "to_dict() (equity static method)": [[22, "nautilus_trader.model.instruments.equity.Equity.to_dict"]], "to_dict() (futurescontract static method)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.to_dict"]], "to_dict() (optionscontract static method)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.to_dict"]], "to_dict() (syntheticinstrument static method)": [[22, "nautilus_trader.model.instruments.synthetic.SyntheticInstrument.to_dict"]], "ts_event (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.ts_event"]], "ts_event (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.ts_event"]], "ts_event (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.ts_event"]], "ts_event (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.ts_event"]], "ts_event (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.ts_event"]], "ts_event (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.ts_event"]], "ts_event (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.ts_event"]], "ts_event (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.ts_event"]], "ts_event (syntheticinstrument attribute)": [[22, "nautilus_trader.model.instruments.synthetic.SyntheticInstrument.ts_event"]], "ts_init (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.ts_init"]], "ts_init (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.ts_init"]], "ts_init (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.ts_init"]], "ts_init (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.ts_init"]], "ts_init (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.ts_init"]], "ts_init (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.ts_init"]], "ts_init (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.ts_init"]], "ts_init (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.ts_init"]], "ts_init (syntheticinstrument attribute)": [[22, "nautilus_trader.model.instruments.synthetic.SyntheticInstrument.ts_init"]], "underlying (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.underlying"]], "underlying (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.underlying"]], "venue (bettinginstrument attribute)": [[22, "nautilus_trader.model.instruments.betting.BettingInstrument.venue"]], "venue (cryptofuture attribute)": [[22, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.venue"]], "venue (cryptoperpetual attribute)": [[22, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.venue"]], "venue (currencypair attribute)": [[22, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.venue"]], "venue (equity attribute)": [[22, "nautilus_trader.model.instruments.equity.Equity.venue"]], "venue (futurescontract attribute)": [[22, "nautilus_trader.model.instruments.futures_contract.FuturesContract.venue"]], "venue (instrument attribute)": [[22, "nautilus_trader.model.instruments.base.Instrument.venue"]], "venue (optionscontract attribute)": [[22, "nautilus_trader.model.instruments.options_contract.OptionsContract.venue"]], "accountbalance (class in nautilus_trader.model.objects)": [[23, "nautilus_trader.model.objects.AccountBalance"]], "marginbalance (class in nautilus_trader.model.objects)": [[23, "nautilus_trader.model.objects.MarginBalance"]], "money (class in nautilus_trader.model.objects)": [[23, "nautilus_trader.model.objects.Money"]], "price (class in nautilus_trader.model.objects)": [[23, "nautilus_trader.model.objects.Price"]], "quantity (class in nautilus_trader.model.objects)": [[23, "nautilus_trader.model.objects.Quantity"]], "as_decimal() (money method)": [[23, "nautilus_trader.model.objects.Money.as_decimal"]], "as_decimal() (price method)": [[23, "nautilus_trader.model.objects.Price.as_decimal"]], "as_decimal() (quantity method)": [[23, "nautilus_trader.model.objects.Quantity.as_decimal"]], "as_double() (money method)": [[23, "nautilus_trader.model.objects.Money.as_double"]], "as_double() (price method)": [[23, "nautilus_trader.model.objects.Price.as_double"]], "as_double() (quantity method)": [[23, "nautilus_trader.model.objects.Quantity.as_double"]], "currency (accountbalance attribute)": [[23, "nautilus_trader.model.objects.AccountBalance.currency"]], "currency (marginbalance attribute)": [[23, "nautilus_trader.model.objects.MarginBalance.currency"]], "currency (money attribute)": [[23, "nautilus_trader.model.objects.Money.currency"]], "free (accountbalance attribute)": [[23, "nautilus_trader.model.objects.AccountBalance.free"]], "from_dict() (accountbalance static method)": [[23, "nautilus_trader.model.objects.AccountBalance.from_dict"]], "from_dict() (marginbalance static method)": [[23, "nautilus_trader.model.objects.MarginBalance.from_dict"]], "from_int() (price static method)": [[23, "nautilus_trader.model.objects.Price.from_int"]], "from_int() (quantity static method)": [[23, "nautilus_trader.model.objects.Quantity.from_int"]], "from_raw() (money static method)": [[23, "nautilus_trader.model.objects.Money.from_raw"]], "from_raw() (price static method)": [[23, "nautilus_trader.model.objects.Price.from_raw"]], "from_raw() (quantity static method)": [[23, "nautilus_trader.model.objects.Quantity.from_raw"]], "from_str() (money static method)": [[23, "nautilus_trader.model.objects.Money.from_str"]], "from_str() (price static method)": [[23, "nautilus_trader.model.objects.Price.from_str"]], "from_str() (quantity static method)": [[23, "nautilus_trader.model.objects.Quantity.from_str"]], "initial (marginbalance attribute)": [[23, "nautilus_trader.model.objects.MarginBalance.initial"]], "instrument_id (marginbalance attribute)": [[23, "nautilus_trader.model.objects.MarginBalance.instrument_id"]], "locked (accountbalance attribute)": [[23, "nautilus_trader.model.objects.AccountBalance.locked"]], "maintenance (marginbalance attribute)": [[23, "nautilus_trader.model.objects.MarginBalance.maintenance"]], "nautilus_trader.model.objects": [[23, "module-nautilus_trader.model.objects"]], "precision (price attribute)": [[23, "nautilus_trader.model.objects.Price.precision"]], "precision (quantity attribute)": [[23, "nautilus_trader.model.objects.Quantity.precision"]], "raw_to_f64() (price static method)": [[23, "nautilus_trader.model.objects.Price.raw_to_f64"]], "raw_to_f64() (quantity static method)": [[23, "nautilus_trader.model.objects.Quantity.raw_to_f64"]], "to_dict() (accountbalance method)": [[23, "nautilus_trader.model.objects.AccountBalance.to_dict"]], "to_dict() (marginbalance method)": [[23, "nautilus_trader.model.objects.MarginBalance.to_dict"]], "to_str() (money method)": [[23, "nautilus_trader.model.objects.Money.to_str"]], "to_str() (quantity method)": [[23, "nautilus_trader.model.objects.Quantity.to_str"]], "total (accountbalance attribute)": [[23, "nautilus_trader.model.objects.AccountBalance.total"]], "zero() (quantity static method)": [[23, "nautilus_trader.model.objects.Quantity.zero"]], "orderbook (class in nautilus_trader.model.orderbook.book)": [[24, "nautilus_trader.model.orderbook.book.OrderBook"]], "add() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.add"]], "apply() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.apply"]], "apply_delta() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.apply_delta"]], "apply_deltas() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.apply_deltas"]], "best_ask_price() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.best_ask_price"]], "best_ask_size() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.best_ask_size"]], "best_bid_price() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.best_bid_price"]], "best_bid_size() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.best_bid_size"]], "book_type (orderbook attribute)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.book_type"]], "check_integrity() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.check_integrity"]], "clear() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.clear"]], "clear_asks() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.clear_asks"]], "clear_bids() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.clear_bids"]], "count (orderbook attribute)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.count"]], "delete() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.delete"]], "fully_qualified_name() (orderbook class method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.fully_qualified_name"]], "instrument_id (orderbook attribute)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.instrument_id"]], "midpoint() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.midpoint"]], "nautilus_trader.model.orderbook": [[24, "module-nautilus_trader.model.orderbook"]], "nautilus_trader.model.orderbook.book": [[24, "module-nautilus_trader.model.orderbook.book"]], "pprint() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.pprint"]], "reset() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.reset"]], "sequence (orderbook attribute)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.sequence"]], "simulate_fills() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.simulate_fills"]], "spread() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.spread"]], "ts_event (orderbook attribute)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.ts_event"]], "ts_init (orderbook attribute)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.ts_init"]], "ts_last (orderbook attribute)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.ts_last"]], "update() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.update"]], "update_quote_tick() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.update_quote_tick"]], "update_trade_tick() (orderbook method)": [[24, "nautilus_trader.model.orderbook.book.OrderBook.update_trade_tick"]], "limitiftouchedorder (class in nautilus_trader.model.orders.limit_if_touched)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder"]], "limitorder (class in nautilus_trader.model.orders.limit)": [[25, "nautilus_trader.model.orders.limit.LimitOrder"]], "marketiftouchedorder (class in nautilus_trader.model.orders.market_if_touched)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder"]], "marketorder (class in nautilus_trader.model.orders.market)": [[25, "nautilus_trader.model.orders.market.MarketOrder"]], "markettolimitorder (class in nautilus_trader.model.orders.market_to_limit)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder"]], "order (class in nautilus_trader.model.orders.base)": [[25, "nautilus_trader.model.orders.base.Order"]], "orderlist (class in nautilus_trader.model.orders.list)": [[25, "nautilus_trader.model.orders.list.OrderList"]], "stoplimitorder (class in nautilus_trader.model.orders.stop_limit)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder"]], "stopmarketorder (class in nautilus_trader.model.orders.stop_market)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder"]], "trailingstoplimitorder (class in nautilus_trader.model.orders.trailing_stop_limit)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder"]], "trailingstopmarketorder (class in nautilus_trader.model.orders.trailing_stop_market)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder"]], "account_id (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.account_id"]], "account_id (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.account_id"]], "account_id (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.account_id"]], "account_id (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.account_id"]], "account_id (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.account_id"]], "account_id (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.account_id"]], "account_id (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.account_id"]], "account_id (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.account_id"]], "account_id (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.account_id"]], "account_id (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.account_id"]], "apply() (limitiftouchedorder method)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.apply"]], "apply() (limitorder method)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.apply"]], "apply() (marketiftouchedorder method)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.apply"]], "apply() (marketorder method)": [[25, "nautilus_trader.model.orders.market.MarketOrder.apply"]], "apply() (markettolimitorder method)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.apply"]], "apply() (order method)": [[25, "nautilus_trader.model.orders.base.Order.apply"]], "apply() (stoplimitorder method)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.apply"]], "apply() (stopmarketorder method)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.apply"]], "apply() (trailingstoplimitorder method)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.apply"]], "apply() (trailingstopmarketorder method)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.apply"]], "avg_px (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.avg_px"]], "avg_px (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.avg_px"]], "avg_px (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.avg_px"]], "avg_px (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.avg_px"]], "avg_px (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.avg_px"]], "avg_px (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.avg_px"]], "avg_px (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.avg_px"]], "avg_px (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.avg_px"]], "avg_px (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.avg_px"]], "avg_px (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.avg_px"]], "client_order_id (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.client_order_id"]], "client_order_id (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.client_order_id"]], "client_order_id (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.client_order_id"]], "client_order_id (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.client_order_id"]], "client_order_id (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.client_order_id"]], "client_order_id (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.client_order_id"]], "client_order_id (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.client_order_id"]], "client_order_id (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.client_order_id"]], "client_order_id (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.client_order_id"]], "client_order_id (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.client_order_id"]], "closing_side() (limitiftouchedorder static method)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.closing_side"]], "closing_side() (limitorder static method)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.closing_side"]], "closing_side() (marketiftouchedorder static method)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.closing_side"]], "closing_side() (marketorder static method)": [[25, "nautilus_trader.model.orders.market.MarketOrder.closing_side"]], "closing_side() (markettolimitorder static method)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.closing_side"]], "closing_side() (order static method)": [[25, "nautilus_trader.model.orders.base.Order.closing_side"]], "closing_side() (stoplimitorder static method)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.closing_side"]], "closing_side() (stopmarketorder static method)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.closing_side"]], "closing_side() (trailingstoplimitorder static method)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.closing_side"]], "closing_side() (trailingstopmarketorder static method)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.closing_side"]], "contingency_type (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.contingency_type"]], "contingency_type (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.contingency_type"]], "contingency_type (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.contingency_type"]], "contingency_type (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.contingency_type"]], "contingency_type (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.contingency_type"]], "contingency_type (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.contingency_type"]], "contingency_type (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.contingency_type"]], "contingency_type (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.contingency_type"]], "contingency_type (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.contingency_type"]], "contingency_type (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.contingency_type"]], "display_qty (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.display_qty"]], "display_qty (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.display_qty"]], "display_qty (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.display_qty"]], "display_qty (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.display_qty"]], "display_qty (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.display_qty"]], "emulation_trigger (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.emulation_trigger"]], "emulation_trigger (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.emulation_trigger"]], "emulation_trigger (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.emulation_trigger"]], "emulation_trigger (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.emulation_trigger"]], "emulation_trigger (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.emulation_trigger"]], "emulation_trigger (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.emulation_trigger"]], "emulation_trigger (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.emulation_trigger"]], "emulation_trigger (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.emulation_trigger"]], "emulation_trigger (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.emulation_trigger"]], "emulation_trigger (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.emulation_trigger"]], "event_count (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.event_count"]], "event_count (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.event_count"]], "event_count (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.event_count"]], "event_count (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.event_count"]], "event_count (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.event_count"]], "event_count (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.event_count"]], "event_count (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.event_count"]], "event_count (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.event_count"]], "event_count (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.event_count"]], "event_count (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.event_count"]], "events (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.events"]], "events (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.events"]], "events (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.events"]], "events (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.events"]], "events (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.events"]], "events (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.events"]], "events (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.events"]], "events (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.events"]], "events (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.events"]], "events (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.events"]], "exec_algorithm_id (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.exec_algorithm_id"]], "exec_algorithm_id (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.exec_algorithm_id"]], "exec_algorithm_id (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.exec_algorithm_id"]], "exec_algorithm_id (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.exec_algorithm_id"]], "exec_algorithm_id (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.exec_algorithm_id"]], "exec_algorithm_id (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.exec_algorithm_id"]], "exec_algorithm_id (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.exec_algorithm_id"]], "exec_algorithm_id (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.exec_algorithm_id"]], "exec_algorithm_id (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.exec_algorithm_id"]], "exec_algorithm_id (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.exec_algorithm_id"]], "exec_algorithm_params (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.exec_algorithm_params"]], "exec_algorithm_params (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.exec_algorithm_params"]], "exec_algorithm_params (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.exec_algorithm_params"]], "exec_algorithm_params (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.exec_algorithm_params"]], "exec_algorithm_params (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.exec_algorithm_params"]], "exec_algorithm_params (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.exec_algorithm_params"]], "exec_algorithm_params (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.exec_algorithm_params"]], "exec_algorithm_params (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.exec_algorithm_params"]], "exec_algorithm_params (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.exec_algorithm_params"]], "exec_algorithm_params (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.exec_algorithm_params"]], "exec_spawn_id (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.exec_spawn_id"]], "exec_spawn_id (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.exec_spawn_id"]], "exec_spawn_id (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.exec_spawn_id"]], "exec_spawn_id (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.exec_spawn_id"]], "exec_spawn_id (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.exec_spawn_id"]], "exec_spawn_id (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.exec_spawn_id"]], "exec_spawn_id (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.exec_spawn_id"]], "exec_spawn_id (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.exec_spawn_id"]], "exec_spawn_id (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.exec_spawn_id"]], "exec_spawn_id (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.exec_spawn_id"]], "expire_time (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.expire_time"]], "expire_time (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.expire_time"]], "expire_time (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.expire_time"]], "expire_time (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.expire_time"]], "expire_time (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.expire_time"]], "expire_time (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.expire_time"]], "expire_time (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.expire_time"]], "expire_time (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.expire_time"]], "expire_time_ns (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.expire_time_ns"]], "expire_time_ns (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.expire_time_ns"]], "expire_time_ns (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.expire_time_ns"]], "expire_time_ns (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.expire_time_ns"]], "expire_time_ns (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.expire_time_ns"]], "expire_time_ns (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.expire_time_ns"]], "expire_time_ns (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.expire_time_ns"]], "expire_time_ns (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.expire_time_ns"]], "filled_qty (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.filled_qty"]], "filled_qty (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.filled_qty"]], "filled_qty (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.filled_qty"]], "filled_qty (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.filled_qty"]], "filled_qty (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.filled_qty"]], "filled_qty (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.filled_qty"]], "filled_qty (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.filled_qty"]], "filled_qty (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.filled_qty"]], "filled_qty (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.filled_qty"]], "filled_qty (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.filled_qty"]], "first (orderlist attribute)": [[25, "nautilus_trader.model.orders.list.OrderList.first"]], "has_price (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.has_price"]], "has_price (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.has_price"]], "has_price (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.has_price"]], "has_price (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.has_price"]], "has_price (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.has_price"]], "has_price (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.has_price"]], "has_price (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.has_price"]], "has_price (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.has_price"]], "has_price (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.has_price"]], "has_price (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.has_price"]], "has_trigger_price (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.has_trigger_price"]], "has_trigger_price (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.has_trigger_price"]], "has_trigger_price (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.has_trigger_price"]], "has_trigger_price (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.has_trigger_price"]], "has_trigger_price (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.has_trigger_price"]], "has_trigger_price (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.has_trigger_price"]], "has_trigger_price (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.has_trigger_price"]], "has_trigger_price (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.has_trigger_price"]], "has_trigger_price (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.has_trigger_price"]], "has_trigger_price (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.has_trigger_price"]], "id (orderlist attribute)": [[25, "nautilus_trader.model.orders.list.OrderList.id"]], "info() (limitiftouchedorder method)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.info"]], "info() (limitorder method)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.info"]], "info() (marketiftouchedorder method)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.info"]], "info() (marketorder method)": [[25, "nautilus_trader.model.orders.market.MarketOrder.info"]], "info() (markettolimitorder method)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.info"]], "info() (order method)": [[25, "nautilus_trader.model.orders.base.Order.info"]], "info() (stoplimitorder method)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.info"]], "info() (stopmarketorder method)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.info"]], "info() (trailingstoplimitorder method)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.info"]], "info() (trailingstopmarketorder method)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.info"]], "init_event (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.init_event"]], "init_event (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.init_event"]], "init_event (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.init_event"]], "init_event (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.init_event"]], "init_event (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.init_event"]], "init_event (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.init_event"]], "init_event (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.init_event"]], "init_event (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.init_event"]], "init_event (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.init_event"]], "init_event (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.init_event"]], "init_id (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.init_id"]], "init_id (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.init_id"]], "init_id (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.init_id"]], "init_id (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.init_id"]], "init_id (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.init_id"]], "init_id (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.init_id"]], "init_id (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.init_id"]], "init_id (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.init_id"]], "init_id (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.init_id"]], "init_id (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.init_id"]], "instrument_id (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.instrument_id"]], "instrument_id (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.instrument_id"]], "instrument_id (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.instrument_id"]], "instrument_id (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.instrument_id"]], "instrument_id (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.instrument_id"]], "instrument_id (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.instrument_id"]], "instrument_id (orderlist attribute)": [[25, "nautilus_trader.model.orders.list.OrderList.instrument_id"]], "instrument_id (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.instrument_id"]], "instrument_id (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.instrument_id"]], "instrument_id (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.instrument_id"]], "instrument_id (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.instrument_id"]], "is_aggressive (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_aggressive"]], "is_aggressive (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_aggressive"]], "is_aggressive (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_aggressive"]], "is_aggressive (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_aggressive"]], "is_aggressive (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_aggressive"]], "is_aggressive (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_aggressive"]], "is_aggressive (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_aggressive"]], "is_aggressive (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_aggressive"]], "is_aggressive (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_aggressive"]], "is_aggressive (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_aggressive"]], "is_buy (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_buy"]], "is_buy (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_buy"]], "is_buy (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_buy"]], "is_buy (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_buy"]], "is_buy (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_buy"]], "is_buy (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_buy"]], "is_buy (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_buy"]], "is_buy (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_buy"]], "is_buy (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_buy"]], "is_buy (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_buy"]], "is_canceled (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_canceled"]], "is_canceled (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_canceled"]], "is_canceled (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_canceled"]], "is_canceled (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_canceled"]], "is_canceled (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_canceled"]], "is_canceled (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_canceled"]], "is_canceled (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_canceled"]], "is_canceled (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_canceled"]], "is_canceled (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_canceled"]], "is_canceled (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_canceled"]], "is_child_order (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_child_order"]], "is_child_order (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_child_order"]], "is_child_order (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_child_order"]], "is_child_order (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_child_order"]], "is_child_order (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_child_order"]], "is_child_order (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_child_order"]], "is_child_order (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_child_order"]], "is_child_order (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_child_order"]], "is_child_order (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_child_order"]], "is_child_order (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_child_order"]], "is_closed (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_closed"]], "is_closed (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_closed"]], "is_closed (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_closed"]], "is_closed (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_closed"]], "is_closed (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_closed"]], "is_closed (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_closed"]], "is_closed (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_closed"]], "is_closed (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_closed"]], "is_closed (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_closed"]], "is_closed (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_closed"]], "is_contingency (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_contingency"]], "is_contingency (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_contingency"]], "is_contingency (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_contingency"]], "is_contingency (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_contingency"]], "is_contingency (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_contingency"]], "is_contingency (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_contingency"]], "is_contingency (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_contingency"]], "is_contingency (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_contingency"]], "is_contingency (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_contingency"]], "is_contingency (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_contingency"]], "is_emulated (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_emulated"]], "is_emulated (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_emulated"]], "is_emulated (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_emulated"]], "is_emulated (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_emulated"]], "is_emulated (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_emulated"]], "is_emulated (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_emulated"]], "is_emulated (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_emulated"]], "is_emulated (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_emulated"]], "is_emulated (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_emulated"]], "is_emulated (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_emulated"]], "is_inflight (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_inflight"]], "is_inflight (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_inflight"]], "is_inflight (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_inflight"]], "is_inflight (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_inflight"]], "is_inflight (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_inflight"]], "is_inflight (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_inflight"]], "is_inflight (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_inflight"]], "is_inflight (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_inflight"]], "is_inflight (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_inflight"]], "is_inflight (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_inflight"]], "is_open (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_open"]], "is_open (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_open"]], "is_open (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_open"]], "is_open (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_open"]], "is_open (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_open"]], "is_open (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_open"]], "is_open (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_open"]], "is_open (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_open"]], "is_open (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_open"]], "is_open (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_open"]], "is_parent_order (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_parent_order"]], "is_parent_order (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_parent_order"]], "is_parent_order (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_parent_order"]], "is_parent_order (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_parent_order"]], "is_parent_order (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_parent_order"]], "is_parent_order (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_parent_order"]], "is_parent_order (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_parent_order"]], "is_parent_order (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_parent_order"]], "is_parent_order (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_parent_order"]], "is_parent_order (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_parent_order"]], "is_passive (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_passive"]], "is_passive (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_passive"]], "is_passive (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_passive"]], "is_passive (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_passive"]], "is_passive (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_passive"]], "is_passive (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_passive"]], "is_passive (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_passive"]], "is_passive (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_passive"]], "is_passive (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_passive"]], "is_passive (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_passive"]], "is_pending_cancel (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_pending_cancel"]], "is_pending_cancel (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_pending_cancel"]], "is_pending_cancel (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_pending_cancel"]], "is_pending_cancel (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_pending_cancel"]], "is_pending_cancel (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_pending_cancel"]], "is_pending_cancel (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_pending_cancel"]], "is_pending_cancel (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_pending_cancel"]], "is_pending_cancel (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_pending_cancel"]], "is_pending_cancel (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_pending_cancel"]], "is_pending_cancel (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_pending_cancel"]], "is_pending_update (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_pending_update"]], "is_pending_update (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_pending_update"]], "is_pending_update (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_pending_update"]], "is_pending_update (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_pending_update"]], "is_pending_update (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_pending_update"]], "is_pending_update (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_pending_update"]], "is_pending_update (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_pending_update"]], "is_pending_update (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_pending_update"]], "is_pending_update (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_pending_update"]], "is_pending_update (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_pending_update"]], "is_post_only (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_post_only"]], "is_post_only (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_post_only"]], "is_post_only (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_post_only"]], "is_post_only (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_post_only"]], "is_post_only (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_post_only"]], "is_post_only (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_post_only"]], "is_post_only (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_post_only"]], "is_post_only (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_post_only"]], "is_post_only (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_post_only"]], "is_post_only (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_post_only"]], "is_primary (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_primary"]], "is_primary (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_primary"]], "is_primary (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_primary"]], "is_primary (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_primary"]], "is_primary (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_primary"]], "is_primary (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_primary"]], "is_primary (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_primary"]], "is_primary (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_primary"]], "is_primary (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_primary"]], "is_primary (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_primary"]], "is_quote_quantity (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_quote_quantity"]], "is_quote_quantity (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_quote_quantity"]], "is_quote_quantity (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_quote_quantity"]], "is_quote_quantity (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_quote_quantity"]], "is_quote_quantity (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_quote_quantity"]], "is_quote_quantity (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_quote_quantity"]], "is_quote_quantity (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_quote_quantity"]], "is_quote_quantity (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_quote_quantity"]], "is_quote_quantity (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_quote_quantity"]], "is_quote_quantity (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_quote_quantity"]], "is_reduce_only (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_reduce_only"]], "is_reduce_only (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_reduce_only"]], "is_reduce_only (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_reduce_only"]], "is_reduce_only (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_reduce_only"]], "is_reduce_only (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_reduce_only"]], "is_reduce_only (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_reduce_only"]], "is_reduce_only (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_reduce_only"]], "is_reduce_only (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_reduce_only"]], "is_reduce_only (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_reduce_only"]], "is_reduce_only (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_reduce_only"]], "is_sell (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_sell"]], "is_sell (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_sell"]], "is_sell (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_sell"]], "is_sell (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_sell"]], "is_sell (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_sell"]], "is_sell (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_sell"]], "is_sell (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_sell"]], "is_sell (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_sell"]], "is_sell (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_sell"]], "is_sell (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_sell"]], "is_spawned (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_spawned"]], "is_spawned (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.is_spawned"]], "is_spawned (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_spawned"]], "is_spawned (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.is_spawned"]], "is_spawned (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_spawned"]], "is_spawned (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.is_spawned"]], "is_spawned (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_spawned"]], "is_spawned (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_spawned"]], "is_spawned (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_spawned"]], "is_spawned (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_spawned"]], "is_triggered (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_triggered"]], "is_triggered (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_triggered"]], "is_triggered (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_triggered"]], "last_event (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.last_event"]], "last_event (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.last_event"]], "last_event (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.last_event"]], "last_event (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.last_event"]], "last_event (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.last_event"]], "last_event (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.last_event"]], "last_event (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.last_event"]], "last_event (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.last_event"]], "last_event (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.last_event"]], "last_event (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.last_event"]], "last_trade_id (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.last_trade_id"]], "last_trade_id (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.last_trade_id"]], "last_trade_id (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.last_trade_id"]], "last_trade_id (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.last_trade_id"]], "last_trade_id (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.last_trade_id"]], "last_trade_id (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.last_trade_id"]], "last_trade_id (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.last_trade_id"]], "last_trade_id (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.last_trade_id"]], "last_trade_id (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.last_trade_id"]], "last_trade_id (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.last_trade_id"]], "leaves_qty (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.leaves_qty"]], "leaves_qty (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.leaves_qty"]], "leaves_qty (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.leaves_qty"]], "leaves_qty (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.leaves_qty"]], "leaves_qty (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.leaves_qty"]], "leaves_qty (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.leaves_qty"]], "leaves_qty (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.leaves_qty"]], "leaves_qty (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.leaves_qty"]], "leaves_qty (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.leaves_qty"]], "leaves_qty (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.leaves_qty"]], "limit_offset (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.limit_offset"]], "linked_order_ids (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.linked_order_ids"]], "linked_order_ids (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.linked_order_ids"]], "linked_order_ids (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.linked_order_ids"]], "linked_order_ids (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.linked_order_ids"]], "linked_order_ids (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.linked_order_ids"]], "linked_order_ids (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.linked_order_ids"]], "linked_order_ids (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.linked_order_ids"]], "linked_order_ids (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.linked_order_ids"]], "linked_order_ids (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.linked_order_ids"]], "linked_order_ids (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.linked_order_ids"]], "liquidity_side (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.liquidity_side"]], "liquidity_side (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.liquidity_side"]], "liquidity_side (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.liquidity_side"]], "liquidity_side (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.liquidity_side"]], "liquidity_side (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.liquidity_side"]], "liquidity_side (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.liquidity_side"]], "liquidity_side (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.liquidity_side"]], "liquidity_side (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.liquidity_side"]], "liquidity_side (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.liquidity_side"]], "liquidity_side (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.liquidity_side"]], "nautilus_trader.model.orders": [[25, "module-nautilus_trader.model.orders"]], "nautilus_trader.model.orders.base": [[25, "module-nautilus_trader.model.orders.base"]], "nautilus_trader.model.orders.limit": [[25, "module-nautilus_trader.model.orders.limit"]], "nautilus_trader.model.orders.limit_if_touched": [[25, "module-nautilus_trader.model.orders.limit_if_touched"]], "nautilus_trader.model.orders.list": [[25, "module-nautilus_trader.model.orders.list"]], "nautilus_trader.model.orders.market": [[25, "module-nautilus_trader.model.orders.market"]], "nautilus_trader.model.orders.market_if_touched": [[25, "module-nautilus_trader.model.orders.market_if_touched"]], "nautilus_trader.model.orders.market_to_limit": [[25, "module-nautilus_trader.model.orders.market_to_limit"]], "nautilus_trader.model.orders.stop_limit": [[25, "module-nautilus_trader.model.orders.stop_limit"]], "nautilus_trader.model.orders.stop_market": [[25, "module-nautilus_trader.model.orders.stop_market"]], "nautilus_trader.model.orders.trailing_stop_limit": [[25, "module-nautilus_trader.model.orders.trailing_stop_limit"]], "nautilus_trader.model.orders.trailing_stop_market": [[25, "module-nautilus_trader.model.orders.trailing_stop_market"]], "opposite_side() (limitiftouchedorder static method)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.opposite_side"]], "opposite_side() (limitorder static method)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.opposite_side"]], "opposite_side() (marketiftouchedorder static method)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.opposite_side"]], "opposite_side() (marketorder static method)": [[25, "nautilus_trader.model.orders.market.MarketOrder.opposite_side"]], "opposite_side() (markettolimitorder static method)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.opposite_side"]], "opposite_side() (order static method)": [[25, "nautilus_trader.model.orders.base.Order.opposite_side"]], "opposite_side() (stoplimitorder static method)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.opposite_side"]], "opposite_side() (stopmarketorder static method)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.opposite_side"]], "opposite_side() (trailingstoplimitorder static method)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.opposite_side"]], "opposite_side() (trailingstopmarketorder static method)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.opposite_side"]], "order_list_id (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.order_list_id"]], "order_list_id (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.order_list_id"]], "order_list_id (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.order_list_id"]], "order_list_id (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.order_list_id"]], "order_list_id (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.order_list_id"]], "order_list_id (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.order_list_id"]], "order_list_id (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.order_list_id"]], "order_list_id (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.order_list_id"]], "order_list_id (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.order_list_id"]], "order_list_id (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.order_list_id"]], "order_type (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.order_type"]], "order_type (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.order_type"]], "order_type (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.order_type"]], "order_type (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.order_type"]], "order_type (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.order_type"]], "order_type (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.order_type"]], "order_type (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.order_type"]], "order_type (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.order_type"]], "order_type (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.order_type"]], "order_type (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.order_type"]], "orders (orderlist attribute)": [[25, "nautilus_trader.model.orders.list.OrderList.orders"]], "parent_order_id (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.parent_order_id"]], "parent_order_id (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.parent_order_id"]], "parent_order_id (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.parent_order_id"]], "parent_order_id (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.parent_order_id"]], "parent_order_id (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.parent_order_id"]], "parent_order_id (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.parent_order_id"]], "parent_order_id (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.parent_order_id"]], "parent_order_id (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.parent_order_id"]], "parent_order_id (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.parent_order_id"]], "parent_order_id (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.parent_order_id"]], "position_id (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.position_id"]], "position_id (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.position_id"]], "position_id (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.position_id"]], "position_id (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.position_id"]], "position_id (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.position_id"]], "position_id (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.position_id"]], "position_id (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.position_id"]], "position_id (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.position_id"]], "position_id (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.position_id"]], "position_id (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.position_id"]], "price (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.price"]], "price (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.price"]], "price (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.price"]], "price (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.price"]], "price (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.price"]], "quantity (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.quantity"]], "quantity (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.quantity"]], "quantity (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.quantity"]], "quantity (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.quantity"]], "quantity (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.quantity"]], "quantity (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.quantity"]], "quantity (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.quantity"]], "quantity (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.quantity"]], "quantity (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.quantity"]], "quantity (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.quantity"]], "side (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.side"]], "side (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.side"]], "side (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.side"]], "side (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.side"]], "side (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.side"]], "side (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.side"]], "side (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.side"]], "side (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.side"]], "side (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.side"]], "side (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.side"]], "side_string (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.side_string"]], "side_string (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.side_string"]], "side_string (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.side_string"]], "side_string (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.side_string"]], "side_string (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.side_string"]], "side_string (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.side_string"]], "side_string (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.side_string"]], "side_string (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.side_string"]], "side_string (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.side_string"]], "side_string (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.side_string"]], "signed_decimal_qty() (limitiftouchedorder method)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.signed_decimal_qty"]], "signed_decimal_qty() (limitorder method)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.signed_decimal_qty"]], "signed_decimal_qty() (marketiftouchedorder method)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.signed_decimal_qty"]], "signed_decimal_qty() (marketorder method)": [[25, "nautilus_trader.model.orders.market.MarketOrder.signed_decimal_qty"]], "signed_decimal_qty() (markettolimitorder method)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.signed_decimal_qty"]], "signed_decimal_qty() (order method)": [[25, "nautilus_trader.model.orders.base.Order.signed_decimal_qty"]], "signed_decimal_qty() (stoplimitorder method)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.signed_decimal_qty"]], "signed_decimal_qty() (stopmarketorder method)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.signed_decimal_qty"]], "signed_decimal_qty() (trailingstoplimitorder method)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.signed_decimal_qty"]], "signed_decimal_qty() (trailingstopmarketorder method)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.signed_decimal_qty"]], "slippage (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.slippage"]], "slippage (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.slippage"]], "slippage (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.slippage"]], "slippage (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.slippage"]], "slippage (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.slippage"]], "slippage (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.slippage"]], "slippage (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.slippage"]], "slippage (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.slippage"]], "slippage (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.slippage"]], "slippage (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.slippage"]], "status (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.status"]], "status (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.status"]], "status (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.status"]], "status (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.status"]], "status (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.status"]], "status (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.status"]], "status (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.status"]], "status (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.status"]], "status (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.status"]], "status (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.status"]], "strategy_id (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.strategy_id"]], "strategy_id (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.strategy_id"]], "strategy_id (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.strategy_id"]], "strategy_id (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.strategy_id"]], "strategy_id (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.strategy_id"]], "strategy_id (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.strategy_id"]], "strategy_id (orderlist attribute)": [[25, "nautilus_trader.model.orders.list.OrderList.strategy_id"]], "strategy_id (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.strategy_id"]], "strategy_id (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.strategy_id"]], "strategy_id (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.strategy_id"]], "strategy_id (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.strategy_id"]], "symbol (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.symbol"]], "symbol (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.symbol"]], "symbol (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.symbol"]], "symbol (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.symbol"]], "symbol (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.symbol"]], "symbol (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.symbol"]], "symbol (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.symbol"]], "symbol (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.symbol"]], "symbol (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.symbol"]], "symbol (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.symbol"]], "tags (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.tags"]], "tags (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.tags"]], "tags (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.tags"]], "tags (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.tags"]], "tags (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.tags"]], "tags (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.tags"]], "tags (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.tags"]], "tags (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.tags"]], "tags (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.tags"]], "tags (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.tags"]], "time_in_force (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.time_in_force"]], "time_in_force (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.time_in_force"]], "time_in_force (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.time_in_force"]], "time_in_force (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.time_in_force"]], "time_in_force (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.time_in_force"]], "time_in_force (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.time_in_force"]], "time_in_force (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.time_in_force"]], "time_in_force (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.time_in_force"]], "time_in_force (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.time_in_force"]], "time_in_force (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.time_in_force"]], "to_dict() (limitiftouchedorder method)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.to_dict"]], "to_dict() (limitorder method)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.to_dict"]], "to_dict() (marketiftouchedorder method)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.to_dict"]], "to_dict() (marketorder method)": [[25, "nautilus_trader.model.orders.market.MarketOrder.to_dict"]], "to_dict() (markettolimitorder method)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.to_dict"]], "to_dict() (order method)": [[25, "nautilus_trader.model.orders.base.Order.to_dict"]], "to_dict() (stoplimitorder method)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.to_dict"]], "to_dict() (stopmarketorder method)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.to_dict"]], "to_dict() (trailingstoplimitorder method)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.to_dict"]], "to_dict() (trailingstopmarketorder method)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.to_dict"]], "trade_ids (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.trade_ids"]], "trade_ids (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.trade_ids"]], "trade_ids (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.trade_ids"]], "trade_ids (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.trade_ids"]], "trade_ids (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.trade_ids"]], "trade_ids (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.trade_ids"]], "trade_ids (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.trade_ids"]], "trade_ids (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.trade_ids"]], "trade_ids (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.trade_ids"]], "trade_ids (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.trade_ids"]], "trader_id (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.trader_id"]], "trader_id (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.trader_id"]], "trader_id (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.trader_id"]], "trader_id (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.trader_id"]], "trader_id (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.trader_id"]], "trader_id (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.trader_id"]], "trader_id (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.trader_id"]], "trader_id (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.trader_id"]], "trader_id (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.trader_id"]], "trader_id (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.trader_id"]], "trailing_offset (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.trailing_offset"]], "trailing_offset (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.trailing_offset"]], "trailing_offset_type (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.trailing_offset_type"]], "trailing_offset_type (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.trailing_offset_type"]], "transform_py() (limitorder static method)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.transform_py"]], "transform_py() (marketorder static method)": [[25, "nautilus_trader.model.orders.market.MarketOrder.transform_py"]], "trigger_instrument_id (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.trigger_instrument_id"]], "trigger_instrument_id (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.trigger_instrument_id"]], "trigger_instrument_id (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.trigger_instrument_id"]], "trigger_instrument_id (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.trigger_instrument_id"]], "trigger_instrument_id (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.trigger_instrument_id"]], "trigger_instrument_id (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.trigger_instrument_id"]], "trigger_instrument_id (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.trigger_instrument_id"]], "trigger_instrument_id (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.trigger_instrument_id"]], "trigger_instrument_id (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.trigger_instrument_id"]], "trigger_instrument_id (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.trigger_instrument_id"]], "trigger_price (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.trigger_price"]], "trigger_price (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.trigger_price"]], "trigger_price (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.trigger_price"]], "trigger_price (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.trigger_price"]], "trigger_price (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.trigger_price"]], "trigger_price (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.trigger_price"]], "trigger_type (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.trigger_type"]], "trigger_type (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.trigger_type"]], "trigger_type (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.trigger_type"]], "trigger_type (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.trigger_type"]], "trigger_type (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.trigger_type"]], "trigger_type (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.trigger_type"]], "ts_init (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.ts_init"]], "ts_init (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.ts_init"]], "ts_init (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.ts_init"]], "ts_init (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.ts_init"]], "ts_init (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.ts_init"]], "ts_init (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.ts_init"]], "ts_init (orderlist attribute)": [[25, "nautilus_trader.model.orders.list.OrderList.ts_init"]], "ts_init (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.ts_init"]], "ts_init (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.ts_init"]], "ts_init (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.ts_init"]], "ts_init (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.ts_init"]], "ts_last (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.ts_last"]], "ts_last (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.ts_last"]], "ts_last (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.ts_last"]], "ts_last (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.ts_last"]], "ts_last (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.ts_last"]], "ts_last (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.ts_last"]], "ts_last (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.ts_last"]], "ts_last (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.ts_last"]], "ts_last (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.ts_last"]], "ts_last (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.ts_last"]], "ts_triggered (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.ts_triggered"]], "ts_triggered (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.ts_triggered"]], "ts_triggered (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.ts_triggered"]], "venue (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.venue"]], "venue (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.venue"]], "venue (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.venue"]], "venue (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.venue"]], "venue (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.venue"]], "venue (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.venue"]], "venue (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.venue"]], "venue (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.venue"]], "venue (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.venue"]], "venue (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.venue"]], "venue_order_id (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.venue_order_id"]], "venue_order_id (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.venue_order_id"]], "venue_order_id (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.venue_order_id"]], "venue_order_id (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.venue_order_id"]], "venue_order_id (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.venue_order_id"]], "venue_order_id (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.venue_order_id"]], "venue_order_id (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.venue_order_id"]], "venue_order_id (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.venue_order_id"]], "venue_order_id (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.venue_order_id"]], "venue_order_id (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.venue_order_id"]], "venue_order_ids (limitiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.venue_order_ids"]], "venue_order_ids (limitorder attribute)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.venue_order_ids"]], "venue_order_ids (marketiftouchedorder attribute)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.venue_order_ids"]], "venue_order_ids (marketorder attribute)": [[25, "nautilus_trader.model.orders.market.MarketOrder.venue_order_ids"]], "venue_order_ids (markettolimitorder attribute)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.venue_order_ids"]], "venue_order_ids (order attribute)": [[25, "nautilus_trader.model.orders.base.Order.venue_order_ids"]], "venue_order_ids (stoplimitorder attribute)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.venue_order_ids"]], "venue_order_ids (stopmarketorder attribute)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.venue_order_ids"]], "venue_order_ids (trailingstoplimitorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.venue_order_ids"]], "venue_order_ids (trailingstopmarketorder attribute)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.venue_order_ids"]], "would_reduce_only() (limitiftouchedorder method)": [[25, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.would_reduce_only"]], "would_reduce_only() (limitorder method)": [[25, "nautilus_trader.model.orders.limit.LimitOrder.would_reduce_only"]], "would_reduce_only() (marketiftouchedorder method)": [[25, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.would_reduce_only"]], "would_reduce_only() (marketorder method)": [[25, "nautilus_trader.model.orders.market.MarketOrder.would_reduce_only"]], "would_reduce_only() (markettolimitorder method)": [[25, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.would_reduce_only"]], "would_reduce_only() (order method)": [[25, "nautilus_trader.model.orders.base.Order.would_reduce_only"]], "would_reduce_only() (stoplimitorder method)": [[25, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.would_reduce_only"]], "would_reduce_only() (stopmarketorder method)": [[25, "nautilus_trader.model.orders.stop_market.StopMarketOrder.would_reduce_only"]], "would_reduce_only() (trailingstoplimitorder method)": [[25, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.would_reduce_only"]], "would_reduce_only() (trailingstopmarketorder method)": [[25, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.would_reduce_only"]], "position (class in nautilus_trader.model.position)": [[26, "nautilus_trader.model.position.Position"]], "account_id (position attribute)": [[26, "nautilus_trader.model.position.Position.account_id"]], "apply() (position method)": [[26, "nautilus_trader.model.position.Position.apply"]], "avg_px_close (position attribute)": [[26, "nautilus_trader.model.position.Position.avg_px_close"]], "avg_px_open (position attribute)": [[26, "nautilus_trader.model.position.Position.avg_px_open"]], "base_currency (position attribute)": [[26, "nautilus_trader.model.position.Position.base_currency"]], "calculate_pnl() (position method)": [[26, "nautilus_trader.model.position.Position.calculate_pnl"]], "client_order_ids (position attribute)": [[26, "nautilus_trader.model.position.Position.client_order_ids"]], "closing_order_id (position attribute)": [[26, "nautilus_trader.model.position.Position.closing_order_id"]], "commissions() (position method)": [[26, "nautilus_trader.model.position.Position.commissions"]], "cost_currency (position attribute)": [[26, "nautilus_trader.model.position.Position.cost_currency"]], "duration_ns (position attribute)": [[26, "nautilus_trader.model.position.Position.duration_ns"]], "entry (position attribute)": [[26, "nautilus_trader.model.position.Position.entry"]], "event_count (position attribute)": [[26, "nautilus_trader.model.position.Position.event_count"]], "events (position attribute)": [[26, "nautilus_trader.model.position.Position.events"]], "id (position attribute)": [[26, "nautilus_trader.model.position.Position.id"]], "info() (position method)": [[26, "nautilus_trader.model.position.Position.info"]], "instrument_id (position attribute)": [[26, "nautilus_trader.model.position.Position.instrument_id"]], "is_closed (position attribute)": [[26, "nautilus_trader.model.position.Position.is_closed"]], "is_inverse (position attribute)": [[26, "nautilus_trader.model.position.Position.is_inverse"]], "is_long (position attribute)": [[26, "nautilus_trader.model.position.Position.is_long"]], "is_open (position attribute)": [[26, "nautilus_trader.model.position.Position.is_open"]], "is_opposite_side() (position method)": [[26, "nautilus_trader.model.position.Position.is_opposite_side"]], "is_short (position attribute)": [[26, "nautilus_trader.model.position.Position.is_short"]], "last_event (position attribute)": [[26, "nautilus_trader.model.position.Position.last_event"]], "last_trade_id (position attribute)": [[26, "nautilus_trader.model.position.Position.last_trade_id"]], "multiplier (position attribute)": [[26, "nautilus_trader.model.position.Position.multiplier"]], "nautilus_trader.model.position": [[26, "module-nautilus_trader.model.position"]], "notional_value() (position method)": [[26, "nautilus_trader.model.position.Position.notional_value"]], "opening_order_id (position attribute)": [[26, "nautilus_trader.model.position.Position.opening_order_id"]], "peak_qty (position attribute)": [[26, "nautilus_trader.model.position.Position.peak_qty"]], "price_precision (position attribute)": [[26, "nautilus_trader.model.position.Position.price_precision"]], "quantity (position attribute)": [[26, "nautilus_trader.model.position.Position.quantity"]], "quote_currency (position attribute)": [[26, "nautilus_trader.model.position.Position.quote_currency"]], "realized_pnl (position attribute)": [[26, "nautilus_trader.model.position.Position.realized_pnl"]], "realized_return (position attribute)": [[26, "nautilus_trader.model.position.Position.realized_return"]], "side (position attribute)": [[26, "nautilus_trader.model.position.Position.side"]], "side_from_order_side() (position static method)": [[26, "nautilus_trader.model.position.Position.side_from_order_side"]], "signed_decimal_qty() (position method)": [[26, "nautilus_trader.model.position.Position.signed_decimal_qty"]], "signed_qty (position attribute)": [[26, "nautilus_trader.model.position.Position.signed_qty"]], "size_precision (position attribute)": [[26, "nautilus_trader.model.position.Position.size_precision"]], "strategy_id (position attribute)": [[26, "nautilus_trader.model.position.Position.strategy_id"]], "symbol (position attribute)": [[26, "nautilus_trader.model.position.Position.symbol"]], "to_dict() (position method)": [[26, "nautilus_trader.model.position.Position.to_dict"]], "total_pnl() (position method)": [[26, "nautilus_trader.model.position.Position.total_pnl"]], "trade_ids (position attribute)": [[26, "nautilus_trader.model.position.Position.trade_ids"]], "trader_id (position attribute)": [[26, "nautilus_trader.model.position.Position.trader_id"]], "ts_closed (position attribute)": [[26, "nautilus_trader.model.position.Position.ts_closed"]], "ts_init (position attribute)": [[26, "nautilus_trader.model.position.Position.ts_init"]], "ts_last (position attribute)": [[26, "nautilus_trader.model.position.Position.ts_last"]], "ts_opened (position attribute)": [[26, "nautilus_trader.model.position.Position.ts_opened"]], "unrealized_pnl() (position method)": [[26, "nautilus_trader.model.position.Position.unrealized_pnl"]], "venue (position attribute)": [[26, "nautilus_trader.model.position.Position.venue"]], "venue_order_ids (position attribute)": [[26, "nautilus_trader.model.position.Position.venue_order_ids"]], "fixedtickscheme (class in nautilus_trader.model.tick_scheme.implementations.fixed)": [[27, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme"]], "tickscheme (class in nautilus_trader.model.tick_scheme.base)": [[27, "nautilus_trader.model.tick_scheme.base.TickScheme"]], "tieredtickscheme (class in nautilus_trader.model.tick_scheme.implementations.tiered)": [[27, "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme"]], "find_tick_index() (tieredtickscheme method)": [[27, "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme.find_tick_index"]], "get_tick_scheme() (in module nautilus_trader.model.tick_scheme.base)": [[27, "nautilus_trader.model.tick_scheme.base.get_tick_scheme"]], "increment (fixedtickscheme attribute)": [[27, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme.increment"]], "list_tick_schemes() (in module nautilus_trader.model.tick_scheme.base)": [[27, "nautilus_trader.model.tick_scheme.base.list_tick_schemes"]], "max_price (fixedtickscheme attribute)": [[27, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme.max_price"]], "max_price (tickscheme attribute)": [[27, "nautilus_trader.model.tick_scheme.base.TickScheme.max_price"]], "max_price (tieredtickscheme attribute)": [[27, "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme.max_price"]], "min_price (fixedtickscheme attribute)": [[27, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme.min_price"]], "min_price (tickscheme attribute)": [[27, "nautilus_trader.model.tick_scheme.base.TickScheme.min_price"]], "min_price (tieredtickscheme attribute)": [[27, "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme.min_price"]], "name (fixedtickscheme attribute)": [[27, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme.name"]], "name (tickscheme attribute)": [[27, "nautilus_trader.model.tick_scheme.base.TickScheme.name"]], "name (tieredtickscheme attribute)": [[27, "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme.name"]], "nautilus_trader.model.tick_scheme": [[27, "module-nautilus_trader.model.tick_scheme"]], "nautilus_trader.model.tick_scheme.base": [[27, "module-nautilus_trader.model.tick_scheme.base"]], "nautilus_trader.model.tick_scheme.implementations.fixed": [[27, "module-nautilus_trader.model.tick_scheme.implementations.fixed"]], "nautilus_trader.model.tick_scheme.implementations.tiered": [[27, "module-nautilus_trader.model.tick_scheme.implementations.tiered"]], "next_ask_price() (fixedtickscheme method)": [[27, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme.next_ask_price"]], "next_ask_price() (tickscheme method)": [[27, "nautilus_trader.model.tick_scheme.base.TickScheme.next_ask_price"]], "next_ask_price() (tieredtickscheme method)": [[27, "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme.next_ask_price"]], "next_bid_price() (fixedtickscheme method)": [[27, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme.next_bid_price"]], "next_bid_price() (tickscheme method)": [[27, "nautilus_trader.model.tick_scheme.base.TickScheme.next_bid_price"]], "next_bid_price() (tieredtickscheme method)": [[27, "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme.next_bid_price"]], "price_precision (fixedtickscheme attribute)": [[27, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme.price_precision"]], "register_tick_scheme() (in module nautilus_trader.model.tick_scheme.base)": [[27, "nautilus_trader.model.tick_scheme.base.register_tick_scheme"]], "round_down() (in module nautilus_trader.model.tick_scheme.base)": [[27, "nautilus_trader.model.tick_scheme.base.round_down"]], "round_up() (in module nautilus_trader.model.tick_scheme.base)": [[27, "nautilus_trader.model.tick_scheme.base.round_up"]], "messagebus (class in nautilus_trader.msgbus.bus)": [[28, "nautilus_trader.msgbus.bus.MessageBus"]], "subscription (class in nautilus_trader.msgbus.subscription)": [[28, "nautilus_trader.msgbus.subscription.Subscription"]], "deregister() (messagebus method)": [[28, "nautilus_trader.msgbus.bus.MessageBus.deregister"]], "endpoints() (messagebus method)": [[28, "nautilus_trader.msgbus.bus.MessageBus.endpoints"]], "handler (subscription attribute)": [[28, "nautilus_trader.msgbus.subscription.Subscription.handler"]], "has_subscribers() (messagebus method)": [[28, "nautilus_trader.msgbus.bus.MessageBus.has_subscribers"]], "is_matching_py() (in module nautilus_trader.msgbus.bus)": [[28, "nautilus_trader.msgbus.bus.is_matching_py"]], "is_pending_request() (messagebus method)": [[28, "nautilus_trader.msgbus.bus.MessageBus.is_pending_request"]], "is_subscribed() (messagebus method)": [[28, "nautilus_trader.msgbus.bus.MessageBus.is_subscribed"]], "nautilus_trader.msgbus": [[28, "module-nautilus_trader.msgbus"]], "nautilus_trader.msgbus.bus": [[28, "module-nautilus_trader.msgbus.bus"]], "nautilus_trader.msgbus.subscription": [[28, "module-nautilus_trader.msgbus.subscription"]], "priority (subscription attribute)": [[28, "nautilus_trader.msgbus.subscription.Subscription.priority"]], "pub_count (messagebus attribute)": [[28, "nautilus_trader.msgbus.bus.MessageBus.pub_count"]], "publish() (messagebus method)": [[28, "nautilus_trader.msgbus.bus.MessageBus.publish"]], "register() (messagebus method)": [[28, "nautilus_trader.msgbus.bus.MessageBus.register"]], "req_count (messagebus attribute)": [[28, "nautilus_trader.msgbus.bus.MessageBus.req_count"]], "request() (messagebus method)": [[28, "nautilus_trader.msgbus.bus.MessageBus.request"]], "res_count (messagebus attribute)": [[28, "nautilus_trader.msgbus.bus.MessageBus.res_count"]], "response() (messagebus method)": [[28, "nautilus_trader.msgbus.bus.MessageBus.response"]], "send() (messagebus method)": [[28, "nautilus_trader.msgbus.bus.MessageBus.send"]], "sent_count (messagebus attribute)": [[28, "nautilus_trader.msgbus.bus.MessageBus.sent_count"]], "subscribe() (messagebus method)": [[28, "nautilus_trader.msgbus.bus.MessageBus.subscribe"]], "subscriptions() (messagebus method)": [[28, "nautilus_trader.msgbus.bus.MessageBus.subscriptions"]], "topic (subscription attribute)": [[28, "nautilus_trader.msgbus.subscription.Subscription.topic"]], "topics() (messagebus method)": [[28, "nautilus_trader.msgbus.bus.MessageBus.topics"]], "trader_id (messagebus attribute)": [[28, "nautilus_trader.msgbus.bus.MessageBus.trader_id"]], "unsubscribe() (messagebus method)": [[28, "nautilus_trader.msgbus.bus.MessageBus.unsubscribe"]], "bardatawrangler (class in nautilus_trader.persistence.wranglers)": [[29, "nautilus_trader.persistence.wranglers.BarDataWrangler"]], "basedatacatalog (class in nautilus_trader.persistence.catalog.base)": [[29, "nautilus_trader.persistence.catalog.base.BaseDataCatalog"]], "bytereader (class in nautilus_trader.persistence.external.readers)": [[29, "nautilus_trader.persistence.external.readers.ByteReader"]], "csvreader (class in nautilus_trader.persistence.external.readers)": [[29, "nautilus_trader.persistence.external.readers.CSVReader"]], "linepreprocessor (class in nautilus_trader.persistence.external.readers)": [[29, "nautilus_trader.persistence.external.readers.LinePreprocessor"]], "parquetdatacatalog (class in nautilus_trader.persistence.catalog.parquet)": [[29, "nautilus_trader.persistence.catalog.parquet.ParquetDataCatalog"]], "parquetreader (class in nautilus_trader.persistence.external.readers)": [[29, "nautilus_trader.persistence.external.readers.ParquetReader"]], "quotetickdatawrangler (class in nautilus_trader.persistence.wranglers)": [[29, "nautilus_trader.persistence.wranglers.QuoteTickDataWrangler"]], "reader (class in nautilus_trader.persistence.external.readers)": [[29, "nautilus_trader.persistence.external.readers.Reader"]], "streamingengine (class in nautilus_trader.persistence.streaming.engine)": [[29, "nautilus_trader.persistence.streaming.engine.StreamingEngine"]], "streamingfeatherwriter (class in nautilus_trader.persistence.streaming.writer)": [[29, "nautilus_trader.persistence.streaming.writer.StreamingFeatherWriter"]], "textreader (class in nautilus_trader.persistence.external.readers)": [[29, "nautilus_trader.persistence.external.readers.TextReader"]], "tradetickdatawrangler (class in nautilus_trader.persistence.wranglers)": [[29, "nautilus_trader.persistence.wranglers.TradeTickDataWrangler"]], "check_flush() (streamingfeatherwriter method)": [[29, "nautilus_trader.persistence.streaming.writer.StreamingFeatherWriter.check_flush"]], "close() (streamingfeatherwriter method)": [[29, "nautilus_trader.persistence.streaming.writer.StreamingFeatherWriter.close"]], "extract_generic_data_client_ids() (in module nautilus_trader.persistence.streaming.engine)": [[29, "nautilus_trader.persistence.streaming.engine.extract_generic_data_client_ids"]], "flush() (streamingfeatherwriter method)": [[29, "nautilus_trader.persistence.streaming.writer.StreamingFeatherWriter.flush"]], "generate_signal_class() (in module nautilus_trader.persistence.streaming.writer)": [[29, "nautilus_trader.persistence.streaming.writer.generate_signal_class"]], "list_from_capsule() (in module nautilus_trader.persistence.wranglers)": [[29, "nautilus_trader.persistence.wranglers.list_from_capsule"]], "nautilus_trader.persistence": [[29, "module-nautilus_trader.persistence"]], "nautilus_trader.persistence.catalog.base": [[29, "module-nautilus_trader.persistence.catalog.base"]], "nautilus_trader.persistence.catalog.parquet": [[29, "module-nautilus_trader.persistence.catalog.parquet"]], "nautilus_trader.persistence.external.readers": [[29, "module-nautilus_trader.persistence.external.readers"]], "nautilus_trader.persistence.streaming.batching": [[29, "module-nautilus_trader.persistence.streaming.batching"]], "nautilus_trader.persistence.streaming.engine": [[29, "module-nautilus_trader.persistence.streaming.engine"]], "nautilus_trader.persistence.streaming.writer": [[29, "module-nautilus_trader.persistence.streaming.writer"]], "nautilus_trader.persistence.wranglers": [[29, "module-nautilus_trader.persistence.wranglers"]], "process() (bardatawrangler method)": [[29, "nautilus_trader.persistence.wranglers.BarDataWrangler.process"]], "process() (quotetickdatawrangler method)": [[29, "nautilus_trader.persistence.wranglers.QuoteTickDataWrangler.process"]], "process() (tradetickdatawrangler method)": [[29, "nautilus_trader.persistence.wranglers.TradeTickDataWrangler.process"]], "process_bar_data() (quotetickdatawrangler method)": [[29, "nautilus_trader.persistence.wranglers.QuoteTickDataWrangler.process_bar_data"]], "write() (streamingfeatherwriter method)": [[29, "nautilus_trader.persistence.streaming.writer.StreamingFeatherWriter.write"]], "portfolio (class in nautilus_trader.portfolio.portfolio)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio"]], "portfoliofacade (class in nautilus_trader.portfolio.base)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade"]], "account() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.account"]], "account() (portfoliofacade method)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade.account"]], "analyzer (portfolio attribute)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.analyzer"]], "analyzer (portfoliofacade attribute)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade.analyzer"]], "balances_locked() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.balances_locked"]], "balances_locked() (portfoliofacade method)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade.balances_locked"]], "initialize_orders() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.initialize_orders"]], "initialize_positions() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.initialize_positions"]], "initialized (portfolio attribute)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.initialized"]], "initialized (portfoliofacade attribute)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade.initialized"]], "is_completely_flat() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.is_completely_flat"]], "is_completely_flat() (portfoliofacade method)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade.is_completely_flat"]], "is_flat() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.is_flat"]], "is_flat() (portfoliofacade method)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade.is_flat"]], "is_net_long() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.is_net_long"]], "is_net_long() (portfoliofacade method)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade.is_net_long"]], "is_net_short() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.is_net_short"]], "is_net_short() (portfoliofacade method)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade.is_net_short"]], "margins_init() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.margins_init"]], "margins_init() (portfoliofacade method)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade.margins_init"]], "margins_maint() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.margins_maint"]], "margins_maint() (portfoliofacade method)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade.margins_maint"]], "nautilus_trader.portfolio": [[30, "module-nautilus_trader.portfolio"]], "nautilus_trader.portfolio.base": [[30, "module-nautilus_trader.portfolio.base"]], "nautilus_trader.portfolio.portfolio": [[30, "module-nautilus_trader.portfolio.portfolio"]], "net_exposure() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.net_exposure"]], "net_exposure() (portfoliofacade method)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade.net_exposure"]], "net_exposures() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.net_exposures"]], "net_exposures() (portfoliofacade method)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade.net_exposures"]], "net_position() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.net_position"]], "net_position() (portfoliofacade method)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade.net_position"]], "reset() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.reset"]], "set_specific_venue() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.set_specific_venue"]], "unrealized_pnl() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.unrealized_pnl"]], "unrealized_pnl() (portfoliofacade method)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade.unrealized_pnl"]], "unrealized_pnls() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.unrealized_pnls"]], "unrealized_pnls() (portfoliofacade method)": [[30, "nautilus_trader.portfolio.base.PortfolioFacade.unrealized_pnls"]], "update_account() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.update_account"]], "update_order() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.update_order"]], "update_position() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.update_position"]], "update_quote_tick() (portfolio method)": [[30, "nautilus_trader.portfolio.portfolio.Portfolio.update_quote_tick"]], "fixedrisksizer (class in nautilus_trader.risk.sizing)": [[31, "nautilus_trader.risk.sizing.FixedRiskSizer"]], "positionsizer (class in nautilus_trader.risk.sizing)": [[31, "nautilus_trader.risk.sizing.PositionSizer"]], "riskengine (class in nautilus_trader.risk.engine)": [[31, "nautilus_trader.risk.engine.RiskEngine"]], "calculate() (fixedrisksizer method)": [[31, "nautilus_trader.risk.sizing.FixedRiskSizer.calculate"]], "calculate() (positionsizer method)": [[31, "nautilus_trader.risk.sizing.PositionSizer.calculate"]], "command_count (riskengine attribute)": [[31, "nautilus_trader.risk.engine.RiskEngine.command_count"]], "debug (riskengine attribute)": [[31, "nautilus_trader.risk.engine.RiskEngine.debug"]], "degrade() (riskengine method)": [[31, "nautilus_trader.risk.engine.RiskEngine.degrade"]], "dispose() (riskengine method)": [[31, "nautilus_trader.risk.engine.RiskEngine.dispose"]], "event_count (riskengine attribute)": [[31, "nautilus_trader.risk.engine.RiskEngine.event_count"]], "execute() (riskengine method)": [[31, "nautilus_trader.risk.engine.RiskEngine.execute"]], "fault() (riskengine method)": [[31, "nautilus_trader.risk.engine.RiskEngine.fault"]], "fully_qualified_name() (riskengine class method)": [[31, "nautilus_trader.risk.engine.RiskEngine.fully_qualified_name"]], "id (riskengine attribute)": [[31, "nautilus_trader.risk.engine.RiskEngine.id"]], "instrument (fixedrisksizer attribute)": [[31, "nautilus_trader.risk.sizing.FixedRiskSizer.instrument"]], "instrument (positionsizer attribute)": [[31, "nautilus_trader.risk.sizing.PositionSizer.instrument"]], "is_bypassed (riskengine attribute)": [[31, "nautilus_trader.risk.engine.RiskEngine.is_bypassed"]], "is_degraded (riskengine attribute)": [[31, "nautilus_trader.risk.engine.RiskEngine.is_degraded"]], "is_disposed (riskengine attribute)": [[31, "nautilus_trader.risk.engine.RiskEngine.is_disposed"]], "is_faulted (riskengine attribute)": [[31, "nautilus_trader.risk.engine.RiskEngine.is_faulted"]], "is_initialized (riskengine attribute)": [[31, "nautilus_trader.risk.engine.RiskEngine.is_initialized"]], "is_running (riskengine attribute)": [[31, "nautilus_trader.risk.engine.RiskEngine.is_running"]], "is_stopped (riskengine attribute)": [[31, "nautilus_trader.risk.engine.RiskEngine.is_stopped"]], "max_notional_per_order() (riskengine method)": [[31, "nautilus_trader.risk.engine.RiskEngine.max_notional_per_order"]], "max_notionals_per_order() (riskengine method)": [[31, "nautilus_trader.risk.engine.RiskEngine.max_notionals_per_order"]], "max_order_modify_rate() (riskengine method)": [[31, "nautilus_trader.risk.engine.RiskEngine.max_order_modify_rate"]], "max_order_submit_rate() (riskengine method)": [[31, "nautilus_trader.risk.engine.RiskEngine.max_order_submit_rate"]], "nautilus_trader.risk": [[31, "module-nautilus_trader.risk"]], "nautilus_trader.risk.engine": [[31, "module-nautilus_trader.risk.engine"]], "nautilus_trader.risk.sizing": [[31, "module-nautilus_trader.risk.sizing"]], "process() (riskengine method)": [[31, "nautilus_trader.risk.engine.RiskEngine.process"]], "reset() (riskengine method)": [[31, "nautilus_trader.risk.engine.RiskEngine.reset"]], "resume() (riskengine method)": [[31, "nautilus_trader.risk.engine.RiskEngine.resume"]], "set_max_notional_per_order() (riskengine method)": [[31, "nautilus_trader.risk.engine.RiskEngine.set_max_notional_per_order"]], "set_trading_state() (riskengine method)": [[31, "nautilus_trader.risk.engine.RiskEngine.set_trading_state"]], "start() (riskengine method)": [[31, "nautilus_trader.risk.engine.RiskEngine.start"]], "state (riskengine attribute)": [[31, "nautilus_trader.risk.engine.RiskEngine.state"]], "stop() (riskengine method)": [[31, "nautilus_trader.risk.engine.RiskEngine.stop"]], "trader_id (riskengine attribute)": [[31, "nautilus_trader.risk.engine.RiskEngine.trader_id"]], "trading_state (riskengine attribute)": [[31, "nautilus_trader.risk.engine.RiskEngine.trading_state"]], "type (riskengine attribute)": [[31, "nautilus_trader.risk.engine.RiskEngine.type"]], "update_instrument() (fixedrisksizer method)": [[31, "nautilus_trader.risk.sizing.FixedRiskSizer.update_instrument"]], "update_instrument() (positionsizer method)": [[31, "nautilus_trader.risk.sizing.PositionSizer.update_instrument"]], "msgpackserializer (class in nautilus_trader.serialization.msgpack.serializer)": [[32, "nautilus_trader.serialization.msgpack.serializer.MsgPackSerializer"]], "parquetserializer (class in nautilus_trader.serialization.arrow.serializer)": [[32, "nautilus_trader.serialization.arrow.serializer.ParquetSerializer"]], "serializer (class in nautilus_trader.serialization.base)": [[32, "nautilus_trader.serialization.base.Serializer"]], "deserialize() (msgpackserializer method)": [[32, "nautilus_trader.serialization.msgpack.serializer.MsgPackSerializer.deserialize"]], "deserialize() (parquetserializer static method)": [[32, "nautilus_trader.serialization.arrow.serializer.ParquetSerializer.deserialize"]], "deserialize() (serializer method)": [[32, "nautilus_trader.serialization.base.Serializer.deserialize"]], "get_cls_table() (in module nautilus_trader.serialization.arrow.serializer)": [[32, "nautilus_trader.serialization.arrow.serializer.get_cls_table"]], "get_partition_keys() (in module nautilus_trader.serialization.arrow.serializer)": [[32, "nautilus_trader.serialization.arrow.serializer.get_partition_keys"]], "get_schema() (in module nautilus_trader.serialization.arrow.serializer)": [[32, "nautilus_trader.serialization.arrow.serializer.get_schema"]], "list_schemas() (in module nautilus_trader.serialization.arrow.serializer)": [[32, "nautilus_trader.serialization.arrow.serializer.list_schemas"]], "nautilus_trader.serialization": [[32, "module-nautilus_trader.serialization"]], "nautilus_trader.serialization.arrow.serializer": [[32, "module-nautilus_trader.serialization.arrow.serializer"]], "nautilus_trader.serialization.base": [[32, "module-nautilus_trader.serialization.base"]], "nautilus_trader.serialization.msgpack.serializer": [[32, "module-nautilus_trader.serialization.msgpack.serializer"]], "register_parquet() (in module nautilus_trader.serialization.arrow.serializer)": [[32, "nautilus_trader.serialization.arrow.serializer.register_parquet"]], "register_serializable_object() (in module nautilus_trader.serialization.base)": [[32, "nautilus_trader.serialization.base.register_serializable_object"]], "serialize() (msgpackserializer method)": [[32, "nautilus_trader.serialization.msgpack.serializer.MsgPackSerializer.serialize"]], "serialize() (parquetserializer static method)": [[32, "nautilus_trader.serialization.arrow.serializer.ParquetSerializer.serialize"]], "serialize() (serializer method)": [[32, "nautilus_trader.serialization.base.Serializer.serialize"]], "timestamps_as_iso8601 (msgpackserializer attribute)": [[32, "nautilus_trader.serialization.msgpack.serializer.MsgPackSerializer.timestamps_as_iso8601"]], "timestamps_as_str (msgpackserializer attribute)": [[32, "nautilus_trader.serialization.msgpack.serializer.MsgPackSerializer.timestamps_as_str"]], "nautiluskernel (class in nautilus_trader.system.kernel)": [[33, "nautilus_trader.system.kernel.NautilusKernel"]], "cache (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.cache"]], "catalog (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.catalog"]], "clock (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.clock"]], "data_engine (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.data_engine"]], "dispose() (nautiluskernel method)": [[33, "nautilus_trader.system.kernel.NautilusKernel.dispose"]], "emulator (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.emulator"]], "environment (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.environment"]], "exec_engine (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.exec_engine"]], "executor (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.executor"]], "instance_id (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.instance_id"]], "load_state (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.load_state"]], "log (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.log"]], "logger (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.logger"]], "loop (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.loop"]], "loop_sig_callback (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.loop_sig_callback"]], "machine_id (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.machine_id"]], "msgbus (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.msgbus"]], "name (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.name"]], "nautilus_trader.system": [[33, "module-nautilus_trader.system"]], "nautilus_trader.system.kernel": [[33, "module-nautilus_trader.system.kernel"]], "portfolio (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.portfolio"]], "risk_engine (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.risk_engine"]], "save_state (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.save_state"]], "trader (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.trader"]], "trader_id (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.trader_id"]], "ts_created (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.ts_created"]], "writer (nautiluskernel property)": [[33, "nautilus_trader.system.kernel.NautilusKernel.writer"]], "economicnewseventfilter (class in nautilus_trader.trading.filters)": [[34, "nautilus_trader.trading.filters.EconomicNewsEventFilter"]], "forexsession (class in nautilus_trader.trading.filters)": [[34, "nautilus_trader.trading.filters.ForexSession"]], "forexsessionfilter (class in nautilus_trader.trading.filters)": [[34, "nautilus_trader.trading.filters.ForexSessionFilter"]], "newsevent (class in nautilus_trader.trading.filters)": [[34, "nautilus_trader.trading.filters.NewsEvent"]], "newsimpact (class in nautilus_trader.trading.filters)": [[34, "nautilus_trader.trading.filters.NewsImpact"]], "strategy (class in nautilus_trader.trading.strategy)": [[34, "nautilus_trader.trading.strategy.Strategy"]], "trader (class in nautilus_trader.trading.trader)": [[34, "nautilus_trader.trading.trader.Trader"]], "actor_ids() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.actor_ids"]], "actor_states() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.actor_states"]], "actors() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.actors"]], "add_actor() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.add_actor"]], "add_actors() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.add_actors"]], "add_exec_algorithm() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.add_exec_algorithm"]], "add_exec_algorithms() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.add_exec_algorithms"]], "add_strategies() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.add_strategies"]], "add_strategy() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.add_strategy"]], "add_synthetic() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.add_synthetic"]], "cache (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.cache"]], "cancel_all_orders() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.cancel_all_orders"]], "cancel_gtd_expiry() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.cancel_gtd_expiry"]], "cancel_order() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.cancel_order"]], "check_residuals() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.check_residuals"]], "clear_actors() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.clear_actors"]], "clear_exec_algorithms() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.clear_exec_algorithms"]], "clear_strategies() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.clear_strategies"]], "clock (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.clock"]], "close_all_positions() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.close_all_positions"]], "close_position() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.close_position"]], "config (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.config"]], "currencies (economicnewseventfilter property)": [[34, "nautilus_trader.trading.filters.EconomicNewsEventFilter.currencies"]], "degrade() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.degrade"]], "degrade() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.degrade"]], "deregister_warning_event() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.deregister_warning_event"]], "dispose() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.dispose"]], "dispose() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.dispose"]], "exec_algorithm_ids() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.exec_algorithm_ids"]], "exec_algorithm_states() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.exec_algorithm_states"]], "exec_algorithms() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.exec_algorithms"]], "external_order_claims (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.external_order_claims"]], "fault() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.fault"]], "fault() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.fault"]], "fully_qualified_name() (newsevent class method)": [[34, "nautilus_trader.trading.filters.NewsEvent.fully_qualified_name"]], "fully_qualified_name() (strategy class method)": [[34, "nautilus_trader.trading.strategy.Strategy.fully_qualified_name"]], "fully_qualified_name() (trader class method)": [[34, "nautilus_trader.trading.trader.Trader.fully_qualified_name"]], "generate_account_report() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.generate_account_report"]], "generate_order_fills_report() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.generate_order_fills_report"]], "generate_orders_report() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.generate_orders_report"]], "generate_positions_report() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.generate_positions_report"]], "handle_bar() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_bar"]], "handle_bars() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_bars"]], "handle_data() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_data"]], "handle_event() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_event"]], "handle_historical_data() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_historical_data"]], "handle_instrument() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_instrument"]], "handle_instrument_close() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_instrument_close"]], "handle_instrument_status_update() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_instrument_status_update"]], "handle_instruments() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_instruments"]], "handle_order_book() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_order_book"]], "handle_order_book_deltas() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_order_book_deltas"]], "handle_quote_tick() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_quote_tick"]], "handle_quote_ticks() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_quote_ticks"]], "handle_ticker() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_ticker"]], "handle_trade_tick() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_trade_tick"]], "handle_trade_ticks() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_trade_ticks"]], "handle_venue_status_update() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.handle_venue_status_update"]], "has_pending_requests() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.has_pending_requests"]], "id (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.id"]], "id (trader attribute)": [[34, "nautilus_trader.trading.trader.Trader.id"]], "impacts (economicnewseventfilter property)": [[34, "nautilus_trader.trading.filters.EconomicNewsEventFilter.impacts"]], "indicators_initialized() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.indicators_initialized"]], "is_degraded (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.is_degraded"]], "is_degraded (trader attribute)": [[34, "nautilus_trader.trading.trader.Trader.is_degraded"]], "is_disposed (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.is_disposed"]], "is_disposed (trader attribute)": [[34, "nautilus_trader.trading.trader.Trader.is_disposed"]], "is_faulted (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.is_faulted"]], "is_faulted (trader attribute)": [[34, "nautilus_trader.trading.trader.Trader.is_faulted"]], "is_initialized (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.is_initialized"]], "is_initialized (trader attribute)": [[34, "nautilus_trader.trading.trader.Trader.is_initialized"]], "is_pending_request() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.is_pending_request"]], "is_running (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.is_running"]], "is_running (trader attribute)": [[34, "nautilus_trader.trading.trader.Trader.is_running"]], "is_stopped (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.is_stopped"]], "is_stopped (trader attribute)": [[34, "nautilus_trader.trading.trader.Trader.is_stopped"]], "load() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.load"]], "load() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.load"]], "local_from_utc() (forexsessionfilter method)": [[34, "nautilus_trader.trading.filters.ForexSessionFilter.local_from_utc"]], "log (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.log"]], "modify_order() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.modify_order"]], "msgbus (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.msgbus"]], "nautilus_trader.trading": [[34, "module-nautilus_trader.trading"]], "nautilus_trader.trading.filters": [[34, "module-nautilus_trader.trading.filters"]], "nautilus_trader.trading.strategy": [[34, "module-nautilus_trader.trading.strategy"]], "nautilus_trader.trading.trader": [[34, "module-nautilus_trader.trading.trader"]], "next_end() (forexsessionfilter method)": [[34, "nautilus_trader.trading.filters.ForexSessionFilter.next_end"]], "next_event() (economicnewseventfilter method)": [[34, "nautilus_trader.trading.filters.EconomicNewsEventFilter.next_event"]], "next_start() (forexsessionfilter method)": [[34, "nautilus_trader.trading.filters.ForexSessionFilter.next_start"]], "oms_type (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.oms_type"]], "on_bar() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_bar"]], "on_data() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_data"]], "on_degrade() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_degrade"]], "on_dispose() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_dispose"]], "on_event() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_event"]], "on_fault() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_fault"]], "on_historical_data() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_historical_data"]], "on_instrument() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_instrument"]], "on_instrument_close() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_instrument_close"]], "on_instrument_status_update() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_instrument_status_update"]], "on_load() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_load"]], "on_order_book() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_order_book"]], "on_order_book_deltas() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_order_book_deltas"]], "on_quote_tick() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_quote_tick"]], "on_reset() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_reset"]], "on_resume() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_resume"]], "on_save() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_save"]], "on_start() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_start"]], "on_stop() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_stop"]], "on_ticker() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_ticker"]], "on_trade_tick() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_trade_tick"]], "on_venue_status_update() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.on_venue_status_update"]], "order_factory (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.order_factory"]], "order_id_tag (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.order_id_tag"]], "pending_requests() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.pending_requests"]], "portfolio (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.portfolio"]], "prev_end() (forexsessionfilter method)": [[34, "nautilus_trader.trading.filters.ForexSessionFilter.prev_end"]], "prev_event() (economicnewseventfilter method)": [[34, "nautilus_trader.trading.filters.EconomicNewsEventFilter.prev_event"]], "prev_start() (forexsessionfilter method)": [[34, "nautilus_trader.trading.filters.ForexSessionFilter.prev_start"]], "publish_data() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.publish_data"]], "publish_signal() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.publish_signal"]], "query_order() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.query_order"]], "register() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.register"]], "register_base() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.register_base"]], "register_indicator_for_bars() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.register_indicator_for_bars"]], "register_indicator_for_quote_ticks() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.register_indicator_for_quote_ticks"]], "register_indicator_for_trade_ticks() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.register_indicator_for_trade_ticks"]], "register_warning_event() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.register_warning_event"]], "registered_indicators (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.registered_indicators"]], "request_bars() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.request_bars"]], "request_data() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.request_data"]], "request_instrument() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.request_instrument"]], "request_instruments() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.request_instruments"]], "request_quote_ticks() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.request_quote_ticks"]], "request_trade_ticks() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.request_trade_ticks"]], "reset() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.reset"]], "reset() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.reset"]], "resume() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.resume"]], "resume() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.resume"]], "save() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.save"]], "save() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.save"]], "start() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.start"]], "start() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.start"]], "state (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.state"]], "state (trader attribute)": [[34, "nautilus_trader.trading.trader.Trader.state"]], "stop() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.stop"]], "stop() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.stop"]], "strategies() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.strategies"]], "strategy_ids() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.strategy_ids"]], "strategy_states() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.strategy_states"]], "submit_order() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.submit_order"]], "submit_order_list() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.submit_order_list"]], "subscribe() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.subscribe"]], "subscribe_bars() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.subscribe_bars"]], "subscribe_data() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.subscribe_data"]], "subscribe_instrument() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.subscribe_instrument"]], "subscribe_instrument_close() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.subscribe_instrument_close"]], "subscribe_instrument_status_updates() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.subscribe_instrument_status_updates"]], "subscribe_instruments() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.subscribe_instruments"]], "subscribe_order_book_deltas() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.subscribe_quote_ticks"]], "subscribe_ticker() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.subscribe_ticker"]], "subscribe_trade_ticks() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.subscribe_trade_ticks"]], "subscribe_venue_status_updates() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.subscribe_venue_status_updates"]], "to_importable_config() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.to_importable_config"]], "trader_id (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.trader_id"]], "trader_id (trader attribute)": [[34, "nautilus_trader.trading.trader.Trader.trader_id"]], "ts_event (newsevent property)": [[34, "nautilus_trader.trading.filters.NewsEvent.ts_event"]], "ts_init (newsevent property)": [[34, "nautilus_trader.trading.filters.NewsEvent.ts_init"]], "type (strategy attribute)": [[34, "nautilus_trader.trading.strategy.Strategy.type"]], "type (trader attribute)": [[34, "nautilus_trader.trading.trader.Trader.type"]], "unfiltered_data_end (economicnewseventfilter property)": [[34, "nautilus_trader.trading.filters.EconomicNewsEventFilter.unfiltered_data_end"]], "unfiltered_data_start (economicnewseventfilter property)": [[34, "nautilus_trader.trading.filters.EconomicNewsEventFilter.unfiltered_data_start"]], "unsubscribe() (trader method)": [[34, "nautilus_trader.trading.trader.Trader.unsubscribe"]], "unsubscribe_bars() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.unsubscribe_bars"]], "unsubscribe_data() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.unsubscribe_data"]], "unsubscribe_instrument() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.unsubscribe_instrument"]], "unsubscribe_instrument_status_updates() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.unsubscribe_instrument_status_updates"]], "unsubscribe_instruments() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.unsubscribe_trade_ticks"]], "unsubscribe_venue_status_updates() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.unsubscribe_venue_status_updates"]], "update_synthetic() (strategy method)": [[34, "nautilus_trader.trading.strategy.Strategy.update_synthetic"]]}})